# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class RegisterPromptModelParametersRequest(pydantic.BaseModel):
    temperature: float
    max_tokens: int
    stop: typing.Optional[typing.List[str]] = None
    top_p: float
    top_k: typing.Optional[int] = None
    frequency_penalty: float
    presence_penalty: float
    logit_bias: typing.Optional[typing.Dict[str, typing.Optional[float]]] = None
    custom_parameters: typing.Optional[typing.Dict[str, typing.Any]] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
