# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from .register_prompt_prompt import RegisterPromptPrompt
from .registered_prompt_deployment import RegisteredPromptDeployment
from .registered_prompt_model_version import RegisteredPromptModelVersion
from .registered_prompt_sandbox import RegisteredPromptSandbox
from .registered_prompt_sandbox_snapshot import RegisteredPromptSandboxSnapshot

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class RegisterPromptResponse(pydantic.BaseModel):
    prompt: RegisterPromptPrompt = pydantic.Field()
    """
    Information about the generated prompt
    """

    sandbox_snapshot: RegisteredPromptSandboxSnapshot = pydantic.Field()
    """
    Information about the generated sandbox snapshot
    """

    sandbox: RegisteredPromptSandbox = pydantic.Field()
    """
    Information about the generated sandbox
    """

    model_version: RegisteredPromptModelVersion = pydantic.Field()
    """
    Information about the generated model version
    """

    prompt_version_id: str = pydantic.Field()
    """
    The ID of the generated prompt version
    """

    deployment: RegisteredPromptDeployment = pydantic.Field()
    """
    Information about the generated deployment
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
