[project]
name = "workfloz"
version = "0.1.0"
description = "A simple library for building complex workflows."
readme = "README.md"
license = {file = "LICENSE"}
authors = [{name = "MaÃ«l Jamet", email = "maeljamet@hotmail.com"}]
keywords = [
    "workflows",
    "pipelines",
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
]
requires-python = ">=3.10"
dependencies = [
]

[project.urls]
"Source Code" = "https://github.com/maejam/workfloz"

[build-system]
requires = ["flit_core >=3.9"]
build-backend = "flit_core.buildapi"

[tool.flit.sdist]
include = [
    "src/",
    "requirements/",
    "tests/",
    "examples/"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "error",
]

[tool.coverage.run]
branch = true
source = ["workfloz", "tests"]

[tool.mypy]
python_version = "3.10"
files = ["src/workfloz"]
show_error_codes = true
pretty = true
strict = true

[tool.ruff]
src = ["src"]
fix = true
show-fixes = true
output-format = "full"

[tool.ruff.lint]
select = [
    "B",    # flake8-bugbear
    "C901", # McCabe complexity
    "E",    # pycodestyle error
    "F",    # pyflakes
    "I",    # isort
    "UP",   # pyupgrade
    "W",    # pycodestyle warning
]
ignore-init-module-imports = true

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["F841"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
force-single-line = true
order-by-type = false

[tool.ruff.format]
docstring-code-format = true  # format code examples in docstrings

[tool.semantic_release]
logging_use_named_masks = true
commit_author = "workfloz <workfloz>"
commit_message = "build(release): bump to v{version}\n\nAutomatically generated by python-semantic-release."
major_on_zero = false
version_toml = ["pyproject.toml:project.version"]
build_command = """
    python -m pip install flit~=3.9
    flit build --no-use-vcs
"""

[tool.semantic_release.branches.main]
match = "main"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = ["ci(pre-commit.ci): autofix"]

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
ignore_token_for_push = true

