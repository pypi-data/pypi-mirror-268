Metadata-Version: 2.1
Name: webwithpy
Version: 0.7.5.3
Summary: 
Author: Sven Keimpema
Requires-Python: >=3.10,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: asyncio (>=3.4.3,<4.0.0)
Requires-Dist: bcrypt (>=3.2.0,<4.0.0)
Requires-Dist: click (>=8.1.7,<9.0.0)
Requires-Dist: cython (>=3.0.5,<4.0.0)
Requires-Dist: mysql-connector-python (>=8.3.0,<9.0.0)
Requires-Dist: pyjwt (>=2.8.0,<3.0.0)
Requires-Dist: requests-toolbelt (>=1.0.0,<2.0.0)
Requires-Dist: setuptools (>=69.0.2,<70.0.0)
Description-Content-Type: text/markdown

![Webwithpy](images/wwp.png)

Webwithpy is a free to use fullstack web framework mainly focussed on performance and ease of use.
The goal of webwithpy is to have an easy-to-use web framework whilst still maintaining high performance.

A clear example of the use of webwithpy:
```python
from webwithpy import run_server
from webwithpy.routing import GET
from webwithpy.orm import DB, Table, Field

db = DB('databases/db.sqlite')


class User(Table):
    table_name = "user"
    name = Field("string")
    email = Field("string")
    profile_picture = Field("image")


@GET('/')
def view_users():
    # user logic goes here
    return (db.user.id >= 0).select()


if __name__ == "__main__":
    # all tables that are defined before this statement will be initialized
    db.create_tables()

    # run the server when you're done creating views and databases
    run_server()
```

## Documentation
for more detailed information about what the framework can do please goto:
[webwithpy docs](https://webwithpy.readthedocs.io)

