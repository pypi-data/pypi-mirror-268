"use strict";(self.webpackChunkjupyterlab_wall=self.webpackChunkjupyterlab_wall||[]).push([[474],{474:(e,t,s)=>{s.r(t),s.d(t,{default:()=>S});var r=s(809),a=s(604),i=s(214),n=s(603);async function l(e="",t={}){const s=n.ServerConnection.makeSettings(),r=i.URLExt.join(s.baseUrl,"jupyterlab_wall",e);let a;try{console.log(r),a=await n.ServerConnection.makeRequest(r,t,s)}catch(e){throw new n.ServerConnection.NetworkError(e)}let l=await a.text();if(l.length>0)try{l=JSON.parse(l)}catch(e){console.error(e),console.log("Not a JSON response body.",a)}if(!a.ok)throw new n.ServerConnection.ResponseError(a,l.message||l);return l}var o=s(644);class h{constructor(e,t,s,r){this.alertType=e,this.message=t,this.priority=s,this.start=new Date(r),this.alertID=this.alertType+"_"+this.start.toISOString()}getType(){return this.alertType}getMessage(){return this.message}getPriority(){return this.priority}getStartDateTime(){return this.start}getID(){return this.alertID}toJSON(){return{type:this.alertType,message:this.message,priority:this.priority,start:this.start.toISOString()}}}var c=s(112),d=s(483),u=s(827);const g=new u.LabIcon({name:"jupyterlab-wall:alert",svgstr:'<?xml version="1.0" encoding="utf-8"?>\n<svg width="32" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M3 18L10 4C10 3 13 3 13 4L20 18C20.5 19 20 21 18 21H5C3.5 21 2 19.75 3 18Z" stroke="#000000" fill="#eed202" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n    <circle cx="11.5" cy="17" r="1" fill="#000000"/>\n    <path d="M11.5 10L11.5 14" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n</svg>'}),p=new u.LabIcon({name:"jupyterlab-wall:menu",svgstr:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n  <g class="jp-icon3 jp-icon-selectable" fill="#616161">\n    <path d="M 4 6 H 20 V 4 H 20 L 4 4"/>\n    <path d="M 4 12 H 20 V 10 H 20 L 4 10"/>\n    <path d="M 4 18 H 20 V 16 H 20 L 4 16"/>\n  </g>\n</svg>'});class m extends c.Widget{constructor(e,t){super({node:document.createElement("div")}),this.addAlert=async(e,t)=>this.findAlertIndex(t)>-1?(console.error(`attempting to add duplicate value ${t.getID()}`),Promise.resolve()):(-1===this.findAlertIndex(t)&&(this.alerts.push(t),this.alerts.sort(((e,t)=>e.getPriority()<t.getPriority()?0:1)),this.setActiveAlert(0)),Promise.resolve()),this.removeAlert=async(e,t)=>{if(0===this.alerts.length)return console.error("trying to remove from an empty array"),Promise.resolve();const s=this.findAlertIndex(t);if(-1!==s)return s<this.alerts.length&&this.alerts.splice(s,1),this.alerts.length>0?this.setActiveAlert(0):(this.close(),this.dispose()),Promise.resolve();console.error(`${t.getID()} not found for removal`)},this._alertDismissed=new o.Signal(this),this.id=`jp-jupyterlab-wall-alert-header-${d.UUID.uuid4()}`,this.addClass("jp-jupyterlab-wall-header"),this.title.label="JupyterLab Alert",this.title.caption=e[0].getMessage(),this.alerts=Array.from(e),this.activeAlert=0,this.nextAlert=1===this.alerts.length?0:1,this.manager=t,this.manager.attachHeader(this),this.manager.alertAddedSignal.connect(this.addAlert,this),this.manager.alertRemovedSignal.connect(this.removeAlert,this);const s=document.createElement("div");s.classList.add("jp-jupyterlab-wall-header-icon"),g.element({container:s}),this.alertMessageOuterDiv=document.createElement("div"),this.alertMessageOuterDiv.classList.add("jp-jupyterlab-wall-header-message"),this.alertMessageDiv=document.createElement("p"),this.alertMessageOuterDiv.append(this.alertMessageDiv),this.sidePanel=document.createElement("div"),this.sidePanel.classList.add("jp-jupyterlab-wall-header-sidepanel"),this.sidePanelButtonDiv=document.createElement("div"),this.sidePanelButtonDiv.classList.add("jp-jupyterlab-wall-header-button-outer"),this.sidePanelButtonDiv.onclick=()=>{this.sidePanel.classList.toggle("jp-jupyterlab-wall-header-sidepanel-open")},this.sidePanelOpenButton=document.createElement("div"),this.sidePanelOpenButton.classList.add("jp-jupyterlab-wall-header-button"),this.sidePanelOpenButton.classList.add("jp-icon-selectable-inverse"),p.element({container:this.sidePanelOpenButton}),this.sidePanelButtonDiv.append(this.sidePanelOpenButton);const r=document.createElement("ul");r.classList.add("jp-jupyterlab-wall-header-menu");const a=document.createElement("li");this.alertCloseLabel=document.createElement("span");const i=u.closeIcon.element();i.classList.add("jp-jupyterlab-wall-header-menu-item-icon"),a.classList.add("jp-jupyterlab-wall-header-menu-item"),a.onclick=async()=>{try{this._alertDismissed.emit(this.alerts[this.activeAlert])}catch(e){console.error("Failed to get active alert and send dismissed signal"),console.error(e)}},a.append(i),a.append(this.alertCloseLabel),this.alertSwitchListItem=document.createElement("li"),this.alertSwitchListItem.classList.add("jp-jupyterlab-wall-header-menu-item"),this.alertSwitchListItem.onclick=()=>{this.setActiveAlert(this.nextAlert)};const n=u.fastForwardIcon.svgstr.replace('width="24"','width="16"').replace('height="24"','height="16"'),l=new u.LabIcon({name:"jupyterlab-wall:next-alert",svgstr:n}).element();l.classList.add("jp-jupyterlab-wall-header-menu-item-icon"),this.alertSwitchListItem.append(l),this.alertSwitchLabel=document.createElement("span"),this.alertSwitchLabel.textContent="",this.alertSwitchListItem.append(this.alertSwitchLabel);const h=document.createElement("div");h.classList.add("jp-jupyterlab-wall-header-menu-item");const c=u.blankIcon.element();c.classList.add("jp-jupyterlab-wall-header-menu-item-icon"),this.alertActiveCountsLabel=document.createElement("span"),h.append(c),h.append(this.alertActiveCountsLabel),r.append(a),r.append(this.alertSwitchListItem),r.append(h),this.sidePanel.append(r),this.setActiveAlert(0),this.node.append(s),this.node.append(this.alertMessageOuterDiv),this.node.append(this.sidePanelButtonDiv),this.node.append(this.sidePanel)}get alertDismissed(){return this._alertDismissed}getAlerts(){return Array.from(this.alerts)}dispose(){super.dispose(),this.manager.detachHeader(this),this.manager.alertRemovedSignal.disconnect(this.addAlert,this),this.manager.alertAddedSignal.disconnect(this.removeAlert,this)}setActiveAlert(e){const t=this.activeAlert;if(e>-1&&e<this.alerts.length){this.activeAlert=e,e===this.alerts.length-1?this.nextAlert=0:this.nextAlert=e+1;const s=this.alerts[this.activeAlert].getMessage(),r=this.alerts[this.activeAlert].getType(),a=this.alerts[this.nextAlert].getType();this.alertMessageDiv.setAttribute("title",s),this.alertMessageDiv.textContent=`${this.alerts[this.activeAlert].getMessage()} - ${this.alerts[this.activeAlert].getStartDateTime()}`,this.alertCloseLabel.textContent=`Dismiss ${r}`,this.alerts.length>1?(t!==this.activeAlert&&(this.alertMessageOuterDiv.removeChild(this.alertMessageDiv),this.alertMessageDiv.offsetWidth,this.alertMessageOuterDiv.append(this.alertMessageDiv)),this.alertSwitchListItem.style.display="",this.alertSwitchLabel.textContent=`View ${a}`,this.alertActiveCountsLabel.textContent=`${this.alerts.length} alerts`):(this.alertSwitchListItem.style.display="none",this.alertSwitchLabel.textContent="",this.alertActiveCountsLabel.textContent=`${this.alerts.length} alert`)}else console.error(`${e} out of range for this.alerts in setActiveAlert`);this.update()}findAlertIndex(e){for(let t=this.alerts.length-1;t>=0;t--)if(this.alerts[t].getID()===e.getID())return t;return-1}}class v{constructor(){this.locked=!1}lock(){return new Promise((e=>{this.locked?setTimeout((()=>this.lock().then(e)),100):(this.locked=!0,e())}))}unlock(){this.locked=!1}}const w="jupyterlab-wall:activeAlerts",y="jupyterlab-wall:dismissedAlerts",A=["code-viewer:open","console:open","console:create","docmanager:clone","docmanager:new-untitled","docmanager:open","fileeditor:create-new","fileeditor:create-new-markdown-file","launcher:create","notebook:create-new","terminal:create-new"];class f extends Object{constructor(e,t){super(),this._alertAddedSignal=new o.Signal(this),this._alertRemovedSignal=new o.Signal(this),this._handleIncomingAlerts=async()=>{const e=await this._getServiceAlerts(),t=await this._getSavedAlerts(w);if(0===e.length&&0===t.length)return;const s=await this._getSavedAlerts(y);t.forEach((t=>{for(let s=e.length-1;s>=0;s--)if(t.getID()===e[s].getID())return;for(let e=s.length-1;e>=0;e--)if(t.getID()===s[e].getID())return;this._alertRemovedSignal.emit(t)}));const r=Array.from(s).filter((t=>{for(let s=e.length-1;s>=0;s--)if(e[s].getID()===t.getID())return!0;return!1}));await this._saveAlerts(r,y);const a=Array.from(e).filter((e=>{for(let t=r.length-1;t>=0;t--)if(r[t].getID()===e.getID())return!1;for(let s=t.length-1;s>=0;s--)if(t[s].getID()===e.getID())return!1;return!0}));await this._saveAlerts(e,w);for(const e of a)this._alertAddedSignal.emit(e),await this._handleNewHeaders(),this._sendNotification(e);return Promise.resolve()},this.app=e,this.state=t,this.stateMutex=new v,this.pollInterval=5e3+Math.floor(1001*Math.random()),this.app.commands.commandExecuted.connect((async(e,t)=>(A.indexOf(t.id)>-1&&(await t.result,await this._handleNewHeaders()),Promise.resolve(t))))}getPollInterval(){return this.pollInterval}async watchAlertStatus(){setInterval(this._handleIncomingAlerts,this.pollInterval)}get alertAddedSignal(){return this._alertAddedSignal}get alertRemovedSignal(){return this._alertRemovedSignal}attachHeader(e){e.alertDismissed.connect(this._dismissAlert,this)}detachHeader(e){e.alertDismissed.disconnect(this._dismissAlert,this)}async _handleNewHeaders(){const e=await this._getSavedAlerts(w);if(0===e.length)return;const t=await this._getSavedAlerts(y),s=Array.from(e).filter((e=>{for(let s=t.length-1;s>=0;s--)if(t[s].getID()===e.getID())return!1;return!0}));if(0===s.length)return;const r=this.app.shell.widgets();let i=null;for(;void 0!==(i=r.next());)try{if(i instanceof a.MainAreaWidget&&!i.isDisposed&&0===i.contentHeader.widgets.length){const e=new m(s,this);i.contentHeader.direction="left-to-right",i.contentHeader.addWidget(e)}}catch(e){console.error(`Unexpected error adding alert to tab.\n${e}`)}return Promise.resolve()}async _getServiceAlerts(){return l("should_alert").then((async e=>{try{if(null==e)return[];const t=[];for(const s in e.data)if(e.data[s].active){const r=new h(s,e.data[s].message,e.data[s].priority,e.data[s].start);t.push(r)}return t}catch(e){return console.error("should_alert request failed"),console.error(e),[]}}))}async _dismissAlert(e,t){const s=await this._getSavedAlerts(y);return s.push(t),await this._saveAlerts(s,y),this._alertRemovedSignal.emit(t),Promise.resolve()}async _getSavedAlerts(e){return this.state.fetch(e).then((e=>{if(void 0===e)return[];const t=JSON.parse(JSON.stringify(e)),s=[];for(const e in t)s.push(new h(t[e].type,t[e].message,t[e].priority,t[e].start));return s})).catch((t=>(console.error(`_fetchAlerts(${e}) fetch failed`),console.error(t),[])))}async _saveAlerts(e,t){await this.stateMutex.lock();const s={};e.forEach((e=>s[e.getID()]=e.toJSON()));const r=await this.state.save(t,s).then((e=>!0)).catch((s=>(console.error(`_saveAlerts(${e}, ${t}) error`),console.error(s),!1)));return this.stateMutex.unlock(),Promise.resolve(r)}_sendNotification(e){a.Notification.warning("Alert - "+e.getMessage()+"     "+e.getStartDateTime().toISOString())}}const S={id:"jupyterlab-wall:plugin",description:"A JupyterLab extension.",autoStart:!0,requires:[a.ICommandPalette,r.IStateDB],activate:async(e,t,s)=>{console.log("JupyterLab extension jupyterlab-wall is activated!"),l("get_example").catch((e=>{console.error(`The jupyterlab_wall server extension appears to be missing.\n${e}`)}));try{const t=new f(e,s);await t.watchAlertStatus()}catch(e){console.error(e)}}}}}]);