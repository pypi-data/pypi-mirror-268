# Generated by Django 4.1.13 on 2024-04-12 06:36

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import rest_framework_util.db.models.manager
import shortcut_util.unique


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=shortcut_util.unique.uuid_id,
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="是否激活")),
                (
                    "create_datetime",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_datetime",
                    models.DateTimeField(auto_now=True, null=True, verbose_name="更新时间"),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=256, verbose_name="描述"),
                ),
                (
                    "delete_datetime",
                    models.DateTimeField(blank=True, null=True, verbose_name="删除时间"),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 32 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=32,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="用户名",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="密码")),
                (
                    "nickname",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="昵称"
                    ),
                ),
                ("email", models.EmailField(max_length=254, verbose_name="邮箱")),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="最后登录时间"),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="电话"
                    ),
                ),
                (
                    "avatar",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="头像"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("owner", "创建者"), ("admin", "管理员"), ("member", "成员")],
                        max_length=32,
                    ),
                ),
                (
                    "create_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="created_%(app_label)s_%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "delete_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="deleted_%(app_label)s_%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "update_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(app_label)s_%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "db_table": "user",
            },
            managers=[
                ("objects", rest_framework_util.db.models.manager.UserModelManager()),
            ],
        ),
        migrations.CreateModel(
            name="Group",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=shortcut_util.unique.uuid_id,
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="是否激活")),
                (
                    "create_datetime",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_datetime",
                    models.DateTimeField(auto_now=True, null=True, verbose_name="更新时间"),
                ),
                ("name", models.CharField(max_length=64, verbose_name="名称")),
                (
                    "description",
                    models.CharField(blank=True, max_length=256, verbose_name="描述"),
                ),
                (
                    "delete_datetime",
                    models.DateTimeField(blank=True, null=True, verbose_name="删除时间"),
                ),
                (
                    "expire_datetime",
                    models.DateTimeField(blank=True, null=True, verbose_name="过期时间"),
                ),
                (
                    "create_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="created_%(app_label)s_%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "delete_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="deleted_%(app_label)s_%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "update_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(app_label)s_%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "用户组表",
                "db_table": "user_group",
            },
        ),
        migrations.CreateModel(
            name="GroupUserRel",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=shortcut_util.unique.uuid_id,
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="是否激活")),
                (
                    "create_datetime",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_datetime",
                    models.DateTimeField(auto_now=True, null=True, verbose_name="更新时间"),
                ),
                ("name", models.CharField(max_length=64, verbose_name="名称")),
                (
                    "description",
                    models.CharField(blank=True, max_length=256, verbose_name="描述"),
                ),
                (
                    "delete_datetime",
                    models.DateTimeField(blank=True, null=True, verbose_name="删除时间"),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("owner", "创建者"), ("admin", "管理员"), ("member", "成员")],
                        default="member",
                        max_length=32,
                    ),
                ),
                (
                    "create_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="created_%(app_label)s_%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "delete_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="deleted_%(app_label)s_%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_rel",
                        to="admin_user.group",
                    ),
                ),
                (
                    "update_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(app_label)s_%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="group_rel",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "用户组关联表",
                "db_table": "user_group_user_rel",
                "unique_together": {("user", "group", "delete_datetime")},
            },
        ),
        migrations.AddField(
            model_name="group",
            name="users",
            field=models.ManyToManyField(
                related_name="groups",
                through="admin_user.GroupUserRel",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
    ]
