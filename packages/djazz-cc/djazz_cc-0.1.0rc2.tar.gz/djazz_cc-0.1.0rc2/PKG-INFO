Metadata-Version: 2.1
Name: djazz-cc
Version: 0.1.0rc2
Summary: A ready-to-use Django project tailored for practical, real-world applications, djazz comes with pre-configured essential settings and industry best practices built-in, ensuring a streamlined development process right out of the box. Ideal for developers looking to jumpstart their projects without the hassle of initial setup.
Keywords: django,djazz,rest,api,json,serializer,django-rest-framework,drf,django-rest-framework-json-api,json-api,jsonapi,json-api-serializer,json-api
Author-email: Azat <to@azat.cc>
Description-Content-Type: text/markdown
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Framework :: Django
Classifier: Framework :: Django :: 5.0
Classifier: Operating System :: Unix
Classifier: Operating System :: POSIX :: Linux
Classifier: Environment :: Console
Classifier: Environment :: MacOS X
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: BSD License
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Internet
Requires-Dist: django
Requires-Dist: pillow
Requires-Dist: django-debug-toolbar
Requires-Dist: typer ; extra == "cli"
Project-URL: Home, https://github.com/azataiot/djazz 
Project-URL: Source, https://github.com/azataiot/djazz 
Provides-Extra: cli

# djazz!

A ready-to-use Django project tailored for practical, real-world applications, djazz comes with pre-configured essential
settings and industry best practices built-in, ensuring a streamlined development process right out of the box. Ideal
for developers looking to jumpstart their projects without the hassle of initial setup.

## Features

- **Django ^5.0.**: The latest version of Django, the web framework for perfectionists with deadlines.
- **PostgreSQL**: The world's most advanced open-source relational database.
- **Powered by Docker**: Dockerized development environment for easy setup and deployment.
- **Built-in User Authentication and Authorization**: Fully functional user authentication and authorization system
  included.
- **Custom User Model**: A custom user model is provided out of the box.
- **Built-in API**: A RESTful API (both django rest framework and django ninja) is included for easy integration with
  frontend frameworks.
- **Django Debug Toolbar**: For easy debugging and performance optimization.
- **And much more!**

## Quick Start

### Experience `djazz` in production ? üöÄ

- **[Live Demo](#)** - Coming soon! üöß
- **[Documentation](#)** - Coming soon! üöß
- **[Download Latest Release](#)** - Coming soon! üöß
- **[Report a Bug](https://github.com/azataiot/djazz/issues)** - Open an issue if you find a bug. üêû
- **[Request a Feature](https://github.com/azataiot/djazz/issues)** - Open an issue if you want to request a feature. üöÄ
- **[Contribute](https://github.com/azataiot/djazz/issues)** - Open a pull request if you want to contribute. üéâ

### Local Development

1. Star (‚≠êÔ∏è) and Fork üç¥ the repository.
2. Clone the repository.
    ```bash
    git clone <your-github-username> djazz
    ```
3. Change the directory.
    ```bash
    cd djazz
    ```
4. Create a new virtual environment.
    ```bash
    python -m venv venv
    ```
5. Activate the virtual environment.
    ```bash
    source venv/bin/activate
    ```
6. Install the dependencies.
    ```bash
    pip install -r requirements.txt
    ```
7. Run the PostgreSQL and Redis services using Docker.
    ```bash
    docker-compose up -d
    ```
8. Apply the migrations.
    ```bash
    python manage.py migrate
    ```
9. Run the development server.
   ```bash
   python manage.py runserver
   ```
10. Open the browser and visit `http://localhost:8000/`.
11. You're all set! üöÄ
