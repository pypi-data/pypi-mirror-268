# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ANTsWasmPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkANTsRegistrationPython
else:
    import _itkANTsRegistrationPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkCompositeTransformPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkArray2DPython
import itk.ITKCommonBasePython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkMultiTransformPython
import itk.itkTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.itkImageRegistrationMethodv4Python
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkObjectToObjectMetricBasePython
import itk.itkSingleValuedCostFunctionv4Python
import itk.itkCostFunctionPython
import itk.itkDisplacementFieldTransformPython
import itk.itkVectorImagePython
import itk.itkObjectToObjectOptimizerBasePython
import itk.itkOptimizerParameterScalesEstimatorPython
import itk.itkGaussianSmoothingOnUpdateTimeVaryingVelocityFieldTransformPython
import itk.itkTimeVaryingVelocityFieldTransformPython
import itk.itkVelocityFieldTransformPython
import itk.itkBSplineSmoothingOnUpdateDisplacementFieldTransformPython
import itk.itkMeshBasePython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkPointSetPython
import itk.itkMapContainerPython
import itk.itkBoundingBoxPython
import itk.itkTimeVaryingBSplineVelocityFieldTransformPython
import itk.itkTransformParametersAdaptorBasePython

def itkANTsRegistrationDID2_New():
    return itkANTsRegistrationDID2.New()

class itkANTsRegistrationDID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTsRegistrationDID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkANTsRegistrationDID2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkANTsRegistrationDID2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_Clone(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageD2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetFixedImage(self, image)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetFixedImage(self)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageD2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetMovingImage(self, image)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetMovingImage(self)

    def GetWarpedMovingImage(self):
        r"""GetWarpedMovingImage(self) -> itkImageD2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetWarpedMovingImage(self)

    def GetWarpedFixedImage(self):
        r"""GetWarpedFixedImage(self) -> itkImageD2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetWarpedFixedImage(self)

    def SetFixedMask(self, mask):
        r"""
        SetFixedMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetFixedMask(self, mask)

    def GetFixedMask(self):
        r"""GetFixedMask(self) -> itkImageUC2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetFixedMask(self)

    def SetMovingMask(self, mask):
        r"""
        SetMovingMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetMovingMask(self, mask)

    def GetMovingMask(self):
        r"""GetMovingMask(self) -> itkImageUC2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetMovingMask(self)

    def SetTypeOfTransform(self, *args):
        r"""
        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetTypeOfTransform(self, *args)

    def GetTypeOfTransform(self):
        r"""GetTypeOfTransform(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetTypeOfTransform(self)

    def SetAffineMetric(self, *args):
        r"""
        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetAffineMetric(self, *args)

    def GetAffineMetric(self):
        r"""GetAffineMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetAffineMetric(self)

    def SetSynMetric(self, *args):
        r"""
        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetSynMetric(self, *args)

    def GetSynMetric(self):
        r"""GetSynMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetSynMetric(self)

    def SetInitialTransformInput(self, _arg):
        r"""
        SetInitialTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD22 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetInitialTransformInput(self, _arg)

    def SetInitialTransform(self, _arg):
        r"""
        SetInitialTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetInitialTransform(self, _arg)

    def GetInitialTransformInput(self):
        r"""GetInitialTransformInput(self) -> itkDataObjectDecoratorTD22"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetInitialTransformInput(self)

    def GetInitialTransform(self):
        r"""GetInitialTransform(self) -> itkTransformD22"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetInitialTransform(self)

    def GetForwardTransform(self):
        r"""GetForwardTransform(self) -> itkCompositeTransformD2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetForwardTransform(self)

    def GetInverseTransform(self):
        r"""GetInverseTransform(self) -> itkCompositeTransformD2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetInverseTransform(self)

    def SetGradientStep(self, _arg):
        r"""
        SetGradientStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetGradientStep(self, _arg)

    def GetGradientStep(self):
        r"""GetGradientStep(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetGradientStep(self)

    def SetFlowSigma(self, _arg):
        r"""
        SetFlowSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetFlowSigma(self, _arg)

    def GetFlowSigma(self):
        r"""GetFlowSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetFlowSigma(self)

    def SetTotalSigma(self, _arg):
        r"""
        SetTotalSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetTotalSigma(self, _arg)

    def GetTotalSigma(self):
        r"""GetTotalSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetTotalSigma(self)

    def SetSamplingRate(self, _arg):
        r"""
        SetSamplingRate(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetSamplingRate(self, _arg)

    def GetSamplingRate(self):
        r"""GetSamplingRate(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetSamplingRate(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetNumberOfBins(self)

    def SetRandomSeed(self, _arg):
        r"""
        SetRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetRandomSeed(self, _arg)

    def GetRandomSeed(self):
        r"""GetRandomSeed(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetRandomSeed(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> unsigned int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetRadius(self)

    def SetUseGradientFilter(self, _arg):
        r"""
        SetUseGradientFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetUseGradientFilter(self, _arg)

    def GetUseGradientFilter(self):
        r"""GetUseGradientFilter(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetUseGradientFilter(self)

    def SetSmoothingInPhysicalUnits(self, _arg):
        r"""
        SetSmoothingInPhysicalUnits(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetSmoothingInPhysicalUnits(self, _arg)

    def GetSmoothingInPhysicalUnits(self):
        r"""GetSmoothingInPhysicalUnits(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetSmoothingInPhysicalUnits(self)

    def SetCollapseCompositeTransform(self, _arg):
        r"""
        SetCollapseCompositeTransform(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetCollapseCompositeTransform(self, _arg)

    def GetCollapseCompositeTransform(self):
        r"""GetCollapseCompositeTransform(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetCollapseCompositeTransform(self)

    def SetMaskAllStages(self, _arg):
        r"""
        SetMaskAllStages(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetMaskAllStages(self, _arg)

    def GetMaskAllStages(self):
        r"""GetMaskAllStages(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetMaskAllStages(self)

    def SetSynIterations(self, _arg):
        r"""
        SetSynIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetSynIterations(self, _arg)

    def GetSynIterations(self):
        r"""GetSynIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetSynIterations(self)

    def SetAffineIterations(self, _arg):
        r"""
        SetAffineIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetAffineIterations(self, _arg)

    def GetAffineIterations(self):
        r"""GetAffineIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetAffineIterations(self)

    def SetShrinkFactors(self, _arg):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetShrinkFactors(self, _arg)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetShrinkFactors(self)

    def SetSmoothingSigmas(self, _arg):
        r"""
        SetSmoothingSigmas(self, _arg)

        Parameters
        ----------
        _arg: std::vector< float,std::allocator< float > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetSmoothingSigmas(self, _arg)

    def GetSmoothingSigmas(self):
        r"""GetSmoothingSigmas(self) -> vectorF"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetSmoothingSigmas(self)

    def SetRestrictTransformation(self, _arg):
        r"""
        SetRestrictTransformation(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetRestrictTransformation(self, _arg)

    def GetRestrictTransformation(self):
        r"""GetRestrictTransformation(self) -> vectorD"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetRestrictTransformation(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self, i) -> itkDataObjectDecoratorCTD2

        Parameters
        ----------
        i: unsigned long

        GetOutput(self, i) -> itkDataObjectDecoratorCTD2

        Parameters
        ----------
        i: unsigned long

        GetOutput(self) -> itkDataObjectDecoratorCTD2
        GetOutput(self) -> itkDataObjectDecoratorCTD2
        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_GetOutput(self, *args)

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageD2 const *

        SetInput(self, index, image)

        Parameters
        ----------
        index: unsigned int
        image: itkImageD2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_SetInput(self, *args)
    __swig_destroy__ = _itkANTsRegistrationPython.delete_itkANTsRegistrationDID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkANTsRegistrationDID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkANTsRegistrationDID2

        Create a new object of the class itkANTsRegistrationDID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTsRegistrationDID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTsRegistrationDID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTsRegistrationDID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTsRegistrationDID2 in _itkANTsRegistrationPython:
_itkANTsRegistrationPython.itkANTsRegistrationDID2_swigregister(itkANTsRegistrationDID2)

def itkANTsRegistrationDID3_New():
    return itkANTsRegistrationDID3.New()

class itkANTsRegistrationDID3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTsRegistrationDID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkANTsRegistrationDID3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkANTsRegistrationDID3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_Clone(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageD3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetFixedImage(self, image)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetFixedImage(self)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageD3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetMovingImage(self, image)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetMovingImage(self)

    def GetWarpedMovingImage(self):
        r"""GetWarpedMovingImage(self) -> itkImageD3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetWarpedMovingImage(self)

    def GetWarpedFixedImage(self):
        r"""GetWarpedFixedImage(self) -> itkImageD3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetWarpedFixedImage(self)

    def SetFixedMask(self, mask):
        r"""
        SetFixedMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetFixedMask(self, mask)

    def GetFixedMask(self):
        r"""GetFixedMask(self) -> itkImageUC3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetFixedMask(self)

    def SetMovingMask(self, mask):
        r"""
        SetMovingMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetMovingMask(self, mask)

    def GetMovingMask(self):
        r"""GetMovingMask(self) -> itkImageUC3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetMovingMask(self)

    def SetTypeOfTransform(self, *args):
        r"""
        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetTypeOfTransform(self, *args)

    def GetTypeOfTransform(self):
        r"""GetTypeOfTransform(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetTypeOfTransform(self)

    def SetAffineMetric(self, *args):
        r"""
        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetAffineMetric(self, *args)

    def GetAffineMetric(self):
        r"""GetAffineMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetAffineMetric(self)

    def SetSynMetric(self, *args):
        r"""
        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetSynMetric(self, *args)

    def GetSynMetric(self):
        r"""GetSynMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetSynMetric(self)

    def SetInitialTransformInput(self, _arg):
        r"""
        SetInitialTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD33 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetInitialTransformInput(self, _arg)

    def SetInitialTransform(self, _arg):
        r"""
        SetInitialTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetInitialTransform(self, _arg)

    def GetInitialTransformInput(self):
        r"""GetInitialTransformInput(self) -> itkDataObjectDecoratorTD33"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetInitialTransformInput(self)

    def GetInitialTransform(self):
        r"""GetInitialTransform(self) -> itkTransformD33"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetInitialTransform(self)

    def GetForwardTransform(self):
        r"""GetForwardTransform(self) -> itkCompositeTransformD3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetForwardTransform(self)

    def GetInverseTransform(self):
        r"""GetInverseTransform(self) -> itkCompositeTransformD3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetInverseTransform(self)

    def SetGradientStep(self, _arg):
        r"""
        SetGradientStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetGradientStep(self, _arg)

    def GetGradientStep(self):
        r"""GetGradientStep(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetGradientStep(self)

    def SetFlowSigma(self, _arg):
        r"""
        SetFlowSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetFlowSigma(self, _arg)

    def GetFlowSigma(self):
        r"""GetFlowSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetFlowSigma(self)

    def SetTotalSigma(self, _arg):
        r"""
        SetTotalSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetTotalSigma(self, _arg)

    def GetTotalSigma(self):
        r"""GetTotalSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetTotalSigma(self)

    def SetSamplingRate(self, _arg):
        r"""
        SetSamplingRate(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetSamplingRate(self, _arg)

    def GetSamplingRate(self):
        r"""GetSamplingRate(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetSamplingRate(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetNumberOfBins(self)

    def SetRandomSeed(self, _arg):
        r"""
        SetRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetRandomSeed(self, _arg)

    def GetRandomSeed(self):
        r"""GetRandomSeed(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetRandomSeed(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> unsigned int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetRadius(self)

    def SetUseGradientFilter(self, _arg):
        r"""
        SetUseGradientFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetUseGradientFilter(self, _arg)

    def GetUseGradientFilter(self):
        r"""GetUseGradientFilter(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetUseGradientFilter(self)

    def SetSmoothingInPhysicalUnits(self, _arg):
        r"""
        SetSmoothingInPhysicalUnits(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetSmoothingInPhysicalUnits(self, _arg)

    def GetSmoothingInPhysicalUnits(self):
        r"""GetSmoothingInPhysicalUnits(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetSmoothingInPhysicalUnits(self)

    def SetCollapseCompositeTransform(self, _arg):
        r"""
        SetCollapseCompositeTransform(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetCollapseCompositeTransform(self, _arg)

    def GetCollapseCompositeTransform(self):
        r"""GetCollapseCompositeTransform(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetCollapseCompositeTransform(self)

    def SetMaskAllStages(self, _arg):
        r"""
        SetMaskAllStages(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetMaskAllStages(self, _arg)

    def GetMaskAllStages(self):
        r"""GetMaskAllStages(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetMaskAllStages(self)

    def SetSynIterations(self, _arg):
        r"""
        SetSynIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetSynIterations(self, _arg)

    def GetSynIterations(self):
        r"""GetSynIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetSynIterations(self)

    def SetAffineIterations(self, _arg):
        r"""
        SetAffineIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetAffineIterations(self, _arg)

    def GetAffineIterations(self):
        r"""GetAffineIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetAffineIterations(self)

    def SetShrinkFactors(self, _arg):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetShrinkFactors(self, _arg)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetShrinkFactors(self)

    def SetSmoothingSigmas(self, _arg):
        r"""
        SetSmoothingSigmas(self, _arg)

        Parameters
        ----------
        _arg: std::vector< float,std::allocator< float > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetSmoothingSigmas(self, _arg)

    def GetSmoothingSigmas(self):
        r"""GetSmoothingSigmas(self) -> vectorF"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetSmoothingSigmas(self)

    def SetRestrictTransformation(self, _arg):
        r"""
        SetRestrictTransformation(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetRestrictTransformation(self, _arg)

    def GetRestrictTransformation(self):
        r"""GetRestrictTransformation(self) -> vectorD"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetRestrictTransformation(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self, i) -> itkDataObjectDecoratorCTD3

        Parameters
        ----------
        i: unsigned long

        GetOutput(self, i) -> itkDataObjectDecoratorCTD3

        Parameters
        ----------
        i: unsigned long

        GetOutput(self) -> itkDataObjectDecoratorCTD3
        GetOutput(self) -> itkDataObjectDecoratorCTD3
        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_GetOutput(self, *args)

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageD3 const *

        SetInput(self, index, image)

        Parameters
        ----------
        index: unsigned int
        image: itkImageD3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_SetInput(self, *args)
    __swig_destroy__ = _itkANTsRegistrationPython.delete_itkANTsRegistrationDID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkANTsRegistrationDID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkANTsRegistrationDID3

        Create a new object of the class itkANTsRegistrationDID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTsRegistrationDID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTsRegistrationDID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTsRegistrationDID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTsRegistrationDID3 in _itkANTsRegistrationPython:
_itkANTsRegistrationPython.itkANTsRegistrationDID3_swigregister(itkANTsRegistrationDID3)

def itkANTsRegistrationDID4_New():
    return itkANTsRegistrationDID4.New()

class itkANTsRegistrationDID4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTsRegistrationDID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkANTsRegistrationDID4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkANTsRegistrationDID4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_Clone(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageD4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetFixedImage(self, image)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetFixedImage(self)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageD4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetMovingImage(self, image)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetMovingImage(self)

    def GetWarpedMovingImage(self):
        r"""GetWarpedMovingImage(self) -> itkImageD4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetWarpedMovingImage(self)

    def GetWarpedFixedImage(self):
        r"""GetWarpedFixedImage(self) -> itkImageD4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetWarpedFixedImage(self)

    def SetFixedMask(self, mask):
        r"""
        SetFixedMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetFixedMask(self, mask)

    def GetFixedMask(self):
        r"""GetFixedMask(self) -> itkImageUC4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetFixedMask(self)

    def SetMovingMask(self, mask):
        r"""
        SetMovingMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetMovingMask(self, mask)

    def GetMovingMask(self):
        r"""GetMovingMask(self) -> itkImageUC4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetMovingMask(self)

    def SetTypeOfTransform(self, *args):
        r"""
        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetTypeOfTransform(self, *args)

    def GetTypeOfTransform(self):
        r"""GetTypeOfTransform(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetTypeOfTransform(self)

    def SetAffineMetric(self, *args):
        r"""
        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetAffineMetric(self, *args)

    def GetAffineMetric(self):
        r"""GetAffineMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetAffineMetric(self)

    def SetSynMetric(self, *args):
        r"""
        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetSynMetric(self, *args)

    def GetSynMetric(self):
        r"""GetSynMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetSynMetric(self)

    def SetInitialTransformInput(self, _arg):
        r"""
        SetInitialTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD44 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetInitialTransformInput(self, _arg)

    def SetInitialTransform(self, _arg):
        r"""
        SetInitialTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetInitialTransform(self, _arg)

    def GetInitialTransformInput(self):
        r"""GetInitialTransformInput(self) -> itkDataObjectDecoratorTD44"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetInitialTransformInput(self)

    def GetInitialTransform(self):
        r"""GetInitialTransform(self) -> itkTransformD44"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetInitialTransform(self)

    def GetForwardTransform(self):
        r"""GetForwardTransform(self) -> itkCompositeTransformD4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetForwardTransform(self)

    def GetInverseTransform(self):
        r"""GetInverseTransform(self) -> itkCompositeTransformD4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetInverseTransform(self)

    def SetGradientStep(self, _arg):
        r"""
        SetGradientStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetGradientStep(self, _arg)

    def GetGradientStep(self):
        r"""GetGradientStep(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetGradientStep(self)

    def SetFlowSigma(self, _arg):
        r"""
        SetFlowSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetFlowSigma(self, _arg)

    def GetFlowSigma(self):
        r"""GetFlowSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetFlowSigma(self)

    def SetTotalSigma(self, _arg):
        r"""
        SetTotalSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetTotalSigma(self, _arg)

    def GetTotalSigma(self):
        r"""GetTotalSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetTotalSigma(self)

    def SetSamplingRate(self, _arg):
        r"""
        SetSamplingRate(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetSamplingRate(self, _arg)

    def GetSamplingRate(self):
        r"""GetSamplingRate(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetSamplingRate(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetNumberOfBins(self)

    def SetRandomSeed(self, _arg):
        r"""
        SetRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetRandomSeed(self, _arg)

    def GetRandomSeed(self):
        r"""GetRandomSeed(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetRandomSeed(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> unsigned int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetRadius(self)

    def SetUseGradientFilter(self, _arg):
        r"""
        SetUseGradientFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetUseGradientFilter(self, _arg)

    def GetUseGradientFilter(self):
        r"""GetUseGradientFilter(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetUseGradientFilter(self)

    def SetSmoothingInPhysicalUnits(self, _arg):
        r"""
        SetSmoothingInPhysicalUnits(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetSmoothingInPhysicalUnits(self, _arg)

    def GetSmoothingInPhysicalUnits(self):
        r"""GetSmoothingInPhysicalUnits(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetSmoothingInPhysicalUnits(self)

    def SetCollapseCompositeTransform(self, _arg):
        r"""
        SetCollapseCompositeTransform(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetCollapseCompositeTransform(self, _arg)

    def GetCollapseCompositeTransform(self):
        r"""GetCollapseCompositeTransform(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetCollapseCompositeTransform(self)

    def SetMaskAllStages(self, _arg):
        r"""
        SetMaskAllStages(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetMaskAllStages(self, _arg)

    def GetMaskAllStages(self):
        r"""GetMaskAllStages(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetMaskAllStages(self)

    def SetSynIterations(self, _arg):
        r"""
        SetSynIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetSynIterations(self, _arg)

    def GetSynIterations(self):
        r"""GetSynIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetSynIterations(self)

    def SetAffineIterations(self, _arg):
        r"""
        SetAffineIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetAffineIterations(self, _arg)

    def GetAffineIterations(self):
        r"""GetAffineIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetAffineIterations(self)

    def SetShrinkFactors(self, _arg):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetShrinkFactors(self, _arg)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetShrinkFactors(self)

    def SetSmoothingSigmas(self, _arg):
        r"""
        SetSmoothingSigmas(self, _arg)

        Parameters
        ----------
        _arg: std::vector< float,std::allocator< float > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetSmoothingSigmas(self, _arg)

    def GetSmoothingSigmas(self):
        r"""GetSmoothingSigmas(self) -> vectorF"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetSmoothingSigmas(self)

    def SetRestrictTransformation(self, _arg):
        r"""
        SetRestrictTransformation(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetRestrictTransformation(self, _arg)

    def GetRestrictTransformation(self):
        r"""GetRestrictTransformation(self) -> vectorD"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetRestrictTransformation(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self, i) -> itkDataObjectDecoratorCTD4

        Parameters
        ----------
        i: unsigned long

        GetOutput(self, i) -> itkDataObjectDecoratorCTD4

        Parameters
        ----------
        i: unsigned long

        GetOutput(self) -> itkDataObjectDecoratorCTD4
        GetOutput(self) -> itkDataObjectDecoratorCTD4
        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_GetOutput(self, *args)

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageD4 const *

        SetInput(self, index, image)

        Parameters
        ----------
        index: unsigned int
        image: itkImageD4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_SetInput(self, *args)
    __swig_destroy__ = _itkANTsRegistrationPython.delete_itkANTsRegistrationDID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkANTsRegistrationDID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkANTsRegistrationDID4

        Create a new object of the class itkANTsRegistrationDID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTsRegistrationDID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTsRegistrationDID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTsRegistrationDID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTsRegistrationDID4 in _itkANTsRegistrationPython:
_itkANTsRegistrationPython.itkANTsRegistrationDID4_swigregister(itkANTsRegistrationDID4)

def itkANTsRegistrationDIF2_New():
    return itkANTsRegistrationDIF2.New()

class itkANTsRegistrationDIF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTsRegistrationDIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkANTsRegistrationDIF2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkANTsRegistrationDIF2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_Clone(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageF2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetFixedImage(self, image)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetFixedImage(self)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageF2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetMovingImage(self, image)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetMovingImage(self)

    def GetWarpedMovingImage(self):
        r"""GetWarpedMovingImage(self) -> itkImageF2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetWarpedMovingImage(self)

    def GetWarpedFixedImage(self):
        r"""GetWarpedFixedImage(self) -> itkImageF2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetWarpedFixedImage(self)

    def SetFixedMask(self, mask):
        r"""
        SetFixedMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetFixedMask(self, mask)

    def GetFixedMask(self):
        r"""GetFixedMask(self) -> itkImageUC2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetFixedMask(self)

    def SetMovingMask(self, mask):
        r"""
        SetMovingMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetMovingMask(self, mask)

    def GetMovingMask(self):
        r"""GetMovingMask(self) -> itkImageUC2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetMovingMask(self)

    def SetTypeOfTransform(self, *args):
        r"""
        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetTypeOfTransform(self, *args)

    def GetTypeOfTransform(self):
        r"""GetTypeOfTransform(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetTypeOfTransform(self)

    def SetAffineMetric(self, *args):
        r"""
        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetAffineMetric(self, *args)

    def GetAffineMetric(self):
        r"""GetAffineMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetAffineMetric(self)

    def SetSynMetric(self, *args):
        r"""
        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetSynMetric(self, *args)

    def GetSynMetric(self):
        r"""GetSynMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetSynMetric(self)

    def SetInitialTransformInput(self, _arg):
        r"""
        SetInitialTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD22 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetInitialTransformInput(self, _arg)

    def SetInitialTransform(self, _arg):
        r"""
        SetInitialTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetInitialTransform(self, _arg)

    def GetInitialTransformInput(self):
        r"""GetInitialTransformInput(self) -> itkDataObjectDecoratorTD22"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetInitialTransformInput(self)

    def GetInitialTransform(self):
        r"""GetInitialTransform(self) -> itkTransformD22"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetInitialTransform(self)

    def GetForwardTransform(self):
        r"""GetForwardTransform(self) -> itkCompositeTransformD2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetForwardTransform(self)

    def GetInverseTransform(self):
        r"""GetInverseTransform(self) -> itkCompositeTransformD2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetInverseTransform(self)

    def SetGradientStep(self, _arg):
        r"""
        SetGradientStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetGradientStep(self, _arg)

    def GetGradientStep(self):
        r"""GetGradientStep(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetGradientStep(self)

    def SetFlowSigma(self, _arg):
        r"""
        SetFlowSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetFlowSigma(self, _arg)

    def GetFlowSigma(self):
        r"""GetFlowSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetFlowSigma(self)

    def SetTotalSigma(self, _arg):
        r"""
        SetTotalSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetTotalSigma(self, _arg)

    def GetTotalSigma(self):
        r"""GetTotalSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetTotalSigma(self)

    def SetSamplingRate(self, _arg):
        r"""
        SetSamplingRate(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetSamplingRate(self, _arg)

    def GetSamplingRate(self):
        r"""GetSamplingRate(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetSamplingRate(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetNumberOfBins(self)

    def SetRandomSeed(self, _arg):
        r"""
        SetRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetRandomSeed(self, _arg)

    def GetRandomSeed(self):
        r"""GetRandomSeed(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetRandomSeed(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> unsigned int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetRadius(self)

    def SetUseGradientFilter(self, _arg):
        r"""
        SetUseGradientFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetUseGradientFilter(self, _arg)

    def GetUseGradientFilter(self):
        r"""GetUseGradientFilter(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetUseGradientFilter(self)

    def SetSmoothingInPhysicalUnits(self, _arg):
        r"""
        SetSmoothingInPhysicalUnits(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetSmoothingInPhysicalUnits(self, _arg)

    def GetSmoothingInPhysicalUnits(self):
        r"""GetSmoothingInPhysicalUnits(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetSmoothingInPhysicalUnits(self)

    def SetCollapseCompositeTransform(self, _arg):
        r"""
        SetCollapseCompositeTransform(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetCollapseCompositeTransform(self, _arg)

    def GetCollapseCompositeTransform(self):
        r"""GetCollapseCompositeTransform(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetCollapseCompositeTransform(self)

    def SetMaskAllStages(self, _arg):
        r"""
        SetMaskAllStages(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetMaskAllStages(self, _arg)

    def GetMaskAllStages(self):
        r"""GetMaskAllStages(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetMaskAllStages(self)

    def SetSynIterations(self, _arg):
        r"""
        SetSynIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetSynIterations(self, _arg)

    def GetSynIterations(self):
        r"""GetSynIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetSynIterations(self)

    def SetAffineIterations(self, _arg):
        r"""
        SetAffineIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetAffineIterations(self, _arg)

    def GetAffineIterations(self):
        r"""GetAffineIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetAffineIterations(self)

    def SetShrinkFactors(self, _arg):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetShrinkFactors(self, _arg)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetShrinkFactors(self)

    def SetSmoothingSigmas(self, _arg):
        r"""
        SetSmoothingSigmas(self, _arg)

        Parameters
        ----------
        _arg: std::vector< float,std::allocator< float > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetSmoothingSigmas(self, _arg)

    def GetSmoothingSigmas(self):
        r"""GetSmoothingSigmas(self) -> vectorF"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetSmoothingSigmas(self)

    def SetRestrictTransformation(self, _arg):
        r"""
        SetRestrictTransformation(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetRestrictTransformation(self, _arg)

    def GetRestrictTransformation(self):
        r"""GetRestrictTransformation(self) -> vectorD"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetRestrictTransformation(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self, i) -> itkDataObjectDecoratorCTD2

        Parameters
        ----------
        i: unsigned long

        GetOutput(self, i) -> itkDataObjectDecoratorCTD2

        Parameters
        ----------
        i: unsigned long

        GetOutput(self) -> itkDataObjectDecoratorCTD2
        GetOutput(self) -> itkDataObjectDecoratorCTD2
        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_GetOutput(self, *args)

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageF2 const *

        SetInput(self, index, image)

        Parameters
        ----------
        index: unsigned int
        image: itkImageF2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_SetInput(self, *args)
    __swig_destroy__ = _itkANTsRegistrationPython.delete_itkANTsRegistrationDIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkANTsRegistrationDIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkANTsRegistrationDIF2

        Create a new object of the class itkANTsRegistrationDIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTsRegistrationDIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTsRegistrationDIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTsRegistrationDIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTsRegistrationDIF2 in _itkANTsRegistrationPython:
_itkANTsRegistrationPython.itkANTsRegistrationDIF2_swigregister(itkANTsRegistrationDIF2)

def itkANTsRegistrationDIF3_New():
    return itkANTsRegistrationDIF3.New()

class itkANTsRegistrationDIF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTsRegistrationDIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkANTsRegistrationDIF3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkANTsRegistrationDIF3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_Clone(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageF3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetFixedImage(self, image)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetFixedImage(self)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageF3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetMovingImage(self, image)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetMovingImage(self)

    def GetWarpedMovingImage(self):
        r"""GetWarpedMovingImage(self) -> itkImageF3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetWarpedMovingImage(self)

    def GetWarpedFixedImage(self):
        r"""GetWarpedFixedImage(self) -> itkImageF3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetWarpedFixedImage(self)

    def SetFixedMask(self, mask):
        r"""
        SetFixedMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetFixedMask(self, mask)

    def GetFixedMask(self):
        r"""GetFixedMask(self) -> itkImageUC3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetFixedMask(self)

    def SetMovingMask(self, mask):
        r"""
        SetMovingMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetMovingMask(self, mask)

    def GetMovingMask(self):
        r"""GetMovingMask(self) -> itkImageUC3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetMovingMask(self)

    def SetTypeOfTransform(self, *args):
        r"""
        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetTypeOfTransform(self, *args)

    def GetTypeOfTransform(self):
        r"""GetTypeOfTransform(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetTypeOfTransform(self)

    def SetAffineMetric(self, *args):
        r"""
        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetAffineMetric(self, *args)

    def GetAffineMetric(self):
        r"""GetAffineMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetAffineMetric(self)

    def SetSynMetric(self, *args):
        r"""
        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetSynMetric(self, *args)

    def GetSynMetric(self):
        r"""GetSynMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetSynMetric(self)

    def SetInitialTransformInput(self, _arg):
        r"""
        SetInitialTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD33 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetInitialTransformInput(self, _arg)

    def SetInitialTransform(self, _arg):
        r"""
        SetInitialTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetInitialTransform(self, _arg)

    def GetInitialTransformInput(self):
        r"""GetInitialTransformInput(self) -> itkDataObjectDecoratorTD33"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetInitialTransformInput(self)

    def GetInitialTransform(self):
        r"""GetInitialTransform(self) -> itkTransformD33"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetInitialTransform(self)

    def GetForwardTransform(self):
        r"""GetForwardTransform(self) -> itkCompositeTransformD3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetForwardTransform(self)

    def GetInverseTransform(self):
        r"""GetInverseTransform(self) -> itkCompositeTransformD3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetInverseTransform(self)

    def SetGradientStep(self, _arg):
        r"""
        SetGradientStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetGradientStep(self, _arg)

    def GetGradientStep(self):
        r"""GetGradientStep(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetGradientStep(self)

    def SetFlowSigma(self, _arg):
        r"""
        SetFlowSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetFlowSigma(self, _arg)

    def GetFlowSigma(self):
        r"""GetFlowSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetFlowSigma(self)

    def SetTotalSigma(self, _arg):
        r"""
        SetTotalSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetTotalSigma(self, _arg)

    def GetTotalSigma(self):
        r"""GetTotalSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetTotalSigma(self)

    def SetSamplingRate(self, _arg):
        r"""
        SetSamplingRate(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetSamplingRate(self, _arg)

    def GetSamplingRate(self):
        r"""GetSamplingRate(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetSamplingRate(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetNumberOfBins(self)

    def SetRandomSeed(self, _arg):
        r"""
        SetRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetRandomSeed(self, _arg)

    def GetRandomSeed(self):
        r"""GetRandomSeed(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetRandomSeed(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> unsigned int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetRadius(self)

    def SetUseGradientFilter(self, _arg):
        r"""
        SetUseGradientFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetUseGradientFilter(self, _arg)

    def GetUseGradientFilter(self):
        r"""GetUseGradientFilter(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetUseGradientFilter(self)

    def SetSmoothingInPhysicalUnits(self, _arg):
        r"""
        SetSmoothingInPhysicalUnits(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetSmoothingInPhysicalUnits(self, _arg)

    def GetSmoothingInPhysicalUnits(self):
        r"""GetSmoothingInPhysicalUnits(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetSmoothingInPhysicalUnits(self)

    def SetCollapseCompositeTransform(self, _arg):
        r"""
        SetCollapseCompositeTransform(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetCollapseCompositeTransform(self, _arg)

    def GetCollapseCompositeTransform(self):
        r"""GetCollapseCompositeTransform(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetCollapseCompositeTransform(self)

    def SetMaskAllStages(self, _arg):
        r"""
        SetMaskAllStages(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetMaskAllStages(self, _arg)

    def GetMaskAllStages(self):
        r"""GetMaskAllStages(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetMaskAllStages(self)

    def SetSynIterations(self, _arg):
        r"""
        SetSynIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetSynIterations(self, _arg)

    def GetSynIterations(self):
        r"""GetSynIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetSynIterations(self)

    def SetAffineIterations(self, _arg):
        r"""
        SetAffineIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetAffineIterations(self, _arg)

    def GetAffineIterations(self):
        r"""GetAffineIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetAffineIterations(self)

    def SetShrinkFactors(self, _arg):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetShrinkFactors(self, _arg)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetShrinkFactors(self)

    def SetSmoothingSigmas(self, _arg):
        r"""
        SetSmoothingSigmas(self, _arg)

        Parameters
        ----------
        _arg: std::vector< float,std::allocator< float > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetSmoothingSigmas(self, _arg)

    def GetSmoothingSigmas(self):
        r"""GetSmoothingSigmas(self) -> vectorF"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetSmoothingSigmas(self)

    def SetRestrictTransformation(self, _arg):
        r"""
        SetRestrictTransformation(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetRestrictTransformation(self, _arg)

    def GetRestrictTransformation(self):
        r"""GetRestrictTransformation(self) -> vectorD"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetRestrictTransformation(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self, i) -> itkDataObjectDecoratorCTD3

        Parameters
        ----------
        i: unsigned long

        GetOutput(self, i) -> itkDataObjectDecoratorCTD3

        Parameters
        ----------
        i: unsigned long

        GetOutput(self) -> itkDataObjectDecoratorCTD3
        GetOutput(self) -> itkDataObjectDecoratorCTD3
        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_GetOutput(self, *args)

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageF3 const *

        SetInput(self, index, image)

        Parameters
        ----------
        index: unsigned int
        image: itkImageF3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_SetInput(self, *args)
    __swig_destroy__ = _itkANTsRegistrationPython.delete_itkANTsRegistrationDIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkANTsRegistrationDIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkANTsRegistrationDIF3

        Create a new object of the class itkANTsRegistrationDIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTsRegistrationDIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTsRegistrationDIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTsRegistrationDIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTsRegistrationDIF3 in _itkANTsRegistrationPython:
_itkANTsRegistrationPython.itkANTsRegistrationDIF3_swigregister(itkANTsRegistrationDIF3)

def itkANTsRegistrationDIF4_New():
    return itkANTsRegistrationDIF4.New()

class itkANTsRegistrationDIF4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTsRegistrationDIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkANTsRegistrationDIF4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkANTsRegistrationDIF4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_Clone(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageF4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetFixedImage(self, image)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetFixedImage(self)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageF4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetMovingImage(self, image)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetMovingImage(self)

    def GetWarpedMovingImage(self):
        r"""GetWarpedMovingImage(self) -> itkImageF4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetWarpedMovingImage(self)

    def GetWarpedFixedImage(self):
        r"""GetWarpedFixedImage(self) -> itkImageF4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetWarpedFixedImage(self)

    def SetFixedMask(self, mask):
        r"""
        SetFixedMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetFixedMask(self, mask)

    def GetFixedMask(self):
        r"""GetFixedMask(self) -> itkImageUC4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetFixedMask(self)

    def SetMovingMask(self, mask):
        r"""
        SetMovingMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetMovingMask(self, mask)

    def GetMovingMask(self):
        r"""GetMovingMask(self) -> itkImageUC4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetMovingMask(self)

    def SetTypeOfTransform(self, *args):
        r"""
        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetTypeOfTransform(self, *args)

    def GetTypeOfTransform(self):
        r"""GetTypeOfTransform(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetTypeOfTransform(self)

    def SetAffineMetric(self, *args):
        r"""
        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetAffineMetric(self, *args)

    def GetAffineMetric(self):
        r"""GetAffineMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetAffineMetric(self)

    def SetSynMetric(self, *args):
        r"""
        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetSynMetric(self, *args)

    def GetSynMetric(self):
        r"""GetSynMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetSynMetric(self)

    def SetInitialTransformInput(self, _arg):
        r"""
        SetInitialTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD44 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetInitialTransformInput(self, _arg)

    def SetInitialTransform(self, _arg):
        r"""
        SetInitialTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetInitialTransform(self, _arg)

    def GetInitialTransformInput(self):
        r"""GetInitialTransformInput(self) -> itkDataObjectDecoratorTD44"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetInitialTransformInput(self)

    def GetInitialTransform(self):
        r"""GetInitialTransform(self) -> itkTransformD44"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetInitialTransform(self)

    def GetForwardTransform(self):
        r"""GetForwardTransform(self) -> itkCompositeTransformD4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetForwardTransform(self)

    def GetInverseTransform(self):
        r"""GetInverseTransform(self) -> itkCompositeTransformD4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetInverseTransform(self)

    def SetGradientStep(self, _arg):
        r"""
        SetGradientStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetGradientStep(self, _arg)

    def GetGradientStep(self):
        r"""GetGradientStep(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetGradientStep(self)

    def SetFlowSigma(self, _arg):
        r"""
        SetFlowSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetFlowSigma(self, _arg)

    def GetFlowSigma(self):
        r"""GetFlowSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetFlowSigma(self)

    def SetTotalSigma(self, _arg):
        r"""
        SetTotalSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetTotalSigma(self, _arg)

    def GetTotalSigma(self):
        r"""GetTotalSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetTotalSigma(self)

    def SetSamplingRate(self, _arg):
        r"""
        SetSamplingRate(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetSamplingRate(self, _arg)

    def GetSamplingRate(self):
        r"""GetSamplingRate(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetSamplingRate(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetNumberOfBins(self)

    def SetRandomSeed(self, _arg):
        r"""
        SetRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetRandomSeed(self, _arg)

    def GetRandomSeed(self):
        r"""GetRandomSeed(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetRandomSeed(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> unsigned int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetRadius(self)

    def SetUseGradientFilter(self, _arg):
        r"""
        SetUseGradientFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetUseGradientFilter(self, _arg)

    def GetUseGradientFilter(self):
        r"""GetUseGradientFilter(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetUseGradientFilter(self)

    def SetSmoothingInPhysicalUnits(self, _arg):
        r"""
        SetSmoothingInPhysicalUnits(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetSmoothingInPhysicalUnits(self, _arg)

    def GetSmoothingInPhysicalUnits(self):
        r"""GetSmoothingInPhysicalUnits(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetSmoothingInPhysicalUnits(self)

    def SetCollapseCompositeTransform(self, _arg):
        r"""
        SetCollapseCompositeTransform(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetCollapseCompositeTransform(self, _arg)

    def GetCollapseCompositeTransform(self):
        r"""GetCollapseCompositeTransform(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetCollapseCompositeTransform(self)

    def SetMaskAllStages(self, _arg):
        r"""
        SetMaskAllStages(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetMaskAllStages(self, _arg)

    def GetMaskAllStages(self):
        r"""GetMaskAllStages(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetMaskAllStages(self)

    def SetSynIterations(self, _arg):
        r"""
        SetSynIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetSynIterations(self, _arg)

    def GetSynIterations(self):
        r"""GetSynIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetSynIterations(self)

    def SetAffineIterations(self, _arg):
        r"""
        SetAffineIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetAffineIterations(self, _arg)

    def GetAffineIterations(self):
        r"""GetAffineIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetAffineIterations(self)

    def SetShrinkFactors(self, _arg):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetShrinkFactors(self, _arg)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetShrinkFactors(self)

    def SetSmoothingSigmas(self, _arg):
        r"""
        SetSmoothingSigmas(self, _arg)

        Parameters
        ----------
        _arg: std::vector< float,std::allocator< float > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetSmoothingSigmas(self, _arg)

    def GetSmoothingSigmas(self):
        r"""GetSmoothingSigmas(self) -> vectorF"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetSmoothingSigmas(self)

    def SetRestrictTransformation(self, _arg):
        r"""
        SetRestrictTransformation(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetRestrictTransformation(self, _arg)

    def GetRestrictTransformation(self):
        r"""GetRestrictTransformation(self) -> vectorD"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetRestrictTransformation(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self, i) -> itkDataObjectDecoratorCTD4

        Parameters
        ----------
        i: unsigned long

        GetOutput(self, i) -> itkDataObjectDecoratorCTD4

        Parameters
        ----------
        i: unsigned long

        GetOutput(self) -> itkDataObjectDecoratorCTD4
        GetOutput(self) -> itkDataObjectDecoratorCTD4
        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_GetOutput(self, *args)

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageF4 const *

        SetInput(self, index, image)

        Parameters
        ----------
        index: unsigned int
        image: itkImageF4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_SetInput(self, *args)
    __swig_destroy__ = _itkANTsRegistrationPython.delete_itkANTsRegistrationDIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkANTsRegistrationDIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkANTsRegistrationDIF4

        Create a new object of the class itkANTsRegistrationDIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTsRegistrationDIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTsRegistrationDIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTsRegistrationDIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTsRegistrationDIF4 in _itkANTsRegistrationPython:
_itkANTsRegistrationPython.itkANTsRegistrationDIF4_swigregister(itkANTsRegistrationDIF4)

def itkANTsRegistrationDISS2_New():
    return itkANTsRegistrationDISS2.New()

class itkANTsRegistrationDISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTsRegistrationDISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkANTsRegistrationDISS2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkANTsRegistrationDISS2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_Clone(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageSS2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetFixedImage(self, image)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetFixedImage(self)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageSS2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetMovingImage(self, image)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetMovingImage(self)

    def GetWarpedMovingImage(self):
        r"""GetWarpedMovingImage(self) -> itkImageSS2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetWarpedMovingImage(self)

    def GetWarpedFixedImage(self):
        r"""GetWarpedFixedImage(self) -> itkImageSS2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetWarpedFixedImage(self)

    def SetFixedMask(self, mask):
        r"""
        SetFixedMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetFixedMask(self, mask)

    def GetFixedMask(self):
        r"""GetFixedMask(self) -> itkImageUC2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetFixedMask(self)

    def SetMovingMask(self, mask):
        r"""
        SetMovingMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetMovingMask(self, mask)

    def GetMovingMask(self):
        r"""GetMovingMask(self) -> itkImageUC2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetMovingMask(self)

    def SetTypeOfTransform(self, *args):
        r"""
        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetTypeOfTransform(self, *args)

    def GetTypeOfTransform(self):
        r"""GetTypeOfTransform(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetTypeOfTransform(self)

    def SetAffineMetric(self, *args):
        r"""
        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetAffineMetric(self, *args)

    def GetAffineMetric(self):
        r"""GetAffineMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetAffineMetric(self)

    def SetSynMetric(self, *args):
        r"""
        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetSynMetric(self, *args)

    def GetSynMetric(self):
        r"""GetSynMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetSynMetric(self)

    def SetInitialTransformInput(self, _arg):
        r"""
        SetInitialTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD22 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetInitialTransformInput(self, _arg)

    def SetInitialTransform(self, _arg):
        r"""
        SetInitialTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetInitialTransform(self, _arg)

    def GetInitialTransformInput(self):
        r"""GetInitialTransformInput(self) -> itkDataObjectDecoratorTD22"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetInitialTransformInput(self)

    def GetInitialTransform(self):
        r"""GetInitialTransform(self) -> itkTransformD22"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetInitialTransform(self)

    def GetForwardTransform(self):
        r"""GetForwardTransform(self) -> itkCompositeTransformD2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetForwardTransform(self)

    def GetInverseTransform(self):
        r"""GetInverseTransform(self) -> itkCompositeTransformD2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetInverseTransform(self)

    def SetGradientStep(self, _arg):
        r"""
        SetGradientStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetGradientStep(self, _arg)

    def GetGradientStep(self):
        r"""GetGradientStep(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetGradientStep(self)

    def SetFlowSigma(self, _arg):
        r"""
        SetFlowSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetFlowSigma(self, _arg)

    def GetFlowSigma(self):
        r"""GetFlowSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetFlowSigma(self)

    def SetTotalSigma(self, _arg):
        r"""
        SetTotalSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetTotalSigma(self, _arg)

    def GetTotalSigma(self):
        r"""GetTotalSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetTotalSigma(self)

    def SetSamplingRate(self, _arg):
        r"""
        SetSamplingRate(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetSamplingRate(self, _arg)

    def GetSamplingRate(self):
        r"""GetSamplingRate(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetSamplingRate(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetNumberOfBins(self)

    def SetRandomSeed(self, _arg):
        r"""
        SetRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetRandomSeed(self, _arg)

    def GetRandomSeed(self):
        r"""GetRandomSeed(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetRandomSeed(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> unsigned int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetRadius(self)

    def SetUseGradientFilter(self, _arg):
        r"""
        SetUseGradientFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetUseGradientFilter(self, _arg)

    def GetUseGradientFilter(self):
        r"""GetUseGradientFilter(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetUseGradientFilter(self)

    def SetSmoothingInPhysicalUnits(self, _arg):
        r"""
        SetSmoothingInPhysicalUnits(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetSmoothingInPhysicalUnits(self, _arg)

    def GetSmoothingInPhysicalUnits(self):
        r"""GetSmoothingInPhysicalUnits(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetSmoothingInPhysicalUnits(self)

    def SetCollapseCompositeTransform(self, _arg):
        r"""
        SetCollapseCompositeTransform(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetCollapseCompositeTransform(self, _arg)

    def GetCollapseCompositeTransform(self):
        r"""GetCollapseCompositeTransform(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetCollapseCompositeTransform(self)

    def SetMaskAllStages(self, _arg):
        r"""
        SetMaskAllStages(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetMaskAllStages(self, _arg)

    def GetMaskAllStages(self):
        r"""GetMaskAllStages(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetMaskAllStages(self)

    def SetSynIterations(self, _arg):
        r"""
        SetSynIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetSynIterations(self, _arg)

    def GetSynIterations(self):
        r"""GetSynIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetSynIterations(self)

    def SetAffineIterations(self, _arg):
        r"""
        SetAffineIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetAffineIterations(self, _arg)

    def GetAffineIterations(self):
        r"""GetAffineIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetAffineIterations(self)

    def SetShrinkFactors(self, _arg):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetShrinkFactors(self, _arg)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetShrinkFactors(self)

    def SetSmoothingSigmas(self, _arg):
        r"""
        SetSmoothingSigmas(self, _arg)

        Parameters
        ----------
        _arg: std::vector< float,std::allocator< float > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetSmoothingSigmas(self, _arg)

    def GetSmoothingSigmas(self):
        r"""GetSmoothingSigmas(self) -> vectorF"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetSmoothingSigmas(self)

    def SetRestrictTransformation(self, _arg):
        r"""
        SetRestrictTransformation(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetRestrictTransformation(self, _arg)

    def GetRestrictTransformation(self):
        r"""GetRestrictTransformation(self) -> vectorD"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetRestrictTransformation(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self, i) -> itkDataObjectDecoratorCTD2

        Parameters
        ----------
        i: unsigned long

        GetOutput(self, i) -> itkDataObjectDecoratorCTD2

        Parameters
        ----------
        i: unsigned long

        GetOutput(self) -> itkDataObjectDecoratorCTD2
        GetOutput(self) -> itkDataObjectDecoratorCTD2
        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_GetOutput(self, *args)

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageSS2 const *

        SetInput(self, index, image)

        Parameters
        ----------
        index: unsigned int
        image: itkImageSS2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_SetInput(self, *args)
    __swig_destroy__ = _itkANTsRegistrationPython.delete_itkANTsRegistrationDISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkANTsRegistrationDISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkANTsRegistrationDISS2

        Create a new object of the class itkANTsRegistrationDISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTsRegistrationDISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTsRegistrationDISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTsRegistrationDISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTsRegistrationDISS2 in _itkANTsRegistrationPython:
_itkANTsRegistrationPython.itkANTsRegistrationDISS2_swigregister(itkANTsRegistrationDISS2)

def itkANTsRegistrationDISS3_New():
    return itkANTsRegistrationDISS3.New()

class itkANTsRegistrationDISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTsRegistrationDISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkANTsRegistrationDISS3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkANTsRegistrationDISS3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_Clone(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageSS3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetFixedImage(self, image)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetFixedImage(self)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageSS3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetMovingImage(self, image)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetMovingImage(self)

    def GetWarpedMovingImage(self):
        r"""GetWarpedMovingImage(self) -> itkImageSS3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetWarpedMovingImage(self)

    def GetWarpedFixedImage(self):
        r"""GetWarpedFixedImage(self) -> itkImageSS3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetWarpedFixedImage(self)

    def SetFixedMask(self, mask):
        r"""
        SetFixedMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetFixedMask(self, mask)

    def GetFixedMask(self):
        r"""GetFixedMask(self) -> itkImageUC3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetFixedMask(self)

    def SetMovingMask(self, mask):
        r"""
        SetMovingMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetMovingMask(self, mask)

    def GetMovingMask(self):
        r"""GetMovingMask(self) -> itkImageUC3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetMovingMask(self)

    def SetTypeOfTransform(self, *args):
        r"""
        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetTypeOfTransform(self, *args)

    def GetTypeOfTransform(self):
        r"""GetTypeOfTransform(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetTypeOfTransform(self)

    def SetAffineMetric(self, *args):
        r"""
        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetAffineMetric(self, *args)

    def GetAffineMetric(self):
        r"""GetAffineMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetAffineMetric(self)

    def SetSynMetric(self, *args):
        r"""
        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetSynMetric(self, *args)

    def GetSynMetric(self):
        r"""GetSynMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetSynMetric(self)

    def SetInitialTransformInput(self, _arg):
        r"""
        SetInitialTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD33 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetInitialTransformInput(self, _arg)

    def SetInitialTransform(self, _arg):
        r"""
        SetInitialTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetInitialTransform(self, _arg)

    def GetInitialTransformInput(self):
        r"""GetInitialTransformInput(self) -> itkDataObjectDecoratorTD33"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetInitialTransformInput(self)

    def GetInitialTransform(self):
        r"""GetInitialTransform(self) -> itkTransformD33"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetInitialTransform(self)

    def GetForwardTransform(self):
        r"""GetForwardTransform(self) -> itkCompositeTransformD3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetForwardTransform(self)

    def GetInverseTransform(self):
        r"""GetInverseTransform(self) -> itkCompositeTransformD3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetInverseTransform(self)

    def SetGradientStep(self, _arg):
        r"""
        SetGradientStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetGradientStep(self, _arg)

    def GetGradientStep(self):
        r"""GetGradientStep(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetGradientStep(self)

    def SetFlowSigma(self, _arg):
        r"""
        SetFlowSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetFlowSigma(self, _arg)

    def GetFlowSigma(self):
        r"""GetFlowSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetFlowSigma(self)

    def SetTotalSigma(self, _arg):
        r"""
        SetTotalSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetTotalSigma(self, _arg)

    def GetTotalSigma(self):
        r"""GetTotalSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetTotalSigma(self)

    def SetSamplingRate(self, _arg):
        r"""
        SetSamplingRate(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetSamplingRate(self, _arg)

    def GetSamplingRate(self):
        r"""GetSamplingRate(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetSamplingRate(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetNumberOfBins(self)

    def SetRandomSeed(self, _arg):
        r"""
        SetRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetRandomSeed(self, _arg)

    def GetRandomSeed(self):
        r"""GetRandomSeed(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetRandomSeed(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> unsigned int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetRadius(self)

    def SetUseGradientFilter(self, _arg):
        r"""
        SetUseGradientFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetUseGradientFilter(self, _arg)

    def GetUseGradientFilter(self):
        r"""GetUseGradientFilter(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetUseGradientFilter(self)

    def SetSmoothingInPhysicalUnits(self, _arg):
        r"""
        SetSmoothingInPhysicalUnits(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetSmoothingInPhysicalUnits(self, _arg)

    def GetSmoothingInPhysicalUnits(self):
        r"""GetSmoothingInPhysicalUnits(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetSmoothingInPhysicalUnits(self)

    def SetCollapseCompositeTransform(self, _arg):
        r"""
        SetCollapseCompositeTransform(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetCollapseCompositeTransform(self, _arg)

    def GetCollapseCompositeTransform(self):
        r"""GetCollapseCompositeTransform(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetCollapseCompositeTransform(self)

    def SetMaskAllStages(self, _arg):
        r"""
        SetMaskAllStages(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetMaskAllStages(self, _arg)

    def GetMaskAllStages(self):
        r"""GetMaskAllStages(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetMaskAllStages(self)

    def SetSynIterations(self, _arg):
        r"""
        SetSynIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetSynIterations(self, _arg)

    def GetSynIterations(self):
        r"""GetSynIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetSynIterations(self)

    def SetAffineIterations(self, _arg):
        r"""
        SetAffineIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetAffineIterations(self, _arg)

    def GetAffineIterations(self):
        r"""GetAffineIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetAffineIterations(self)

    def SetShrinkFactors(self, _arg):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetShrinkFactors(self, _arg)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetShrinkFactors(self)

    def SetSmoothingSigmas(self, _arg):
        r"""
        SetSmoothingSigmas(self, _arg)

        Parameters
        ----------
        _arg: std::vector< float,std::allocator< float > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetSmoothingSigmas(self, _arg)

    def GetSmoothingSigmas(self):
        r"""GetSmoothingSigmas(self) -> vectorF"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetSmoothingSigmas(self)

    def SetRestrictTransformation(self, _arg):
        r"""
        SetRestrictTransformation(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetRestrictTransformation(self, _arg)

    def GetRestrictTransformation(self):
        r"""GetRestrictTransformation(self) -> vectorD"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetRestrictTransformation(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self, i) -> itkDataObjectDecoratorCTD3

        Parameters
        ----------
        i: unsigned long

        GetOutput(self, i) -> itkDataObjectDecoratorCTD3

        Parameters
        ----------
        i: unsigned long

        GetOutput(self) -> itkDataObjectDecoratorCTD3
        GetOutput(self) -> itkDataObjectDecoratorCTD3
        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_GetOutput(self, *args)

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        SetInput(self, index, image)

        Parameters
        ----------
        index: unsigned int
        image: itkImageSS3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_SetInput(self, *args)
    __swig_destroy__ = _itkANTsRegistrationPython.delete_itkANTsRegistrationDISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkANTsRegistrationDISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkANTsRegistrationDISS3

        Create a new object of the class itkANTsRegistrationDISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTsRegistrationDISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTsRegistrationDISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTsRegistrationDISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTsRegistrationDISS3 in _itkANTsRegistrationPython:
_itkANTsRegistrationPython.itkANTsRegistrationDISS3_swigregister(itkANTsRegistrationDISS3)

def itkANTsRegistrationDISS4_New():
    return itkANTsRegistrationDISS4.New()

class itkANTsRegistrationDISS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTsRegistrationDISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkANTsRegistrationDISS4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkANTsRegistrationDISS4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_Clone(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageSS4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetFixedImage(self, image)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetFixedImage(self)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageSS4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetMovingImage(self, image)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetMovingImage(self)

    def GetWarpedMovingImage(self):
        r"""GetWarpedMovingImage(self) -> itkImageSS4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetWarpedMovingImage(self)

    def GetWarpedFixedImage(self):
        r"""GetWarpedFixedImage(self) -> itkImageSS4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetWarpedFixedImage(self)

    def SetFixedMask(self, mask):
        r"""
        SetFixedMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetFixedMask(self, mask)

    def GetFixedMask(self):
        r"""GetFixedMask(self) -> itkImageUC4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetFixedMask(self)

    def SetMovingMask(self, mask):
        r"""
        SetMovingMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetMovingMask(self, mask)

    def GetMovingMask(self):
        r"""GetMovingMask(self) -> itkImageUC4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetMovingMask(self)

    def SetTypeOfTransform(self, *args):
        r"""
        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetTypeOfTransform(self, *args)

    def GetTypeOfTransform(self):
        r"""GetTypeOfTransform(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetTypeOfTransform(self)

    def SetAffineMetric(self, *args):
        r"""
        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetAffineMetric(self, *args)

    def GetAffineMetric(self):
        r"""GetAffineMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetAffineMetric(self)

    def SetSynMetric(self, *args):
        r"""
        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetSynMetric(self, *args)

    def GetSynMetric(self):
        r"""GetSynMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetSynMetric(self)

    def SetInitialTransformInput(self, _arg):
        r"""
        SetInitialTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD44 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetInitialTransformInput(self, _arg)

    def SetInitialTransform(self, _arg):
        r"""
        SetInitialTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetInitialTransform(self, _arg)

    def GetInitialTransformInput(self):
        r"""GetInitialTransformInput(self) -> itkDataObjectDecoratorTD44"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetInitialTransformInput(self)

    def GetInitialTransform(self):
        r"""GetInitialTransform(self) -> itkTransformD44"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetInitialTransform(self)

    def GetForwardTransform(self):
        r"""GetForwardTransform(self) -> itkCompositeTransformD4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetForwardTransform(self)

    def GetInverseTransform(self):
        r"""GetInverseTransform(self) -> itkCompositeTransformD4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetInverseTransform(self)

    def SetGradientStep(self, _arg):
        r"""
        SetGradientStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetGradientStep(self, _arg)

    def GetGradientStep(self):
        r"""GetGradientStep(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetGradientStep(self)

    def SetFlowSigma(self, _arg):
        r"""
        SetFlowSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetFlowSigma(self, _arg)

    def GetFlowSigma(self):
        r"""GetFlowSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetFlowSigma(self)

    def SetTotalSigma(self, _arg):
        r"""
        SetTotalSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetTotalSigma(self, _arg)

    def GetTotalSigma(self):
        r"""GetTotalSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetTotalSigma(self)

    def SetSamplingRate(self, _arg):
        r"""
        SetSamplingRate(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetSamplingRate(self, _arg)

    def GetSamplingRate(self):
        r"""GetSamplingRate(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetSamplingRate(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetNumberOfBins(self)

    def SetRandomSeed(self, _arg):
        r"""
        SetRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetRandomSeed(self, _arg)

    def GetRandomSeed(self):
        r"""GetRandomSeed(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetRandomSeed(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> unsigned int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetRadius(self)

    def SetUseGradientFilter(self, _arg):
        r"""
        SetUseGradientFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetUseGradientFilter(self, _arg)

    def GetUseGradientFilter(self):
        r"""GetUseGradientFilter(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetUseGradientFilter(self)

    def SetSmoothingInPhysicalUnits(self, _arg):
        r"""
        SetSmoothingInPhysicalUnits(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetSmoothingInPhysicalUnits(self, _arg)

    def GetSmoothingInPhysicalUnits(self):
        r"""GetSmoothingInPhysicalUnits(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetSmoothingInPhysicalUnits(self)

    def SetCollapseCompositeTransform(self, _arg):
        r"""
        SetCollapseCompositeTransform(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetCollapseCompositeTransform(self, _arg)

    def GetCollapseCompositeTransform(self):
        r"""GetCollapseCompositeTransform(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetCollapseCompositeTransform(self)

    def SetMaskAllStages(self, _arg):
        r"""
        SetMaskAllStages(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetMaskAllStages(self, _arg)

    def GetMaskAllStages(self):
        r"""GetMaskAllStages(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetMaskAllStages(self)

    def SetSynIterations(self, _arg):
        r"""
        SetSynIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetSynIterations(self, _arg)

    def GetSynIterations(self):
        r"""GetSynIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetSynIterations(self)

    def SetAffineIterations(self, _arg):
        r"""
        SetAffineIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetAffineIterations(self, _arg)

    def GetAffineIterations(self):
        r"""GetAffineIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetAffineIterations(self)

    def SetShrinkFactors(self, _arg):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetShrinkFactors(self, _arg)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetShrinkFactors(self)

    def SetSmoothingSigmas(self, _arg):
        r"""
        SetSmoothingSigmas(self, _arg)

        Parameters
        ----------
        _arg: std::vector< float,std::allocator< float > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetSmoothingSigmas(self, _arg)

    def GetSmoothingSigmas(self):
        r"""GetSmoothingSigmas(self) -> vectorF"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetSmoothingSigmas(self)

    def SetRestrictTransformation(self, _arg):
        r"""
        SetRestrictTransformation(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetRestrictTransformation(self, _arg)

    def GetRestrictTransformation(self):
        r"""GetRestrictTransformation(self) -> vectorD"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetRestrictTransformation(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self, i) -> itkDataObjectDecoratorCTD4

        Parameters
        ----------
        i: unsigned long

        GetOutput(self, i) -> itkDataObjectDecoratorCTD4

        Parameters
        ----------
        i: unsigned long

        GetOutput(self) -> itkDataObjectDecoratorCTD4
        GetOutput(self) -> itkDataObjectDecoratorCTD4
        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_GetOutput(self, *args)

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageSS4 const *

        SetInput(self, index, image)

        Parameters
        ----------
        index: unsigned int
        image: itkImageSS4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_SetInput(self, *args)
    __swig_destroy__ = _itkANTsRegistrationPython.delete_itkANTsRegistrationDISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkANTsRegistrationDISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkANTsRegistrationDISS4

        Create a new object of the class itkANTsRegistrationDISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTsRegistrationDISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTsRegistrationDISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTsRegistrationDISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTsRegistrationDISS4 in _itkANTsRegistrationPython:
_itkANTsRegistrationPython.itkANTsRegistrationDISS4_swigregister(itkANTsRegistrationDISS4)

def itkANTsRegistrationDIUC2_New():
    return itkANTsRegistrationDIUC2.New()

class itkANTsRegistrationDIUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTsRegistrationDIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkANTsRegistrationDIUC2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkANTsRegistrationDIUC2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_Clone(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageUC2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetFixedImage(self, image)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetFixedImage(self)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageUC2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetMovingImage(self, image)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetMovingImage(self)

    def GetWarpedMovingImage(self):
        r"""GetWarpedMovingImage(self) -> itkImageUC2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetWarpedMovingImage(self)

    def GetWarpedFixedImage(self):
        r"""GetWarpedFixedImage(self) -> itkImageUC2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetWarpedFixedImage(self)

    def SetFixedMask(self, mask):
        r"""
        SetFixedMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetFixedMask(self, mask)

    def GetFixedMask(self):
        r"""GetFixedMask(self) -> itkImageUC2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetFixedMask(self)

    def SetMovingMask(self, mask):
        r"""
        SetMovingMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetMovingMask(self, mask)

    def GetMovingMask(self):
        r"""GetMovingMask(self) -> itkImageUC2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetMovingMask(self)

    def SetTypeOfTransform(self, *args):
        r"""
        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetTypeOfTransform(self, *args)

    def GetTypeOfTransform(self):
        r"""GetTypeOfTransform(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetTypeOfTransform(self)

    def SetAffineMetric(self, *args):
        r"""
        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetAffineMetric(self, *args)

    def GetAffineMetric(self):
        r"""GetAffineMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetAffineMetric(self)

    def SetSynMetric(self, *args):
        r"""
        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetSynMetric(self, *args)

    def GetSynMetric(self):
        r"""GetSynMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetSynMetric(self)

    def SetInitialTransformInput(self, _arg):
        r"""
        SetInitialTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD22 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetInitialTransformInput(self, _arg)

    def SetInitialTransform(self, _arg):
        r"""
        SetInitialTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetInitialTransform(self, _arg)

    def GetInitialTransformInput(self):
        r"""GetInitialTransformInput(self) -> itkDataObjectDecoratorTD22"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetInitialTransformInput(self)

    def GetInitialTransform(self):
        r"""GetInitialTransform(self) -> itkTransformD22"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetInitialTransform(self)

    def GetForwardTransform(self):
        r"""GetForwardTransform(self) -> itkCompositeTransformD2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetForwardTransform(self)

    def GetInverseTransform(self):
        r"""GetInverseTransform(self) -> itkCompositeTransformD2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetInverseTransform(self)

    def SetGradientStep(self, _arg):
        r"""
        SetGradientStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetGradientStep(self, _arg)

    def GetGradientStep(self):
        r"""GetGradientStep(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetGradientStep(self)

    def SetFlowSigma(self, _arg):
        r"""
        SetFlowSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetFlowSigma(self, _arg)

    def GetFlowSigma(self):
        r"""GetFlowSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetFlowSigma(self)

    def SetTotalSigma(self, _arg):
        r"""
        SetTotalSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetTotalSigma(self, _arg)

    def GetTotalSigma(self):
        r"""GetTotalSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetTotalSigma(self)

    def SetSamplingRate(self, _arg):
        r"""
        SetSamplingRate(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetSamplingRate(self, _arg)

    def GetSamplingRate(self):
        r"""GetSamplingRate(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetSamplingRate(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetNumberOfBins(self)

    def SetRandomSeed(self, _arg):
        r"""
        SetRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetRandomSeed(self, _arg)

    def GetRandomSeed(self):
        r"""GetRandomSeed(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetRandomSeed(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> unsigned int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetRadius(self)

    def SetUseGradientFilter(self, _arg):
        r"""
        SetUseGradientFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetUseGradientFilter(self, _arg)

    def GetUseGradientFilter(self):
        r"""GetUseGradientFilter(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetUseGradientFilter(self)

    def SetSmoothingInPhysicalUnits(self, _arg):
        r"""
        SetSmoothingInPhysicalUnits(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetSmoothingInPhysicalUnits(self, _arg)

    def GetSmoothingInPhysicalUnits(self):
        r"""GetSmoothingInPhysicalUnits(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetSmoothingInPhysicalUnits(self)

    def SetCollapseCompositeTransform(self, _arg):
        r"""
        SetCollapseCompositeTransform(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetCollapseCompositeTransform(self, _arg)

    def GetCollapseCompositeTransform(self):
        r"""GetCollapseCompositeTransform(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetCollapseCompositeTransform(self)

    def SetMaskAllStages(self, _arg):
        r"""
        SetMaskAllStages(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetMaskAllStages(self, _arg)

    def GetMaskAllStages(self):
        r"""GetMaskAllStages(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetMaskAllStages(self)

    def SetSynIterations(self, _arg):
        r"""
        SetSynIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetSynIterations(self, _arg)

    def GetSynIterations(self):
        r"""GetSynIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetSynIterations(self)

    def SetAffineIterations(self, _arg):
        r"""
        SetAffineIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetAffineIterations(self, _arg)

    def GetAffineIterations(self):
        r"""GetAffineIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetAffineIterations(self)

    def SetShrinkFactors(self, _arg):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetShrinkFactors(self, _arg)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetShrinkFactors(self)

    def SetSmoothingSigmas(self, _arg):
        r"""
        SetSmoothingSigmas(self, _arg)

        Parameters
        ----------
        _arg: std::vector< float,std::allocator< float > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetSmoothingSigmas(self, _arg)

    def GetSmoothingSigmas(self):
        r"""GetSmoothingSigmas(self) -> vectorF"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetSmoothingSigmas(self)

    def SetRestrictTransformation(self, _arg):
        r"""
        SetRestrictTransformation(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetRestrictTransformation(self, _arg)

    def GetRestrictTransformation(self):
        r"""GetRestrictTransformation(self) -> vectorD"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetRestrictTransformation(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self, i) -> itkDataObjectDecoratorCTD2

        Parameters
        ----------
        i: unsigned long

        GetOutput(self, i) -> itkDataObjectDecoratorCTD2

        Parameters
        ----------
        i: unsigned long

        GetOutput(self) -> itkDataObjectDecoratorCTD2
        GetOutput(self) -> itkDataObjectDecoratorCTD2
        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_GetOutput(self, *args)

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        SetInput(self, index, image)

        Parameters
        ----------
        index: unsigned int
        image: itkImageUC2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_SetInput(self, *args)
    __swig_destroy__ = _itkANTsRegistrationPython.delete_itkANTsRegistrationDIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkANTsRegistrationDIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkANTsRegistrationDIUC2

        Create a new object of the class itkANTsRegistrationDIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTsRegistrationDIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTsRegistrationDIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTsRegistrationDIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTsRegistrationDIUC2 in _itkANTsRegistrationPython:
_itkANTsRegistrationPython.itkANTsRegistrationDIUC2_swigregister(itkANTsRegistrationDIUC2)

def itkANTsRegistrationDIUC3_New():
    return itkANTsRegistrationDIUC3.New()

class itkANTsRegistrationDIUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTsRegistrationDIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkANTsRegistrationDIUC3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkANTsRegistrationDIUC3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_Clone(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageUC3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetFixedImage(self, image)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetFixedImage(self)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageUC3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetMovingImage(self, image)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetMovingImage(self)

    def GetWarpedMovingImage(self):
        r"""GetWarpedMovingImage(self) -> itkImageUC3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetWarpedMovingImage(self)

    def GetWarpedFixedImage(self):
        r"""GetWarpedFixedImage(self) -> itkImageUC3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetWarpedFixedImage(self)

    def SetFixedMask(self, mask):
        r"""
        SetFixedMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetFixedMask(self, mask)

    def GetFixedMask(self):
        r"""GetFixedMask(self) -> itkImageUC3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetFixedMask(self)

    def SetMovingMask(self, mask):
        r"""
        SetMovingMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetMovingMask(self, mask)

    def GetMovingMask(self):
        r"""GetMovingMask(self) -> itkImageUC3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetMovingMask(self)

    def SetTypeOfTransform(self, *args):
        r"""
        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetTypeOfTransform(self, *args)

    def GetTypeOfTransform(self):
        r"""GetTypeOfTransform(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetTypeOfTransform(self)

    def SetAffineMetric(self, *args):
        r"""
        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetAffineMetric(self, *args)

    def GetAffineMetric(self):
        r"""GetAffineMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetAffineMetric(self)

    def SetSynMetric(self, *args):
        r"""
        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetSynMetric(self, *args)

    def GetSynMetric(self):
        r"""GetSynMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetSynMetric(self)

    def SetInitialTransformInput(self, _arg):
        r"""
        SetInitialTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD33 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetInitialTransformInput(self, _arg)

    def SetInitialTransform(self, _arg):
        r"""
        SetInitialTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetInitialTransform(self, _arg)

    def GetInitialTransformInput(self):
        r"""GetInitialTransformInput(self) -> itkDataObjectDecoratorTD33"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetInitialTransformInput(self)

    def GetInitialTransform(self):
        r"""GetInitialTransform(self) -> itkTransformD33"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetInitialTransform(self)

    def GetForwardTransform(self):
        r"""GetForwardTransform(self) -> itkCompositeTransformD3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetForwardTransform(self)

    def GetInverseTransform(self):
        r"""GetInverseTransform(self) -> itkCompositeTransformD3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetInverseTransform(self)

    def SetGradientStep(self, _arg):
        r"""
        SetGradientStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetGradientStep(self, _arg)

    def GetGradientStep(self):
        r"""GetGradientStep(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetGradientStep(self)

    def SetFlowSigma(self, _arg):
        r"""
        SetFlowSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetFlowSigma(self, _arg)

    def GetFlowSigma(self):
        r"""GetFlowSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetFlowSigma(self)

    def SetTotalSigma(self, _arg):
        r"""
        SetTotalSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetTotalSigma(self, _arg)

    def GetTotalSigma(self):
        r"""GetTotalSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetTotalSigma(self)

    def SetSamplingRate(self, _arg):
        r"""
        SetSamplingRate(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetSamplingRate(self, _arg)

    def GetSamplingRate(self):
        r"""GetSamplingRate(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetSamplingRate(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetNumberOfBins(self)

    def SetRandomSeed(self, _arg):
        r"""
        SetRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetRandomSeed(self, _arg)

    def GetRandomSeed(self):
        r"""GetRandomSeed(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetRandomSeed(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> unsigned int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetRadius(self)

    def SetUseGradientFilter(self, _arg):
        r"""
        SetUseGradientFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetUseGradientFilter(self, _arg)

    def GetUseGradientFilter(self):
        r"""GetUseGradientFilter(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetUseGradientFilter(self)

    def SetSmoothingInPhysicalUnits(self, _arg):
        r"""
        SetSmoothingInPhysicalUnits(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetSmoothingInPhysicalUnits(self, _arg)

    def GetSmoothingInPhysicalUnits(self):
        r"""GetSmoothingInPhysicalUnits(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetSmoothingInPhysicalUnits(self)

    def SetCollapseCompositeTransform(self, _arg):
        r"""
        SetCollapseCompositeTransform(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetCollapseCompositeTransform(self, _arg)

    def GetCollapseCompositeTransform(self):
        r"""GetCollapseCompositeTransform(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetCollapseCompositeTransform(self)

    def SetMaskAllStages(self, _arg):
        r"""
        SetMaskAllStages(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetMaskAllStages(self, _arg)

    def GetMaskAllStages(self):
        r"""GetMaskAllStages(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetMaskAllStages(self)

    def SetSynIterations(self, _arg):
        r"""
        SetSynIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetSynIterations(self, _arg)

    def GetSynIterations(self):
        r"""GetSynIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetSynIterations(self)

    def SetAffineIterations(self, _arg):
        r"""
        SetAffineIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetAffineIterations(self, _arg)

    def GetAffineIterations(self):
        r"""GetAffineIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetAffineIterations(self)

    def SetShrinkFactors(self, _arg):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetShrinkFactors(self, _arg)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetShrinkFactors(self)

    def SetSmoothingSigmas(self, _arg):
        r"""
        SetSmoothingSigmas(self, _arg)

        Parameters
        ----------
        _arg: std::vector< float,std::allocator< float > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetSmoothingSigmas(self, _arg)

    def GetSmoothingSigmas(self):
        r"""GetSmoothingSigmas(self) -> vectorF"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetSmoothingSigmas(self)

    def SetRestrictTransformation(self, _arg):
        r"""
        SetRestrictTransformation(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetRestrictTransformation(self, _arg)

    def GetRestrictTransformation(self):
        r"""GetRestrictTransformation(self) -> vectorD"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetRestrictTransformation(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self, i) -> itkDataObjectDecoratorCTD3

        Parameters
        ----------
        i: unsigned long

        GetOutput(self, i) -> itkDataObjectDecoratorCTD3

        Parameters
        ----------
        i: unsigned long

        GetOutput(self) -> itkDataObjectDecoratorCTD3
        GetOutput(self) -> itkDataObjectDecoratorCTD3
        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_GetOutput(self, *args)

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        SetInput(self, index, image)

        Parameters
        ----------
        index: unsigned int
        image: itkImageUC3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_SetInput(self, *args)
    __swig_destroy__ = _itkANTsRegistrationPython.delete_itkANTsRegistrationDIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkANTsRegistrationDIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkANTsRegistrationDIUC3

        Create a new object of the class itkANTsRegistrationDIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTsRegistrationDIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTsRegistrationDIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTsRegistrationDIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTsRegistrationDIUC3 in _itkANTsRegistrationPython:
_itkANTsRegistrationPython.itkANTsRegistrationDIUC3_swigregister(itkANTsRegistrationDIUC3)

def itkANTsRegistrationDIUC4_New():
    return itkANTsRegistrationDIUC4.New()

class itkANTsRegistrationDIUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTsRegistrationDIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkANTsRegistrationDIUC4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkANTsRegistrationDIUC4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_Clone(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageUC4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetFixedImage(self, image)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetFixedImage(self)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageUC4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetMovingImage(self, image)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetMovingImage(self)

    def GetWarpedMovingImage(self):
        r"""GetWarpedMovingImage(self) -> itkImageUC4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetWarpedMovingImage(self)

    def GetWarpedFixedImage(self):
        r"""GetWarpedFixedImage(self) -> itkImageUC4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetWarpedFixedImage(self)

    def SetFixedMask(self, mask):
        r"""
        SetFixedMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetFixedMask(self, mask)

    def GetFixedMask(self):
        r"""GetFixedMask(self) -> itkImageUC4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetFixedMask(self)

    def SetMovingMask(self, mask):
        r"""
        SetMovingMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetMovingMask(self, mask)

    def GetMovingMask(self):
        r"""GetMovingMask(self) -> itkImageUC4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetMovingMask(self)

    def SetTypeOfTransform(self, *args):
        r"""
        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetTypeOfTransform(self, *args)

    def GetTypeOfTransform(self):
        r"""GetTypeOfTransform(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetTypeOfTransform(self)

    def SetAffineMetric(self, *args):
        r"""
        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetAffineMetric(self, *args)

    def GetAffineMetric(self):
        r"""GetAffineMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetAffineMetric(self)

    def SetSynMetric(self, *args):
        r"""
        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetSynMetric(self, *args)

    def GetSynMetric(self):
        r"""GetSynMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetSynMetric(self)

    def SetInitialTransformInput(self, _arg):
        r"""
        SetInitialTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD44 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetInitialTransformInput(self, _arg)

    def SetInitialTransform(self, _arg):
        r"""
        SetInitialTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetInitialTransform(self, _arg)

    def GetInitialTransformInput(self):
        r"""GetInitialTransformInput(self) -> itkDataObjectDecoratorTD44"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetInitialTransformInput(self)

    def GetInitialTransform(self):
        r"""GetInitialTransform(self) -> itkTransformD44"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetInitialTransform(self)

    def GetForwardTransform(self):
        r"""GetForwardTransform(self) -> itkCompositeTransformD4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetForwardTransform(self)

    def GetInverseTransform(self):
        r"""GetInverseTransform(self) -> itkCompositeTransformD4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetInverseTransform(self)

    def SetGradientStep(self, _arg):
        r"""
        SetGradientStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetGradientStep(self, _arg)

    def GetGradientStep(self):
        r"""GetGradientStep(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetGradientStep(self)

    def SetFlowSigma(self, _arg):
        r"""
        SetFlowSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetFlowSigma(self, _arg)

    def GetFlowSigma(self):
        r"""GetFlowSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetFlowSigma(self)

    def SetTotalSigma(self, _arg):
        r"""
        SetTotalSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetTotalSigma(self, _arg)

    def GetTotalSigma(self):
        r"""GetTotalSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetTotalSigma(self)

    def SetSamplingRate(self, _arg):
        r"""
        SetSamplingRate(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetSamplingRate(self, _arg)

    def GetSamplingRate(self):
        r"""GetSamplingRate(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetSamplingRate(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetNumberOfBins(self)

    def SetRandomSeed(self, _arg):
        r"""
        SetRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetRandomSeed(self, _arg)

    def GetRandomSeed(self):
        r"""GetRandomSeed(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetRandomSeed(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> unsigned int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetRadius(self)

    def SetUseGradientFilter(self, _arg):
        r"""
        SetUseGradientFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetUseGradientFilter(self, _arg)

    def GetUseGradientFilter(self):
        r"""GetUseGradientFilter(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetUseGradientFilter(self)

    def SetSmoothingInPhysicalUnits(self, _arg):
        r"""
        SetSmoothingInPhysicalUnits(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetSmoothingInPhysicalUnits(self, _arg)

    def GetSmoothingInPhysicalUnits(self):
        r"""GetSmoothingInPhysicalUnits(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetSmoothingInPhysicalUnits(self)

    def SetCollapseCompositeTransform(self, _arg):
        r"""
        SetCollapseCompositeTransform(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetCollapseCompositeTransform(self, _arg)

    def GetCollapseCompositeTransform(self):
        r"""GetCollapseCompositeTransform(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetCollapseCompositeTransform(self)

    def SetMaskAllStages(self, _arg):
        r"""
        SetMaskAllStages(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetMaskAllStages(self, _arg)

    def GetMaskAllStages(self):
        r"""GetMaskAllStages(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetMaskAllStages(self)

    def SetSynIterations(self, _arg):
        r"""
        SetSynIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetSynIterations(self, _arg)

    def GetSynIterations(self):
        r"""GetSynIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetSynIterations(self)

    def SetAffineIterations(self, _arg):
        r"""
        SetAffineIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetAffineIterations(self, _arg)

    def GetAffineIterations(self):
        r"""GetAffineIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetAffineIterations(self)

    def SetShrinkFactors(self, _arg):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetShrinkFactors(self, _arg)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetShrinkFactors(self)

    def SetSmoothingSigmas(self, _arg):
        r"""
        SetSmoothingSigmas(self, _arg)

        Parameters
        ----------
        _arg: std::vector< float,std::allocator< float > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetSmoothingSigmas(self, _arg)

    def GetSmoothingSigmas(self):
        r"""GetSmoothingSigmas(self) -> vectorF"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetSmoothingSigmas(self)

    def SetRestrictTransformation(self, _arg):
        r"""
        SetRestrictTransformation(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetRestrictTransformation(self, _arg)

    def GetRestrictTransformation(self):
        r"""GetRestrictTransformation(self) -> vectorD"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetRestrictTransformation(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self, i) -> itkDataObjectDecoratorCTD4

        Parameters
        ----------
        i: unsigned long

        GetOutput(self, i) -> itkDataObjectDecoratorCTD4

        Parameters
        ----------
        i: unsigned long

        GetOutput(self) -> itkDataObjectDecoratorCTD4
        GetOutput(self) -> itkDataObjectDecoratorCTD4
        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_GetOutput(self, *args)

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        SetInput(self, index, image)

        Parameters
        ----------
        index: unsigned int
        image: itkImageUC4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_SetInput(self, *args)
    __swig_destroy__ = _itkANTsRegistrationPython.delete_itkANTsRegistrationDIUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkANTsRegistrationDIUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkANTsRegistrationDIUC4

        Create a new object of the class itkANTsRegistrationDIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTsRegistrationDIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTsRegistrationDIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTsRegistrationDIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTsRegistrationDIUC4 in _itkANTsRegistrationPython:
_itkANTsRegistrationPython.itkANTsRegistrationDIUC4_swigregister(itkANTsRegistrationDIUC4)

def itkANTsRegistrationDIUS2_New():
    return itkANTsRegistrationDIUS2.New()

class itkANTsRegistrationDIUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTsRegistrationDIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkANTsRegistrationDIUS2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkANTsRegistrationDIUS2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_Clone(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageUS2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetFixedImage(self, image)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetFixedImage(self)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageUS2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetMovingImage(self, image)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetMovingImage(self)

    def GetWarpedMovingImage(self):
        r"""GetWarpedMovingImage(self) -> itkImageUS2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetWarpedMovingImage(self)

    def GetWarpedFixedImage(self):
        r"""GetWarpedFixedImage(self) -> itkImageUS2_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetWarpedFixedImage(self)

    def SetFixedMask(self, mask):
        r"""
        SetFixedMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetFixedMask(self, mask)

    def GetFixedMask(self):
        r"""GetFixedMask(self) -> itkImageUC2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetFixedMask(self)

    def SetMovingMask(self, mask):
        r"""
        SetMovingMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetMovingMask(self, mask)

    def GetMovingMask(self):
        r"""GetMovingMask(self) -> itkImageUC2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetMovingMask(self)

    def SetTypeOfTransform(self, *args):
        r"""
        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetTypeOfTransform(self, *args)

    def GetTypeOfTransform(self):
        r"""GetTypeOfTransform(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetTypeOfTransform(self)

    def SetAffineMetric(self, *args):
        r"""
        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetAffineMetric(self, *args)

    def GetAffineMetric(self):
        r"""GetAffineMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetAffineMetric(self)

    def SetSynMetric(self, *args):
        r"""
        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetSynMetric(self, *args)

    def GetSynMetric(self):
        r"""GetSynMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetSynMetric(self)

    def SetInitialTransformInput(self, _arg):
        r"""
        SetInitialTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD22 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetInitialTransformInput(self, _arg)

    def SetInitialTransform(self, _arg):
        r"""
        SetInitialTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetInitialTransform(self, _arg)

    def GetInitialTransformInput(self):
        r"""GetInitialTransformInput(self) -> itkDataObjectDecoratorTD22"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetInitialTransformInput(self)

    def GetInitialTransform(self):
        r"""GetInitialTransform(self) -> itkTransformD22"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetInitialTransform(self)

    def GetForwardTransform(self):
        r"""GetForwardTransform(self) -> itkCompositeTransformD2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetForwardTransform(self)

    def GetInverseTransform(self):
        r"""GetInverseTransform(self) -> itkCompositeTransformD2"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetInverseTransform(self)

    def SetGradientStep(self, _arg):
        r"""
        SetGradientStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetGradientStep(self, _arg)

    def GetGradientStep(self):
        r"""GetGradientStep(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetGradientStep(self)

    def SetFlowSigma(self, _arg):
        r"""
        SetFlowSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetFlowSigma(self, _arg)

    def GetFlowSigma(self):
        r"""GetFlowSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetFlowSigma(self)

    def SetTotalSigma(self, _arg):
        r"""
        SetTotalSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetTotalSigma(self, _arg)

    def GetTotalSigma(self):
        r"""GetTotalSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetTotalSigma(self)

    def SetSamplingRate(self, _arg):
        r"""
        SetSamplingRate(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetSamplingRate(self, _arg)

    def GetSamplingRate(self):
        r"""GetSamplingRate(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetSamplingRate(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetNumberOfBins(self)

    def SetRandomSeed(self, _arg):
        r"""
        SetRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetRandomSeed(self, _arg)

    def GetRandomSeed(self):
        r"""GetRandomSeed(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetRandomSeed(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> unsigned int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetRadius(self)

    def SetUseGradientFilter(self, _arg):
        r"""
        SetUseGradientFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetUseGradientFilter(self, _arg)

    def GetUseGradientFilter(self):
        r"""GetUseGradientFilter(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetUseGradientFilter(self)

    def SetSmoothingInPhysicalUnits(self, _arg):
        r"""
        SetSmoothingInPhysicalUnits(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetSmoothingInPhysicalUnits(self, _arg)

    def GetSmoothingInPhysicalUnits(self):
        r"""GetSmoothingInPhysicalUnits(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetSmoothingInPhysicalUnits(self)

    def SetCollapseCompositeTransform(self, _arg):
        r"""
        SetCollapseCompositeTransform(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetCollapseCompositeTransform(self, _arg)

    def GetCollapseCompositeTransform(self):
        r"""GetCollapseCompositeTransform(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetCollapseCompositeTransform(self)

    def SetMaskAllStages(self, _arg):
        r"""
        SetMaskAllStages(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetMaskAllStages(self, _arg)

    def GetMaskAllStages(self):
        r"""GetMaskAllStages(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetMaskAllStages(self)

    def SetSynIterations(self, _arg):
        r"""
        SetSynIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetSynIterations(self, _arg)

    def GetSynIterations(self):
        r"""GetSynIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetSynIterations(self)

    def SetAffineIterations(self, _arg):
        r"""
        SetAffineIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetAffineIterations(self, _arg)

    def GetAffineIterations(self):
        r"""GetAffineIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetAffineIterations(self)

    def SetShrinkFactors(self, _arg):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetShrinkFactors(self, _arg)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetShrinkFactors(self)

    def SetSmoothingSigmas(self, _arg):
        r"""
        SetSmoothingSigmas(self, _arg)

        Parameters
        ----------
        _arg: std::vector< float,std::allocator< float > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetSmoothingSigmas(self, _arg)

    def GetSmoothingSigmas(self):
        r"""GetSmoothingSigmas(self) -> vectorF"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetSmoothingSigmas(self)

    def SetRestrictTransformation(self, _arg):
        r"""
        SetRestrictTransformation(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetRestrictTransformation(self, _arg)

    def GetRestrictTransformation(self):
        r"""GetRestrictTransformation(self) -> vectorD"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetRestrictTransformation(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self, i) -> itkDataObjectDecoratorCTD2

        Parameters
        ----------
        i: unsigned long

        GetOutput(self, i) -> itkDataObjectDecoratorCTD2

        Parameters
        ----------
        i: unsigned long

        GetOutput(self) -> itkDataObjectDecoratorCTD2
        GetOutput(self) -> itkDataObjectDecoratorCTD2
        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_GetOutput(self, *args)

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUS2 const *

        SetInput(self, index, image)

        Parameters
        ----------
        index: unsigned int
        image: itkImageUS2 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_SetInput(self, *args)
    __swig_destroy__ = _itkANTsRegistrationPython.delete_itkANTsRegistrationDIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkANTsRegistrationDIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkANTsRegistrationDIUS2

        Create a new object of the class itkANTsRegistrationDIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTsRegistrationDIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTsRegistrationDIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTsRegistrationDIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTsRegistrationDIUS2 in _itkANTsRegistrationPython:
_itkANTsRegistrationPython.itkANTsRegistrationDIUS2_swigregister(itkANTsRegistrationDIUS2)

def itkANTsRegistrationDIUS3_New():
    return itkANTsRegistrationDIUS3.New()

class itkANTsRegistrationDIUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTsRegistrationDIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkANTsRegistrationDIUS3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkANTsRegistrationDIUS3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_Clone(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageUS3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetFixedImage(self, image)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetFixedImage(self)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageUS3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetMovingImage(self, image)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetMovingImage(self)

    def GetWarpedMovingImage(self):
        r"""GetWarpedMovingImage(self) -> itkImageUS3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetWarpedMovingImage(self)

    def GetWarpedFixedImage(self):
        r"""GetWarpedFixedImage(self) -> itkImageUS3_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetWarpedFixedImage(self)

    def SetFixedMask(self, mask):
        r"""
        SetFixedMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetFixedMask(self, mask)

    def GetFixedMask(self):
        r"""GetFixedMask(self) -> itkImageUC3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetFixedMask(self)

    def SetMovingMask(self, mask):
        r"""
        SetMovingMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetMovingMask(self, mask)

    def GetMovingMask(self):
        r"""GetMovingMask(self) -> itkImageUC3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetMovingMask(self)

    def SetTypeOfTransform(self, *args):
        r"""
        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetTypeOfTransform(self, *args)

    def GetTypeOfTransform(self):
        r"""GetTypeOfTransform(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetTypeOfTransform(self)

    def SetAffineMetric(self, *args):
        r"""
        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetAffineMetric(self, *args)

    def GetAffineMetric(self):
        r"""GetAffineMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetAffineMetric(self)

    def SetSynMetric(self, *args):
        r"""
        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetSynMetric(self, *args)

    def GetSynMetric(self):
        r"""GetSynMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetSynMetric(self)

    def SetInitialTransformInput(self, _arg):
        r"""
        SetInitialTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD33 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetInitialTransformInput(self, _arg)

    def SetInitialTransform(self, _arg):
        r"""
        SetInitialTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetInitialTransform(self, _arg)

    def GetInitialTransformInput(self):
        r"""GetInitialTransformInput(self) -> itkDataObjectDecoratorTD33"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetInitialTransformInput(self)

    def GetInitialTransform(self):
        r"""GetInitialTransform(self) -> itkTransformD33"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetInitialTransform(self)

    def GetForwardTransform(self):
        r"""GetForwardTransform(self) -> itkCompositeTransformD3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetForwardTransform(self)

    def GetInverseTransform(self):
        r"""GetInverseTransform(self) -> itkCompositeTransformD3"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetInverseTransform(self)

    def SetGradientStep(self, _arg):
        r"""
        SetGradientStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetGradientStep(self, _arg)

    def GetGradientStep(self):
        r"""GetGradientStep(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetGradientStep(self)

    def SetFlowSigma(self, _arg):
        r"""
        SetFlowSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetFlowSigma(self, _arg)

    def GetFlowSigma(self):
        r"""GetFlowSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetFlowSigma(self)

    def SetTotalSigma(self, _arg):
        r"""
        SetTotalSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetTotalSigma(self, _arg)

    def GetTotalSigma(self):
        r"""GetTotalSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetTotalSigma(self)

    def SetSamplingRate(self, _arg):
        r"""
        SetSamplingRate(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetSamplingRate(self, _arg)

    def GetSamplingRate(self):
        r"""GetSamplingRate(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetSamplingRate(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetNumberOfBins(self)

    def SetRandomSeed(self, _arg):
        r"""
        SetRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetRandomSeed(self, _arg)

    def GetRandomSeed(self):
        r"""GetRandomSeed(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetRandomSeed(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> unsigned int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetRadius(self)

    def SetUseGradientFilter(self, _arg):
        r"""
        SetUseGradientFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetUseGradientFilter(self, _arg)

    def GetUseGradientFilter(self):
        r"""GetUseGradientFilter(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetUseGradientFilter(self)

    def SetSmoothingInPhysicalUnits(self, _arg):
        r"""
        SetSmoothingInPhysicalUnits(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetSmoothingInPhysicalUnits(self, _arg)

    def GetSmoothingInPhysicalUnits(self):
        r"""GetSmoothingInPhysicalUnits(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetSmoothingInPhysicalUnits(self)

    def SetCollapseCompositeTransform(self, _arg):
        r"""
        SetCollapseCompositeTransform(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetCollapseCompositeTransform(self, _arg)

    def GetCollapseCompositeTransform(self):
        r"""GetCollapseCompositeTransform(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetCollapseCompositeTransform(self)

    def SetMaskAllStages(self, _arg):
        r"""
        SetMaskAllStages(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetMaskAllStages(self, _arg)

    def GetMaskAllStages(self):
        r"""GetMaskAllStages(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetMaskAllStages(self)

    def SetSynIterations(self, _arg):
        r"""
        SetSynIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetSynIterations(self, _arg)

    def GetSynIterations(self):
        r"""GetSynIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetSynIterations(self)

    def SetAffineIterations(self, _arg):
        r"""
        SetAffineIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetAffineIterations(self, _arg)

    def GetAffineIterations(self):
        r"""GetAffineIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetAffineIterations(self)

    def SetShrinkFactors(self, _arg):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetShrinkFactors(self, _arg)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetShrinkFactors(self)

    def SetSmoothingSigmas(self, _arg):
        r"""
        SetSmoothingSigmas(self, _arg)

        Parameters
        ----------
        _arg: std::vector< float,std::allocator< float > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetSmoothingSigmas(self, _arg)

    def GetSmoothingSigmas(self):
        r"""GetSmoothingSigmas(self) -> vectorF"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetSmoothingSigmas(self)

    def SetRestrictTransformation(self, _arg):
        r"""
        SetRestrictTransformation(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetRestrictTransformation(self, _arg)

    def GetRestrictTransformation(self):
        r"""GetRestrictTransformation(self) -> vectorD"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetRestrictTransformation(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self, i) -> itkDataObjectDecoratorCTD3

        Parameters
        ----------
        i: unsigned long

        GetOutput(self, i) -> itkDataObjectDecoratorCTD3

        Parameters
        ----------
        i: unsigned long

        GetOutput(self) -> itkDataObjectDecoratorCTD3
        GetOutput(self) -> itkDataObjectDecoratorCTD3
        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_GetOutput(self, *args)

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        SetInput(self, index, image)

        Parameters
        ----------
        index: unsigned int
        image: itkImageUS3 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_SetInput(self, *args)
    __swig_destroy__ = _itkANTsRegistrationPython.delete_itkANTsRegistrationDIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkANTsRegistrationDIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkANTsRegistrationDIUS3

        Create a new object of the class itkANTsRegistrationDIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTsRegistrationDIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTsRegistrationDIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTsRegistrationDIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTsRegistrationDIUS3 in _itkANTsRegistrationPython:
_itkANTsRegistrationPython.itkANTsRegistrationDIUS3_swigregister(itkANTsRegistrationDIUS3)

def itkANTsRegistrationDIUS4_New():
    return itkANTsRegistrationDIUS4.New()

class itkANTsRegistrationDIUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTsRegistrationDIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkANTsRegistrationDIUS4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkANTsRegistrationDIUS4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_Clone(self)

    def SetFixedImage(self, image):
        r"""
        SetFixedImage(self, image)

        Parameters
        ----------
        image: itkImageUS4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetFixedImage(self, image)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetFixedImage(self)

    def SetMovingImage(self, image):
        r"""
        SetMovingImage(self, image)

        Parameters
        ----------
        image: itkImageUS4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetMovingImage(self, image)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetMovingImage(self)

    def GetWarpedMovingImage(self):
        r"""GetWarpedMovingImage(self) -> itkImageUS4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetWarpedMovingImage(self)

    def GetWarpedFixedImage(self):
        r"""GetWarpedFixedImage(self) -> itkImageUS4_Pointer"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetWarpedFixedImage(self)

    def SetFixedMask(self, mask):
        r"""
        SetFixedMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetFixedMask(self, mask)

    def GetFixedMask(self):
        r"""GetFixedMask(self) -> itkImageUC4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetFixedMask(self)

    def SetMovingMask(self, mask):
        r"""
        SetMovingMask(self, mask)

        Parameters
        ----------
        mask: itkImageUC4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetMovingMask(self, mask)

    def GetMovingMask(self):
        r"""GetMovingMask(self) -> itkImageUC4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetMovingMask(self)

    def SetTypeOfTransform(self, *args):
        r"""
        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetTypeOfTransform(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetTypeOfTransform(self, *args)

    def GetTypeOfTransform(self):
        r"""GetTypeOfTransform(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetTypeOfTransform(self)

    def SetAffineMetric(self, *args):
        r"""
        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetAffineMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetAffineMetric(self, *args)

    def GetAffineMetric(self):
        r"""GetAffineMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetAffineMetric(self)

    def SetSynMetric(self, *args):
        r"""
        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetSynMetric(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetSynMetric(self, *args)

    def GetSynMetric(self):
        r"""GetSynMetric(self) -> char const *"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetSynMetric(self)

    def SetInitialTransformInput(self, _arg):
        r"""
        SetInitialTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD44 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetInitialTransformInput(self, _arg)

    def SetInitialTransform(self, _arg):
        r"""
        SetInitialTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetInitialTransform(self, _arg)

    def GetInitialTransformInput(self):
        r"""GetInitialTransformInput(self) -> itkDataObjectDecoratorTD44"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetInitialTransformInput(self)

    def GetInitialTransform(self):
        r"""GetInitialTransform(self) -> itkTransformD44"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetInitialTransform(self)

    def GetForwardTransform(self):
        r"""GetForwardTransform(self) -> itkCompositeTransformD4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetForwardTransform(self)

    def GetInverseTransform(self):
        r"""GetInverseTransform(self) -> itkCompositeTransformD4"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetInverseTransform(self)

    def SetGradientStep(self, _arg):
        r"""
        SetGradientStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetGradientStep(self, _arg)

    def GetGradientStep(self):
        r"""GetGradientStep(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetGradientStep(self)

    def SetFlowSigma(self, _arg):
        r"""
        SetFlowSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetFlowSigma(self, _arg)

    def GetFlowSigma(self):
        r"""GetFlowSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetFlowSigma(self)

    def SetTotalSigma(self, _arg):
        r"""
        SetTotalSigma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetTotalSigma(self, _arg)

    def GetTotalSigma(self):
        r"""GetTotalSigma(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetTotalSigma(self)

    def SetSamplingRate(self, _arg):
        r"""
        SetSamplingRate(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetSamplingRate(self, _arg)

    def GetSamplingRate(self):
        r"""GetSamplingRate(self) -> double"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetSamplingRate(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetNumberOfBins(self)

    def SetRandomSeed(self, _arg):
        r"""
        SetRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetRandomSeed(self, _arg)

    def GetRandomSeed(self):
        r"""GetRandomSeed(self) -> int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetRandomSeed(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> unsigned int"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetRadius(self)

    def SetUseGradientFilter(self, _arg):
        r"""
        SetUseGradientFilter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetUseGradientFilter(self, _arg)

    def GetUseGradientFilter(self):
        r"""GetUseGradientFilter(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetUseGradientFilter(self)

    def SetSmoothingInPhysicalUnits(self, _arg):
        r"""
        SetSmoothingInPhysicalUnits(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetSmoothingInPhysicalUnits(self, _arg)

    def GetSmoothingInPhysicalUnits(self):
        r"""GetSmoothingInPhysicalUnits(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetSmoothingInPhysicalUnits(self)

    def SetCollapseCompositeTransform(self, _arg):
        r"""
        SetCollapseCompositeTransform(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetCollapseCompositeTransform(self, _arg)

    def GetCollapseCompositeTransform(self):
        r"""GetCollapseCompositeTransform(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetCollapseCompositeTransform(self)

    def SetMaskAllStages(self, _arg):
        r"""
        SetMaskAllStages(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetMaskAllStages(self, _arg)

    def GetMaskAllStages(self):
        r"""GetMaskAllStages(self) -> bool"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetMaskAllStages(self)

    def SetSynIterations(self, _arg):
        r"""
        SetSynIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetSynIterations(self, _arg)

    def GetSynIterations(self):
        r"""GetSynIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetSynIterations(self)

    def SetAffineIterations(self, _arg):
        r"""
        SetAffineIterations(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetAffineIterations(self, _arg)

    def GetAffineIterations(self):
        r"""GetAffineIterations(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetAffineIterations(self)

    def SetShrinkFactors(self, _arg):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: std::vector< unsigned int,std::allocator< unsigned int > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetShrinkFactors(self, _arg)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> vectorUI"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetShrinkFactors(self)

    def SetSmoothingSigmas(self, _arg):
        r"""
        SetSmoothingSigmas(self, _arg)

        Parameters
        ----------
        _arg: std::vector< float,std::allocator< float > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetSmoothingSigmas(self, _arg)

    def GetSmoothingSigmas(self):
        r"""GetSmoothingSigmas(self) -> vectorF"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetSmoothingSigmas(self)

    def SetRestrictTransformation(self, _arg):
        r"""
        SetRestrictTransformation(self, _arg)

        Parameters
        ----------
        _arg: std::vector< double,std::allocator< double > >

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetRestrictTransformation(self, _arg)

    def GetRestrictTransformation(self):
        r"""GetRestrictTransformation(self) -> vectorD"""
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetRestrictTransformation(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self, i) -> itkDataObjectDecoratorCTD4

        Parameters
        ----------
        i: unsigned long

        GetOutput(self, i) -> itkDataObjectDecoratorCTD4

        Parameters
        ----------
        i: unsigned long

        GetOutput(self) -> itkDataObjectDecoratorCTD4
        GetOutput(self) -> itkDataObjectDecoratorCTD4
        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_GetOutput(self, *args)

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUS4 const *

        SetInput(self, index, image)

        Parameters
        ----------
        index: unsigned int
        image: itkImageUS4 const *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_SetInput(self, *args)
    __swig_destroy__ = _itkANTsRegistrationPython.delete_itkANTsRegistrationDIUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkANTsRegistrationDIUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkANTsRegistrationPython.itkANTsRegistrationDIUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkANTsRegistrationDIUS4

        Create a new object of the class itkANTsRegistrationDIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTsRegistrationDIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTsRegistrationDIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTsRegistrationDIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTsRegistrationDIUS4 in _itkANTsRegistrationPython:
_itkANTsRegistrationPython.itkANTsRegistrationDIUS4_swigregister(itkANTsRegistrationDIUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def an_ts_registration(*args,  fixed_image: itkt.Image=..., moving_image: itkt.Image=..., fixed_mask: itkt.Image=..., moving_mask: itkt.Image=..., type_of_transform: str=..., affine_metric: str=..., syn_metric: str=..., initial_transform_input=..., initial_transform: itkt.Transform=..., gradient_step: float=..., flow_sigma: float=..., total_sigma: float=..., sampling_rate: float=..., number_of_bins: int=..., random_seed: int=..., radius: int=..., use_gradient_filter: bool=..., smoothing_in_physical_units: bool=..., collapse_composite_transform: bool=..., mask_all_stages: bool=..., syn_iterations: Sequence[int]=..., affine_iterations: Sequence[int]=..., shrink_factors: Sequence[int]=..., smoothing_sigmas: Sequence[float]=..., restrict_transformation: Sequence[float]=...,**kwargs):
    """Functional interface for ANTsRegistration"""
    import itk

    kwarg_typehints = { 'fixed_image':fixed_image,'moving_image':moving_image,'fixed_mask':fixed_mask,'moving_mask':moving_mask,'type_of_transform':type_of_transform,'affine_metric':affine_metric,'syn_metric':syn_metric,'initial_transform_input':initial_transform_input,'initial_transform':initial_transform,'gradient_step':gradient_step,'flow_sigma':flow_sigma,'total_sigma':total_sigma,'sampling_rate':sampling_rate,'number_of_bins':number_of_bins,'random_seed':random_seed,'radius':radius,'use_gradient_filter':use_gradient_filter,'smoothing_in_physical_units':smoothing_in_physical_units,'collapse_composite_transform':collapse_composite_transform,'mask_all_stages':mask_all_stages,'syn_iterations':syn_iterations,'affine_iterations':affine_iterations,'shrink_factors':shrink_factors,'smoothing_sigmas':smoothing_sigmas,'restrict_transformation':restrict_transformation }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ANTsRegistration.New(*args, **kwargs)

    return instance.__internal_call__()

def an_ts_registration_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ANTsWasm.ANTsRegistration
    an_ts_registration.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    an_ts_registration.__doc__ = filter_object.__doc__



