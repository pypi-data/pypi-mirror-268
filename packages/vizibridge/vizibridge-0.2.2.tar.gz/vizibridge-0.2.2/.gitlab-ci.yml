stages:          # List of stages for jobs, and their order of execution
  - build
  - compile
  - release

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - ci.inria.fr
    - medium
  image: docker:stable
  script:
    - docker build -t "$CI_REGISTRY_IMAGE/vizibridge_cont" .
    - docker login -u gitlab-ci-token -p "$CI_JOB_TOKEN" "$CI_REGISTRY"
    - docker push "$CI_REGISTRY_IMAGE/vizibridge_cont"

compile:
  stage: compile
  tags:
    - ci.inria.fr
    - medium
  image: "$CI_REGISTRY_IMAGE/vizibridge_cont"
  script:
    - echo C_JOB_ID=$CI_JOB_ID >> generate_executables.env
    - maturin build --release
    - file_path=$(ls target/wheels/*)
    - echo F_L_x86_64=$(basename $file_path) >> generate_executables.env
    - cat generate_executables.env

  artifacts:
    paths:
        - ./target/wheels/* 
    reports:
      dotenv: generate_executables.env

upload_pypi:
  stage: release
  tags:
    - ci.inria.fr
    - medium
  image: "$CI_REGISTRY_IMAGE/vizibridge_cont"
  rules:
    - if: $CI_COMMIT_TAG                 # Run this job when a tag is created
  script:
    - export MATURIN_PYPI_TOKEN=$PYPI_TOKEN
    - maturin publish

release_job:
  stage: release
  tags:
    - ci.inria.fr
    - medium
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG                 # Run this job when a tag is created
  script:
    - echo "running release_job"
    - echo "Compile job_id $C_JOB_ID"
    - echo "url https://gitlab.inria.fr/cpaperma/vizibridge/-/jobs/${C_JOB_ID}/artifacts/raw/target/wheels/${F_L_x86_64}"
  release:                               # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'
    assets:
      links:
        - name: "Linux/X86_64"
          url: "https://gitlab.inria.fr/cpaperma/vizibridge/-/jobs/${C_JOB_ID}/artifacts/raw/target/wheels/${F_L_x86_64}"
