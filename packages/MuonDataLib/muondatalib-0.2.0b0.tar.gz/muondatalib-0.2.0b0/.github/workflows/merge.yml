name: Build and upload to PyPI

on:
  pull_request_review:
    types: [submitted]
permissions:
  contents: write

jobs:
  update_version:
    name: update version
    if: github.event.review.state == 'approved'
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Update version on merge
        run:  |
            python tools/version.py "beta"
      - name: Store changes
        uses: actions/upload-artifact@v3
        with:
          name: pyproject
          path: pyproject.toml

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    needs: [update_version]
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        run: |
          pip install numpy
          python -m build --sdist
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  build_wheels:
    name: Build and test wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: [update_version]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - uses: actions/download-artifact@v3
        with:
          name: setup
      - name: build wheel
        uses: pypa/cibuildwheel@v2.8.0
        env:
          # List of platforms to build on (incl. Python version)
          CIBW_BUILD: cp3{8,9,10,11}-manylinux_x86_64 cp3{8,9,10,11}-win_amd64 cp3{8,9,10,11}-macosx_x86_64 cp3{8,9,10,11}-macosx_arm64

          CIBW_BEFORE_BUILD: >
             pip install numpy cython
          # Install test dependencies and run tests
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: >
            pytest {project}/test
      - name: upload wheel
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: mint API token
        id: mint
        uses: tschm/token-mint-action@v1.0.2

      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Publish package distribution to PYPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ steps.mint.outputs.api-token }}


  update_setup:
    needs: [upload_pypi]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
          repository: ${{github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/download-artifact@v3
        with:
          name: pyproject
      - name: check
        run: |
          cat pyproject.toml
          echo ${{github.event.pull_request.head.repo.full_name }}
      - name: Commit on merge
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add pyproject.toml
          git commit -m "update version number"
          git push
