[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[project]
name = "coworks"
version = "0.9.4a1"
description = "Coworks is a unified compositional microservices framework using Flask/Airflow on AWS serverless technologies."
readme = "README.rst"
requires-python = ">= 3.11"
authors = [
    { name = "Guillaume Doumenc", email = "gdoumenc@fpr-coworks.com" },
]
keywords = [
    "python3",
    "serverless",
    "microservice",
    "flask",
    "airflow",
    "aws-lambda",
    "aws",
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: System :: Distributed Computing",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "boto3>=1.19",
    "flask>=2.3.0",
    "jsonapi-pydantic>=0.2.3",
    "markdown>=3.3.6",
    "pydantic>=2.5.2",
    "pyyaml>=6.0",
    "python-dotenv>=0.21.0",
    "requests-toolbelt>=0.10",
]

[project.license]
file = "LICENSE.txt"

[project.urls]
Documentation = "https://coworks.readthedocs.io"
Source = "https://github.com/gdoumenc/coworks"

[project.scripts]
cws = "coworks.cws.client:client"

[tool.pdm.dev-dependencies]
dev = [
    "aws_xray_sdk>=2.12",
    "boto3-stubs",
    "mypy>=1.5",
    "pytest>=7.4",
    "ruff>=0.0.284",
    "sphinx>=7.1",
    "sqlalchemy>=2.0",
]

[tool.pdm.scripts.lint]
cmd = "ruff coworks"
help = "Linting using Ruff"

[tool.pdm.scripts.typecheck]
cmd = "mypy coworks"
help = "Type checking using mypy"

[tool.pdm.scripts.pytest]
cmd = "pytest"
help = "Unit testing using pytest"

[tool.pdm.scripts.test]
composite = [
    "lint",
    "typecheck",
    "pytest",
]

[tool.pdm.scripts.plugins]
shell = "mkdir -p dist; zip -r dist/plugins.zip coworks/operators.py coworks/sensors.py coworks/biz/*"

[tool.pdm.scripts.pre_fury]
cmd = "pdm build"

[tool.pdm.scripts.fury]
shell = "fury push dist/coworks-$(sh -c \"${VERSION}\")-py3-none-any.whl"
help = "Deploy the package on Gemfury"

[tool.pdm.scripts.fury.env]
VERSION = "grep -m 1 version pyproject.toml | tr -s \" \"| tr -d \\\" | cut -d\" \" -f3"

[tool.ruff.lint]
ignore = [
    "F403",
]

[tool.mypy]
python_version = ">=3.11"
ignore_missing_imports = true
exclude = [
    "biz",
    "coworks/tech/directory.py",
    "coworks/blueprint/mail_blueprint.py",
    "coworks/blueprint/gsheets_blueprint.py",
]
check_untyped_defs = true
overrides = [
    { module = "requests_toolbelt.*", ignore_missing_imports = true },
]

[tool.pytest.ini_options]
markers = [
    "wip",
    "local",
]
testpaths = [
    "tests",
]

[bdist_wheel]
universal = 1
