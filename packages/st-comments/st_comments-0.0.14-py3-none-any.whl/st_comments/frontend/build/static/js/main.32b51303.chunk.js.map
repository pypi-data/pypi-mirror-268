{"version":3,"sources":["st_comments.tsx","index.tsx"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","withStreamlitConnection","props","_useState","useState","args","comments","_useState2","_slicedToArray","setComments","_useState3","_useState4","newComment","setNewComment","fetchComments","_ref","_asyncToGenerator","_callee","apiUrl","queryParams","queryString","response","apiCommentsData","transformedComments","_context","retrieve_from_api","concat","host_url_api","URLSearchParams","auth_token","append","comment_field_key","toString","fetch","ok","console","statusText","json","new_on_top","sort","a","b","Date","date","getTime","map","apiComment","id","user","text","comment","t0","apply","arguments","useEffect","handleCommentSubmit","_ref2","_callee2","commentToAdd","commentToAddAPI","responseData","updatedComments","_context2","now","api_user_name","toISOString","return_mode","encodeURIComponent","headers","body","JSON","stringify","_toConsumableArray","maxHeight","custom_css","max_height","minHeight","min_height","delete_keyword","custom_font_awesome_url","delete_user","allow_html_comment","textfield","max_chars","button_post_label","text_field_placeholder","submitButtonColor","submit_button_color","isCommentValid","trim","remainingChars","no_comments_text","handleDelete","_ref3","_callee3","deletedComment","newComments","_context3","find","filter","Streamlit","setComponentValue","_x","setFrameHeight","React","createElement","Fragment","Helmet","src","crossOrigin","style","display","flexDirection","height","flexGrow","overflowY","padding","textAlign","Typography","dangerouslySetInnerHTML","__html","Card","position","CardContent","variant","color","component","split","CardActions","paddingTop","right","top","IconButton","aria-label","size","onClick","DeleteIcon","visibility","gap","TextField","label","fullWidth","onChange","e","target","multiline","maxRows","className","inputProps","maxLength","InputProps","margin","bottom","fontSize","justifyContent","alignItems","Button","disabled","backgroundColor","ReactDOM","render","StrictMode","CommentComponent","document","getElementById"],"mappings":"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","file":"static/js/main.32b51303.chunk.js","sourcesContent":["import React, { useEffect, useState, CSSProperties  } from \"react\";\r\nimport {\r\n  ComponentProps,\r\n  Streamlit,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\nimport { Card, CardContent, CardActions, IconButton, Typography  } from '@material-ui/core';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Helmet } from 'react-helmet';\r\nimport { TextField, Button } from '@material-ui/core';\r\n\r\ninterface Comment {\r\n  id: number;\r\n  user: string;\r\n  date: string;\r\n  text: string;\r\n}\r\n\r\n\r\ninterface CommentAPI {\r\n  user: string;\r\n  comment_field_key: string;\r\n  comment: string;\r\n}\r\n\r\n\r\ninterface PythonStyle {\r\n  border?: string;\r\n  border_radius?: string;\r\n  padding?: string;\r\n  margin?: string;\r\n}\r\n\r\ninterface ApiComment {\r\n  id: number;\r\n  user: string;\r\n  date: string;\r\n  comment: string;\r\n  comment_field_key: string;\r\n  deleted: number;\r\n}\r\n\r\n\r\nconst CommentComponent = (props: ComponentProps) => {\r\n  const [comments, setComments] = useState<Comment[]>(props.args.comments || []);\r\n  const [newComment, setNewComment] = useState<string>(\"\");\r\n\r\n  const fetchComments = async () => {\r\n    if (props.args.retrieve_from_api) {\r\n      let apiUrl = `${host_url_api}/notes`;\r\n      const queryParams = new URLSearchParams();\r\n  \r\n      if (auth_token) {\r\n        queryParams.append('auth_token', auth_token);\r\n      }\r\n  \r\n      if (props.args.comment_field_key) {\r\n        queryParams.append('comment_field_key', props.args.comment_field_key);\r\n      }\r\n  \r\n      const queryString = queryParams.toString();\r\n      if (queryString) {\r\n        apiUrl += `?${queryString}`;\r\n      }\r\n  \r\n      try {\r\n        const response = await fetch(apiUrl);\r\n        if (!response.ok) {\r\n          console.error('Failed to fetch comments:', response.statusText);\r\n          return;\r\n        }\r\n        const apiCommentsData: ApiComment[] = await response.json();\r\n  \r\n        // Sort comments if new_on_top is true\r\n        if (props.args.new_on_top) {\r\n          apiCommentsData.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\r\n        }\r\n  \r\n        const transformedComments = apiCommentsData.map((apiComment: ApiComment) => ({\r\n          id: apiComment.id,\r\n          user: apiComment.user,\r\n          date: apiComment.date,\r\n          text: apiComment.comment,\r\n        }));\r\n  \r\n        setComments(transformedComments);\r\n  \r\n      } catch (error) {\r\n        console.error('Failed to fetch comments:', error);\r\n      }\r\n    } else {\r\n      setComments(props.args.comments || []);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, [props.args.retrieve_from_api, props.args.comments, props.args.new_on_top]); // Also re-fetch when new_on_top changes\r\n  \r\n  // Function to handle new comment submission\r\n  const handleCommentSubmit = async () => { // Mark this function as async\r\n    const commentToAdd: Comment = {\r\n      id: Date.now(), // or some other unique ID logic\r\n      user: api_user_name, // Replace with actual user data if available\r\n      date: new Date().toISOString(),\r\n      text: newComment,\r\n    };\r\n\r\n\r\n  // send data to API\r\n  if (return_mode === \"api\") {\r\n\r\n    const commentToAddAPI: CommentAPI = {\r\n      user: api_user_name, // Replace with actual user data if available\r\n      comment_field_key: comment_field_key,\r\n      comment: newComment,\r\n    };\r\n\r\n\r\n    let apiUrl = `${host_url_api}/notes`;\r\n    if (auth_token) {\r\n      apiUrl += `?auth_token=${encodeURIComponent(auth_token)}`;\r\n    }\r\n    \r\n\r\n    try {\r\n      const response = await fetch(apiUrl, { // 'await' can be used here\r\n        method: 'POST',\r\n        // mode: 'no-cors', // Add this line\r\n\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(commentToAddAPI),\r\n\r\n      });\r\n\r\n      const responseData = await response.json(); // Await the JSON response\r\n      commentToAdd.id = responseData.id || Date.now();\r\n    \r\n      if (!response.ok) {\r\n        // Handle response errors\r\n        console.error('Failed to post comment:', response.statusText);\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      // Handle fetch errors\r\n      console.error('Failed to post comment:', error);\r\n      //create an error message and siaply it for 10 seocnds\r\n\r\n      return;\r\n    } \r\n  }\r\n\r\n    let updatedComments;\r\n    if (new_on_top) {\r\n      updatedComments = [commentToAdd, ...comments]; // Add new comment to the top\r\n    } else {\r\n      updatedComments = [...comments, commentToAdd]; // Add new comment to the bottom\r\n    }\r\n    setComments(updatedComments);\r\n    setNewComment(\"\"); // Reset the input field\r\n\r\n    // Send data back to Python, if needed\r\n    // Streamlit.setComponentValue(updatedComments);\r\n  };\r\n\r\n  // Define textareaStyles with CSSProperties type\r\n  const textareaStyles: CSSProperties = {\r\n    height: 'calc(1.5em * 1.5 + 16px + 2px)', // Example calculation for 3 lines\r\n    overflowY: 'auto', // Correctly typed for TypeScript\r\n    margin: '2px'\r\n  };\r\n\r\n  const customCss = props.args.custom_css || \"\";\r\n  const maxHeight  = props.args.max_height;\r\n  const minHeight  = props.args.min_height;\r\n  const delete_keyword = props.args.delete_keyword;\r\n  const custom_font_awesome_url = props.args.custom_font_awesome_url;\r\n  const delete_user = props.args.delete_user;\r\n  const return_mode = props.args.return_mode;\r\n\r\n  const allow_html_comment = props.args.allow_html_comment || false;\r\n  const retrieve_from_api = props.args.retrieve_from_api || false;\r\n\r\n  const auth_token = props.args.auth_token;\r\n  const host_url_api = props.args.host_url_api;\r\n  const textfield = props.args.textfield;\r\n  const api_user_name = props.args.api_user_name || \"Anonymous\";\r\n  const max_chars = props.args.max_chars;\r\n  const button_post_label = props.args.button_post_label || \"Post\";\r\n  const text_field_placeholder = props.args.text_field_placeholder || \"Write a comment\";\r\n  const submitButtonColor = props.args.submit_button_color || \"primary\";\r\n  const isCommentValid = newComment.trim().length > 0 && newComment.length <= max_chars;\r\n  const new_on_top = props.args.new_on_top || false;\r\n\r\n  const remainingChars = max_chars - newComment.length;\r\n  const isOverLimit = remainingChars < 0;\r\n  const comment_field_key = props.args.comment_field_key ;\r\n  const no_comments_text = props.args.no_comments_text || \"No comments yet\";\r\n  \r\n  const handleDelete = async (id: number)   => { // Mark this function as async\r\n    const deletedComment = comments.find((comment: Comment) => comment.id === id);\r\n    const newComments = comments.filter((comment: Comment) => comment.id !== id);\r\n    \r\n\r\n    if (return_mode === \"api\") {\r\n      let apiUrl = `${host_url_api}/notes/${id}?comment_field_key=${encodeURIComponent(comment_field_key)}`;\r\n      if (auth_token) {\r\n        apiUrl += `&auth_token=${encodeURIComponent(auth_token)}`;\r\n      }\r\n  \r\n      try {\r\n        const response = await fetch(apiUrl, {\r\n          method: 'DELETE',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }); \r\n  \r\n        if (!response.ok) {\r\n          console.error('Failed to delete comment:', response.statusText);\r\n          return;\r\n        }\r\n    } catch (error) {\r\n      // Handle fetch errors\r\n      console.error('Failed to post comment:', error);\r\n      //create an error message and siaply it for 10 seocnds\r\n\r\n      return;\r\n    }\r\n  }\r\n    \r\n  setComments(newComments);\r\n    if (return_mode === \"all\") {\r\n      Streamlit.setComponentValue(newComments);\r\n    } else if (return_mode === \"deleted\" && deletedComment) {\r\n      Streamlit.setComponentValue([deletedComment]);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    Streamlit.setFrameHeight();\r\n  }, [comments]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <script\r\n          src={custom_font_awesome_url}\r\n          crossOrigin=\"anonymous\"\r\n          id=\"font-awesome-icons\"\r\n        />\r\n      </Helmet>\r\n      <div style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\r\n        <div style={{ flexGrow: 1, overflowY: 'auto', maxHeight: maxHeight, minHeight: minHeight, padding: '5px' }}>\r\n            {\r\n      comments.length === 0 ? (\r\n        // Display this when there are no comments\r\n        <div style={{ textAlign: 'center', padding: '20px' }}>\r\n          <Typography>  <span dangerouslySetInnerHTML={{ __html: no_comments_text }}></span> </Typography>\r\n   \r\n        </div>\r\n      ) : (\r\n          comments.map((comment: Comment) => (\r\n            <Card key={comment.id} style={{ position: 'relative' }}>\r\n              <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {comment.user} ({new Date(comment.date).toISOString().split('T')[0]})\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                  {allow_html_comment ? (\r\n                    <span dangerouslySetInnerHTML={{ __html: comment.text }}></span>\r\n                  ) : (\r\n                    <span>{comment.text}</span>\r\n                  )}\r\n                </Typography>\r\n              </CardContent>\r\n              {(delete_user === \"all\" || delete_user === comment.user) ? (\r\n                <CardActions style={{ paddingTop: 0, position: 'absolute', right: '1px', top: '1px', padding: \"2px\" }}>\r\n                  <IconButton aria-label=\"delete\" color=\"secondary\" size=\"small\" onClick={() => handleDelete(comment.id)}>\r\n                    <DeleteIcon />\r\n                    <span dangerouslySetInnerHTML={{ __html: delete_keyword }}></span>\r\n                  </IconButton>\r\n                </CardActions>\r\n              ) : (\r\n                <CardActions style={{ visibility: 'hidden', paddingTop: 0, position: 'absolute', right: '1px', top: '1px', padding: \"2px\" }}>\r\n                  <IconButton aria-label=\"delete\" color=\"secondary\" size=\"small\">\r\n                    <DeleteIcon style={{ visibility: 'hidden' }} />\r\n                  </IconButton>\r\n                </CardActions>\r\n              )}\r\n            </Card>\r\n          ))\r\n          )}\r\n\r\n        </div>\r\n        {props.args.textfield && (\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', padding: '5px' }}>\r\n            <div style={{ position: 'relative' }}>\r\n            <TextField\r\n              label= {text_field_placeholder}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={newComment}\r\n              onChange={(e) => setNewComment(e.target.value)}\r\n              multiline\r\n              maxRows={2}\r\n              className=\"CommentField\"\r\n              id=\"commentfield\"\r\n              inputProps={{ maxLength: max_chars }}\r\n              InputProps={{\r\n                style: {  overflowY: 'auto' },\r\n                inputProps: { style: textareaStyles }\r\n              }}\r\n            />\r\n             <span style={{ \r\n                position: 'absolute', \r\n                bottom: 5, \r\n                right: 20, \r\n                fontSize: '0.75rem', \r\n                color: remainingChars < 0 ? 'red' : 'grey' \r\n              }}>\r\n                {`${newComment.length}/${max_chars}`}\r\n              </span>\r\n            </div>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n              <Button\r\n                className=\"submitbtnclass\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleCommentSubmit}\r\n                disabled={!isCommentValid}\r\n                fullWidth\r\n                style={{ backgroundColor: submitButtonColor ? submitButtonColor : undefined }}\r\n              >\r\n                <span dangerouslySetInnerHTML={{ __html: button_post_label }}></span>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n  \r\n}\r\nexport default withStreamlitConnection(CommentComponent);\r\n","\r\nimport React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport CommentComponent from \"./st_comments\"\r\n\r\n// Lots of import to define a Styletron engine and load the light theme of baseui\r\n\r\n\r\n// Wrap your CustomSlider with the baseui them\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CommentComponent />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)"],"sourceRoot":""}