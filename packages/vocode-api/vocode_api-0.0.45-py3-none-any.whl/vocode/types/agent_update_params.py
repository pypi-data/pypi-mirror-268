# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from .agent_update_params_actions import AgentUpdateParamsActions
from .agent_update_params_ask_if_human_present_on_idle import AgentUpdateParamsAskIfHumanPresentOnIdle
from .agent_update_params_context_endpoint import AgentUpdateParamsContextEndpoint
from .agent_update_params_conversation_speed import AgentUpdateParamsConversationSpeed
from .agent_update_params_endpointing_sensitivity import AgentUpdateParamsEndpointingSensitivity
from .agent_update_params_initial_message import AgentUpdateParamsInitialMessage
from .agent_update_params_initial_message_delay import AgentUpdateParamsInitialMessageDelay
from .agent_update_params_interrupt_sensitivity import AgentUpdateParamsInterruptSensitivity
from .agent_update_params_ivr_navigation_mode import AgentUpdateParamsIvrNavigationMode
from .agent_update_params_language import AgentUpdateParamsLanguage
from .agent_update_params_name import AgentUpdateParamsName
from .agent_update_params_noise_suppression import AgentUpdateParamsNoiseSuppression
from .agent_update_params_openai_account_connection import AgentUpdateParamsOpenaiAccountConnection
from .agent_update_params_openai_model_name_override import AgentUpdateParamsOpenaiModelNameOverride
from .agent_update_params_prompt import AgentUpdateParamsPrompt
from .agent_update_params_run_do_not_call_detection import AgentUpdateParamsRunDoNotCallDetection
from .agent_update_params_vector_database import AgentUpdateParamsVectorDatabase
from .agent_update_params_voice import AgentUpdateParamsVoice
from .agent_update_params_webhook import AgentUpdateParamsWebhook

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class AgentUpdateParams(pydantic.BaseModel):
    name: typing.Optional[AgentUpdateParamsName]
    prompt: typing.Optional[AgentUpdateParamsPrompt]
    language: typing.Optional[AgentUpdateParamsLanguage]
    actions: typing.Optional[AgentUpdateParamsActions]
    voice: typing.Optional[AgentUpdateParamsVoice]
    initial_message: typing.Optional[AgentUpdateParamsInitialMessage]
    webhook: typing.Optional[AgentUpdateParamsWebhook]
    vector_database: typing.Optional[AgentUpdateParamsVectorDatabase]
    interrupt_sensitivity: typing.Optional[AgentUpdateParamsInterruptSensitivity]
    context_endpoint: typing.Optional[AgentUpdateParamsContextEndpoint]
    noise_suppression: typing.Optional[AgentUpdateParamsNoiseSuppression]
    endpointing_sensitivity: typing.Optional[AgentUpdateParamsEndpointingSensitivity]
    ivr_navigation_mode: typing.Optional[AgentUpdateParamsIvrNavigationMode]
    conversation_speed: typing.Optional[AgentUpdateParamsConversationSpeed]
    initial_message_delay: typing.Optional[AgentUpdateParamsInitialMessageDelay]
    openai_model_name_override: typing.Optional[AgentUpdateParamsOpenaiModelNameOverride]
    ask_if_human_present_on_idle: typing.Optional[AgentUpdateParamsAskIfHumanPresentOnIdle]
    openai_account_connection: typing.Optional[AgentUpdateParamsOpenaiAccountConnection]
    run_do_not_call_detection: typing.Optional[AgentUpdateParamsRunDoNotCallDetection]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
