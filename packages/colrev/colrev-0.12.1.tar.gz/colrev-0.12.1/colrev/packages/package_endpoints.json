{
    "review_type": [
        {
            "package_endpoint_identifier": "colrev.blank",
            "endpoint": "colrev.packages.review_types.blank.BlankReview",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Blank review (:doc:`instructions </manual/packages/colrev.blank>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.conceptual_review",
            "endpoint": "colrev.packages.review_types.conceptual_review.ConceptualReview",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Conceptual review (:doc:`instructions </manual/packages/colrev.conceptual_review>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.critical_review",
            "endpoint": "colrev.packages.review_types.critical_review.CriticalReview",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Critical review (:doc:`instructions </manual/packages/colrev.critical_review>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.curated_masterdata",
            "endpoint": "colrev.packages.review_types.curated_masterdata.CuratedMasterdata",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Curated masterdata (:doc:`instructions </manual/packages/colrev.curated_masterdata>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.descriptive_review",
            "endpoint": "colrev.packages.review_types.descriptive_review.DescriptiveReview",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Descriptive review (:doc:`instructions </manual/packages/colrev.descriptive_review>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.literature_review",
            "endpoint": "colrev.packages.review_types.literature_review.LiteratureReview",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Literature review (simple) (:doc:`instructions </manual/packages/colrev.literature_review>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.meta_analysis",
            "endpoint": "colrev.packages.review_types.meta_analysis.MetaAnalysis",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Meta-analysis (:doc:`instructions </manual/packages/colrev.meta_analysis>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.narrative_review",
            "endpoint": "colrev.packages.review_types.narrative_review.NarrativeReview",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Narrative review (:doc:`instructions </manual/packages/colrev.narrative_review>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.qualitative_systematic_review",
            "endpoint": "colrev.packages.review_types.qualitative_systematic_review.QualitativeSystematicReview",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Qualitative systematic review (:doc:`instructions </manual/packages/colrev.qualitative_systematic_review>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.scientometric",
            "endpoint": "colrev.packages.review_types.scientometric.ScientometricReview",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Scientometric study (:doc:`instructions </manual/packages/colrev.scientometric>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.scoping_review",
            "endpoint": "colrev.packages.review_types.scoping_review.ScopingReview",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Scoping review (:doc:`instructions </manual/packages/colrev.scoping_review>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.theoretical_review",
            "endpoint": "colrev.packages.review_types.theoretical_review.TheoreticalReview",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Theoretical review (:doc:`instructions </manual/packages/colrev.theoretical_review>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.umbrella",
            "endpoint": "colrev.packages.review_types.umbrella_review.UmbrellaReview",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Umbrella review (:doc:`instructions </manual/packages/colrev.umbrella>`)",
            "ci_supported": true
        }
    ],
    "search_source": [
        {
            "package_endpoint_identifier": "colrev.abi_inform_proquest",
            "endpoint": "colrev.packages.search_sources.abi_inform_proquest.ABIInformProQuestSearchSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "ABI/INFORM (ProQuest) (:doc:`instructions </manual/packages/colrev.abi_inform_proquest>`)",
            "ci_supported": false,
            "search_types": [
                "DB"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.acm_digital_library",
            "endpoint": "colrev.packages.search_sources.acm_digital_library.ACMDigitalLibrarySearchSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "ACM digital Library (:doc:`instructions </manual/packages/colrev.acm_digital_library>`)",
            "ci_supported": false,
            "search_types": [
                "DB"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.ais_library",
            "endpoint": "colrev.packages.search_sources.aisel.AISeLibrarySearchSource",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "AIS electronic Library (AISeL) (:doc:`instructions </manual/packages/colrev.ais_library>`)",
            "ci_supported": true,
            "search_types": [
                "DB",
                "TOC",
                "API"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.arxiv",
            "endpoint": "colrev.packages.search_sources.arxiv.ArXivSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "SearchSource for arXiv (:doc:`instructions </manual/packages/colrev.arxiv>`)",
            "ci_supported": true,
            "search_types": [
                "API"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.colrev_project",
            "endpoint": "colrev.packages.search_sources.colrev_project.ColrevProjectSearchSource",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "CoLRev projects (:doc:`instructions </manual/packages/colrev.colrev_project>`)",
            "ci_supported": true,
            "search_types": [
                "API"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.crossref",
            "endpoint": "colrev.packages.search_sources.crossref.CrossrefSearchSource",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Crossref API (:doc:`instructions </manual/packages/colrev.crossref>`)",
            "ci_supported": true,
            "search_types": [
                "API",
                "MD",
                "TOC"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.dblp",
            "endpoint": "colrev.packages.search_sources.dblp.DBLPSearchSource",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "DBLP API (:doc:`instructions </manual/packages/colrev.dblp>`)",
            "ci_supported": true,
            "search_types": [
                "API",
                "MD",
                "TOC"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.ebsco_host",
            "endpoint": "colrev.packages.search_sources.ebsco_host.EbscoHostSearchSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "EBSCOHost (:doc:`instructions </manual/packages/colrev.ebsco_host>`)",
            "ci_supported": false,
            "search_types": [
                "DB"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.eric",
            "endpoint": "colrev.packages.search_sources.eric.ERICSearchSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "ERIC API (:doc:`instructions </manual/packages/colrev.eric>`)",
            "ci_supported": true,
            "search_types": [
                "API"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.europe_pmc",
            "endpoint": "colrev.packages.search_sources.europe_pmc.EuropePMCSearchSource",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Europe PMC (:doc:`instructions </manual/packages/colrev.europe_pmc>`)",
            "ci_supported": true,
            "search_types": [
                "API",
                "DB",
                "MD"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.files_dir",
            "endpoint": "colrev.packages.search_sources.files_dir.FilesSearchSource",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Files directories (PDFs based on GROBID) (:doc:`instructions </manual/packages/colrev.files_dir>`)",
            "ci_supported": false,
            "search_types": [
                "FILES"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.google_scholar",
            "endpoint": "colrev.packages.search_sources.google_scholar.GoogleScholarSearchSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "GoogleScholar (:doc:`instructions </manual/packages/colrev.google_scholar>`)",
            "ci_supported": false,
            "search_types": [
                "DB"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.ieee",
            "endpoint": "colrev.packages.search_sources.ieee.IEEEXploreSearchSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "IEEEXplore (:doc:`instructions </manual/packages/colrev.ieee>`)",
            "ci_supported": true,
            "search_types": [
                "API"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.jstor",
            "endpoint": "colrev.packages.search_sources.jstor.JSTORSearchSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "JSTOR (:doc:`instructions </manual/packages/colrev.jstor>`)",
            "ci_supported": false,
            "search_types": [
                "DB"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.local_index",
            "endpoint": "colrev.packages.search_sources.local_index.LocalIndexSearchSource",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "LocalIndex (:doc:`instructions </manual/packages/colrev.local_index>`)",
            "ci_supported": true,
            "search_types": [
                "API",
                "MD"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.open_alex",
            "endpoint": "colrev.packages.search_sources.open_alex.OpenAlexSearchSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "OpenAlex API (:doc:`instructions </manual/packages/colrev.open_alex>`)",
            "ci_supported": true,
            "search_types": [
                "API",
                "MD"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.open_citations_forward_search",
            "endpoint": "colrev.packages.search_sources.open_citations_forward_search.OpenCitationsSearchSource",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Forward search based on OpenCitations (:doc:`instructions </manual/packages/colrev.open_citations_forward_search>`)",
            "ci_supported": true,
            "search_types": [
                "FORWARD_SEARCH"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.open_library",
            "endpoint": "colrev.packages.search_sources.open_library.OpenLibrarySearchSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "OpenLibrary API (:doc:`instructions </manual/packages/colrev.open_library>`)",
            "ci_supported": true,
            "search_types": [
                "MD"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.pdf_backward_search",
            "endpoint": "colrev.packages.search_sources.pdf_backward_search.BackwardSearchSource",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Backward search extracting references from PDFs using GROBID (:doc:`instructions </manual/packages/colrev.pdf_backward_search>`)",
            "ci_supported": false,
            "search_types": [
                "BACKWARD_SEARCH"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.psycinfo",
            "endpoint": "colrev.packages.search_sources.psycinfo.PsycINFOSearchSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "PsycINFO (:doc:`instructions </manual/packages/colrev.psycinfo>`)",
            "ci_supported": false,
            "search_types": [
                "DB"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.pubmed",
            "endpoint": "colrev.packages.search_sources.pubmed.PubMedSearchSource",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Pubmed (:doc:`instructions </manual/packages/colrev.pubmed>`)",
            "ci_supported": true,
            "search_types": [
                "DB",
                "API",
                "MD"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.scopus",
            "endpoint": "colrev.packages.search_sources.scopus.ScopusSearchSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Scopus (:doc:`instructions </manual/packages/colrev.scopus>`)",
            "ci_supported": false,
            "search_types": [
                "DB"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.semanticscholar",
            "endpoint": "colrev.packages.search_sources.semanticscholar.SemanticScholarSearchSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Semantic Scholar API Search Source (:doc:`instructions </manual/packages/colrev.semanticscholar>`)",
            "ci_supported": true,
            "search_types": [
                "API"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.springer_link",
            "endpoint": "colrev.packages.search_sources.springer_link.SpringerLinkSearchSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Springer Link (:doc:`instructions </manual/packages/colrev.springer_link>`)",
            "ci_supported": false,
            "search_types": [
                "DB"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.synergy_datasets",
            "endpoint": "colrev.packages.search_sources.synergy_datasets.SYNERGYDatasetsSearchSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "SYNERGY-datasets (:doc:`instructions </manual/packages/colrev.synergy_datasets>`)",
            "ci_supported": false,
            "search_types": [
                "API"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.taylor_and_francis",
            "endpoint": "colrev.packages.search_sources.taylor_and_francis.TaylorAndFrancisSearchSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Taylor and Francis (:doc:`instructions </manual/packages/colrev.taylor_and_francis>`)",
            "ci_supported": false,
            "search_types": [
                "DB"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.trid",
            "endpoint": "colrev.packages.search_sources.trid.TransportResearchInternationalDocumentation",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Transport Research International Documentation (:doc:`instructions </manual/packages/colrev.trid>`)",
            "ci_supported": false,
            "search_types": [
                "DB"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.unknown_source",
            "endpoint": "colrev.packages.search_sources.unknown_source.UnknownSearchSource",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Unknown SearchSource (:doc:`instructions </manual/packages/colrev.unknown_source>`)",
            "ci_supported": false,
            "search_types": [
                "DB",
                "OTHER",
                "BACKWARD_SEARCH",
                "FORWARD_SEARCH",
                "TOC"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.web_of_science",
            "endpoint": "colrev.packages.search_sources.web_of_science.WebOfScienceSearchSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Web of Science (:doc:`instructions </manual/packages/colrev.web_of_science>`)",
            "ci_supported": false,
            "search_types": [
                "DB"
            ]
        },
        {
            "package_endpoint_identifier": "colrev.wiley",
            "endpoint": "colrev.packages.search_sources.wiley.WileyOnlineLibrarySearchSource",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Wiley (:doc:`instructions </manual/packages/colrev.wiley>`)",
            "ci_supported": false,
            "search_types": [
                "DB"
            ]
        }
    ],
    "prep": [
        {
            "package_endpoint_identifier": "colrev.add_journal_ranking",
            "endpoint": "colrev.packages.prep.add_journal_ranking.AddJournalRanking",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Class for add _journal_ranking (:doc:`instructions </manual/packages/colrev.add_journal_ranking>`)",
            "ci_supported": false
        },
        {
            "package_endpoint_identifier": "colrev.colrev_curation",
            "endpoint": "colrev.packages.prep.curation_prep.CurationPrep",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Preparation of curations (:doc:`instructions </manual/packages/colrev.colrev_curation>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.crossref",
            "endpoint": "colrev.packages.prep.crossref_metadata_prep.CrossrefMetadataPrep",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Prepares records based on crossref.org metadata (:doc:`instructions </manual/packages/colrev.crossref>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.dblp",
            "endpoint": "colrev.packages.prep.dblp_metadata_prep.DBLPMetadataPrep",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Prepares records based on dblp.org metadata (:doc:`instructions </manual/packages/colrev.dblp>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.europe_pmc",
            "endpoint": "colrev.packages.prep.europe_pmc_prep.EuropePMCMetadataPrep",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Prepares records based on Europe PCM metadata (:doc:`instructions </manual/packages/colrev.europe_pmc>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.exclude_collections",
            "endpoint": "colrev.packages.prep.exclude_collections.ExcludeCollectionsPrep",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Prepares records by excluding collection entries (e.g., proceedings) (:doc:`instructions </manual/packages/colrev.exclude_collections>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.exclude_complementary_materials",
            "endpoint": "colrev.packages.prep.exclude_complementary_materials.ExcludeComplementaryMaterialsPrep",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Prepares records by excluding complementary materials (:doc:`instructions </manual/packages/colrev.exclude_complementary_materials>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.exclude_languages",
            "endpoint": "colrev.packages.prep.exclude_languages.ExcludeLanguagesPrep",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Prepares records by excluding ones that are not in the languages_to_include (:doc:`instructions </manual/packages/colrev.exclude_languages>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.exclude_non_latin_alphabets",
            "endpoint": "colrev.packages.prep.exclude_non_latin_alphabets.ExcludeNonLatinAlphabetsPrep",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Prepares records by excluding ones that have a non-latin alphabet (:doc:`instructions </manual/packages/colrev.exclude_non_latin_alphabets>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.general_polish",
            "endpoint": "colrev.packages.prep.general_polish.GeneralPolishPrep",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Prepares records by applying polishing rules (:doc:`instructions </manual/packages/colrev.general_polish>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.get_doi_from_sem_scholar",
            "endpoint": "colrev.packages.prep.semantic_scholar_prep.SemanticScholarPrep",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Prepares records based on SemanticScholar metadata (:doc:`instructions </manual/packages/colrev.get_doi_from_sem_scholar>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.get_doi_from_urls",
            "endpoint": "colrev.packages.prep.doi_from_urls_prep.DOIFromURLsPrep",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Prepares records by retrieving its DOI from the website (URL) (:doc:`instructions </manual/packages/colrev.get_doi_from_urls>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.get_masterdata_from_citeas",
            "endpoint": "colrev.packages.prep.citeas_prep.CiteAsPrep",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Prepares records based on citeas.org metadata (:doc:`instructions </manual/packages/colrev.get_masterdata_from_citeas>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.get_masterdata_from_doi",
            "endpoint": "colrev.packages.prep.doi_metadata_prep.DOIMetadataPrep",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Prepares records based on doi.org metadata (:doc:`instructions </manual/packages/colrev.get_masterdata_from_doi>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.get_year_from_vol_iss_jour",
            "endpoint": "colrev.packages.prep.year_vol_iss_prep.YearVolIssPrep",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Prepares records based on year-volume-issue dependency (:doc:`instructions </manual/packages/colrev.get_year_from_vol_iss_jour>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.local_index",
            "endpoint": "colrev.packages.prep.local_index_prep.LocalIndexPrep",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Prepares records based on LocalIndex metadata (:doc:`instructions </manual/packages/colrev.local_index>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.open_alex",
            "endpoint": "colrev.packages.prep.open_alex_metadata_prep.OpenAlexMetadataPrep",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Prepares records based on OpenAlex metadata (:doc:`instructions </manual/packages/colrev.open_alex>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.open_library",
            "endpoint": "colrev.packages.prep.open_library_prep.OpenLibraryMetadataPrep",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Prepares records based on openlibrary.org metadata (:doc:`instructions </manual/packages/colrev.open_library>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.pubmed",
            "endpoint": "colrev.packages.prep.pubmed_metadata_prep.PubmedMetadataPrep",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Prepares records based on Pubmed metadata (:doc:`instructions </manual/packages/colrev.pubmed>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.remove_broken_ids",
            "endpoint": "colrev.packages.prep.remove_broken_ids.RemoveBrokenIDPrep",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Prepares records by removing invalid IDs DOIs/ISBNs (:doc:`instructions </manual/packages/colrev.remove_broken_ids>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.remove_urls_with_500_errors",
            "endpoint": "colrev.packages.prep.remove_error500_urls.RemoveError500URLsPrep",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Prepares records by removing urls that are not available (:doc:`instructions </manual/packages/colrev.remove_urls_with_500_errors>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.source_specific_prep",
            "endpoint": "colrev.packages.prep.source_specific_prep.SourceSpecificPrep",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Prepares records based on the prepare scripts specified by the SearchSource (:doc:`instructions </manual/packages/colrev.source_specific_prep>`)",
            "ci_supported": true
        }
    ],
    "prep_man": [
        {
            "package_endpoint_identifier": "colrev.export_man_prep",
            "endpoint": "colrev.packages.prep_man.prep_man_export.ExportManPrep",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Manual preparation based on exported and imported metadata (and PDFs if any) (:doc:`instructions </manual/packages/colrev.export_man_prep>`)",
            "ci_supported": false
        },
        {
            "package_endpoint_identifier": "colrev.prep_man_curation_jupyter",
            "endpoint": "colrev.packages.prep_man.curation_jupyter_prep_man.CurationJupyterNotebookManPrep",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Manual preparation based on a Jupyter Notebook (:doc:`instructions </manual/packages/colrev.prep_man_curation_jupyter>`)",
            "ci_supported": false
        }
    ],
    "dedupe": [
        {
            "package_endpoint_identifier": "colrev.curation_full_outlet_dedupe",
            "endpoint": "colrev.packages.dedupe.curation_dedupe.CurationDedupe",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Deduplication endpoint for curations with full journals/proceedings (:doc:`instructions </manual/packages/colrev.curation_full_outlet_dedupe>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.curation_missing_dedupe",
            "endpoint": "colrev.packages.dedupe.curation_missing_dedupe.CurationMissingDedupe",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Deduplication of remaining records in a curated metadata repository (:doc:`instructions </manual/packages/colrev.curation_missing_dedupe>`)",
            "ci_supported": false
        },
        {
            "package_endpoint_identifier": "colrev.dedupe",
            "endpoint": "colrev.packages.dedupe.dedupe.Dedupe",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Default deduplication (:doc:`instructions </manual/packages/colrev.dedupe>`)",
            "ci_supported": true
        }
    ],
    "prescreen": [
        {
            "package_endpoint_identifier": "colrev.colrev_cli_prescreen",
            "endpoint": "colrev.packages.prescreen.prescreen_cli.CoLRevCLIPrescreen",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "CLI-based prescreen (:doc:`instructions </manual/packages/colrev.colrev_cli_prescreen>`)",
            "ci_supported": false
        },
        {
            "package_endpoint_identifier": "colrev.conditional_prescreen",
            "endpoint": "colrev.packages.prescreen.conditional_prescreen.ConditionalPrescreen",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Conditional prescreen (currently: include all) (:doc:`instructions </manual/packages/colrev.conditional_prescreen>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.prescreen_table",
            "endpoint": "colrev.packages.prescreen.prescreen_table.TablePrescreen",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Table-based prescreen (exported and imported) (:doc:`instructions </manual/packages/colrev.prescreen_table>`)",
            "ci_supported": false
        },
        {
            "package_endpoint_identifier": "colrev.scope_prescreen",
            "endpoint": "colrev.packages.prescreen.scope_prescreen.ScopePrescreen",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Rule-based prescreen (scope) (:doc:`instructions </manual/packages/colrev.scope_prescreen>`)",
            "ci_supported": true
        }
    ],
    "pdf_get": [
        {
            "package_endpoint_identifier": "colrev.download_from_website",
            "endpoint": "colrev.packages.pdf_get.download_from_website.WebsiteDownload",
            "status": "RED",
            "status_linked": "RED",
            "short_description": "Get PDFs from the website (:doc:`instructions </manual/packages/colrev.download_from_website>`)",
            "ci_supported": false
        },
        {
            "package_endpoint_identifier": "colrev.local_index",
            "endpoint": "colrev.packages.pdf_get.local_index_pdf_get.LocalIndexPDFGet",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Get PDFs from LocalIndex (:doc:`instructions </manual/packages/colrev.local_index>`)",
            "ci_supported": false
        },
        {
            "package_endpoint_identifier": "colrev.unpaywall",
            "endpoint": "colrev.packages.pdf_get.unpaywall.Unpaywall",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Get PDFs from unpaywall.org (:doc:`instructions </manual/packages/colrev.unpaywall>`)",
            "ci_supported": false
        },
        {
            "package_endpoint_identifier": "colrev.website_screenshot",
            "endpoint": "colrev.packages.pdf_get.website_screenshot.WebsiteScreenshot",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Get PDFs from website screenshot (for \"online\" ENTRYTYPES) (:doc:`instructions </manual/packages/colrev.website_screenshot>`)",
            "ci_supported": false
        }
    ],
    "pdf_get_man": [
        {
            "package_endpoint_identifier": "colrev.colrev_cli_pdf_get_man",
            "endpoint": "colrev.packages.pdf_get_man.pdf_get_man_cli.CoLRevCLIPDFGetMan",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Get PDFs manually based on a CLI (:doc:`instructions </manual/packages/colrev.colrev_cli_pdf_get_man>`)",
            "ci_supported": false
        }
    ],
    "pdf_prep": [
        {
            "package_endpoint_identifier": "colrev.grobid_tei",
            "endpoint": "colrev.packages.pdf_prep.grobid_tei.GROBIDTEI",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Prepare PDFs by creating an annotated TEI document (:doc:`instructions </manual/packages/colrev.grobid_tei>`)",
            "ci_supported": false
        },
        {
            "package_endpoint_identifier": "colrev.ocrmypdf",
            "endpoint": "colrev.packages.pdf_prep.ocrmypdf.OCRMyPDF",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Prepare PDFs by applying OCR based on OCRmyPDF (:doc:`instructions </manual/packages/colrev.ocrmypdf>`)",
            "ci_supported": false
        },
        {
            "package_endpoint_identifier": "colrev.remove_coverpage",
            "endpoint": "colrev.packages.pdf_prep.remove_cover_page.PDFCoverPage",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Prepare PDFs by removing unnecessary cover pages (e.g. researchgate, publishers) (:doc:`instructions </manual/packages/colrev.remove_coverpage>`)",
            "ci_supported": false
        },
        {
            "package_endpoint_identifier": "colrev.remove_last_page",
            "endpoint": "colrev.packages.pdf_prep.remove_last_page.PDFLastPage",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Prepare PDFs by removing unnecessary last pages (e.g. copyright notices, cited-by infos) (:doc:`instructions </manual/packages/colrev.remove_last_page>`)",
            "ci_supported": false
        }
    ],
    "pdf_prep_man": [
        {
            "package_endpoint_identifier": "colrev.colrev_cli_pdf_prep_man",
            "endpoint": "colrev.packages.pdf_prep_man.pdf_prep_man_cli.CoLRevCLIPDFManPrep",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Manually prepare PDFs based on a CLI (not yet implemented) (:doc:`instructions </manual/packages/colrev.colrev_cli_pdf_prep_man>`)",
            "ci_supported": false
        }
    ],
    "screen": [
        {
            "package_endpoint_identifier": "colrev.colrev_cli_screen",
            "endpoint": "colrev.packages.screen.screen_cli.CoLRevCLIScreen",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Screen documents using a CLI (:doc:`instructions </manual/packages/colrev.colrev_cli_screen>`)",
            "ci_supported": false
        },
        {
            "package_endpoint_identifier": "colrev.screen_table",
            "endpoint": "colrev.packages.screen.screen_table.TableScreen",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Screen documents using tables (exported and imported) (:doc:`instructions </manual/packages/colrev.screen_table>`)",
            "ci_supported": false
        }
    ],
    "data": [
        {
            "package_endpoint_identifier": "colrev.bibliography_export",
            "endpoint": "colrev.packages.data.bibliography_export.BibliographyExport",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Export the sample references in Endpoint format (:doc:`instructions </manual/packages/colrev.bibliography_export>`)",
            "ci_supported": false
        },
        {
            "package_endpoint_identifier": "colrev.colrev_curation",
            "endpoint": "colrev.packages.data.colrev_curation.ColrevCuration",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "CoLRev Curation (:doc:`instructions </manual/packages/colrev.colrev_curation>`)",
            "ci_supported": true
        },
        {
            "package_endpoint_identifier": "colrev.github_pages",
            "endpoint": "colrev.packages.data.github_pages.GithubPages",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Export the literature review into a Github Page (:doc:`instructions </manual/packages/colrev.github_pages>`)",
            "ci_supported": false
        },
        {
            "package_endpoint_identifier": "colrev.obsidian",
            "endpoint": "colrev.packages.data.obsidian.Obsidian",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Export the sample into an Obsidian database (:doc:`instructions </manual/packages/colrev.obsidian>`)",
            "ci_supported": false
        },
        {
            "package_endpoint_identifier": "colrev.paper_md",
            "endpoint": "colrev.packages.data.paper_md.PaperMarkdown",
            "status": "|MATURING|",
            "status_linked": "|MATURING|",
            "short_description": "Synthesize the literature in a markdown paper (:doc:`instructions </manual/packages/colrev.paper_md>`)",
            "ci_supported": false
        },
        {
            "package_endpoint_identifier": "colrev.prisma",
            "endpoint": "colrev.packages.data.prisma.PRISMA",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Create a PRISMA diagram (:doc:`instructions </manual/packages/colrev.prisma>`)",
            "ci_supported": false
        },
        {
            "package_endpoint_identifier": "colrev.structured",
            "endpoint": "colrev.packages.data.structured.StructuredData",
            "status": "|EXPERIMENTAL|",
            "status_linked": "|EXPERIMENTAL|",
            "short_description": "Summarize the literature in a structured data extraction (a table) (:doc:`instructions </manual/packages/colrev.structured>`)",
            "ci_supported": false
        }
    ]
}
