[tox]
labels =
    static = pre-commit, mypy
    tests = tests-unit, tests-e2e, tests-extras, doctests
isolated_build = true

[testenv]
description = run the pytest tests under {basepython}
package = wheel
wheel_build_env = .pkg
setenv =
    PYTHONDONTWRITEBYTECODE=1
    PYTHONHASHSEED=0
passenv =
    CI
    COVERAGE_*
    GITHUB_*
    PYTEST_*
parallel_show_output = true
deps =
    diff-cover
    covdefaults
    pytest
    pytest-cov
    pytest-socket
    # e2e
    kaleido
    # extras
    beautifulsoup4
    minify-html
commands =
    pytest: pytest {posargs}
    tests-unit: pytest tests/unit --cov={envsitepackagesdir}{/}ridgeplot {posargs:}
    tests-unit: diff-cover --compare-branch={env:DIFF_AGAINST:origin/main} coverage.xml
    tests-e2e: pytest tests/e2e {posargs:}
    tests-extras: pytest tests/extras {posargs:}
    doctests: pytest --doctest-modules src {posargs:}

[testenv:pre-commit]
description = run code style and linting checks with pre-commit
passenv =
    {[testenv]passenv}
    PRE_COMMIT_HOME
    XDG_CACHE_HOME
    SSH_AUTH_SOCK
skip_install = true
deps = pre-commit
# To update the pre-commit hooks, run: `pre-commit autoupdate`
commands =
    pre-commit run --all-files --show-diff-on-failure {posargs:}

[testenv:mypy]
description = run type checks with mypy
deps =
    # mypy needs to inherit other environment dependencies in
    # order to infer types for code in tests, docs, etc...
    {[testenv]deps}
    {[testenv:docs-static]deps}
    # mypy
    mypy
    # Third-party stubs
    types-beautifulsoup4
    types-python-dateutil
    types-pytz
    types-PyYAML
    types-requests
    types-tqdm
    pandas-stubs
commands =
    mypy --config-file=mypy.ini --cache-dir=/dev/null --no-incremental --strict {posargs:}

[testenv:docs-{live,static}]
description = generate Sphinx (live/static) HTML documentation
setenv =
    {[testenv]setenv}
    PYTHONPATH={env:PYTHONPATH}{:}{toxinidir}/extras
deps = -r requirements/docs.txt
allowlist_externals = make
commands =
    make --directory=docs clean
    live: make --directory=docs livehtml
    static: make --directory=docs html
            python "bin/open_in_browser.py" "docs/build/html/index.html"

[testenv:release-notes]
description = extract release notes from docs/reference/changelog.md
skip_install = true
deps =
    markdown-it-py
    mdformat
commands = python bin/extract_latest_release_notes.py

[testenv:publish-pypi-{test,prod}]
description = build and upload the source and wheel package to (test/prod) PyPI
deps =
    build
    twine
allowlist_externals = rm
passenv =
    {[testenv]passenv}
    TWINE_PASSWORD
commands =
    rm -rf dist/
    python -m build
    twine check --strict dist/*
    test: twine upload --verbose --repository testpypi dist/*
    prod: twine upload --verbose dist/*
