Metadata-Version: 2.1
Name: postnl-sdk
Version: 1.0.2
Summary: Collection of PostNL API's for ecommerce processes.
Author-email: PostNL <apimatic@postnl.nl>
Project-URL: Documentation, https://developer.postnl.nl/
Keywords: PostNL,SDK,API,ecommerce
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: apimatic-core ~=0.2.0
Requires-Dist: apimatic-core-interfaces ~=0.1.0
Requires-Dist: apimatic-requests-client-adapter ~=0.1.0
Requires-Dist: enum34 >=1.1.10,~=1.1
Provides-Extra: testutils
Requires-Dist: pytest >=7.2.2 ; extra == 'testutils'


# Getting Started with PostNL

## Introduction

This is an API description. Add as many details as you like.

## Install the Package

The package is compatible with Python versions `3 >=3.7, <= 3.11`.
Install the package from PyPi using the following pip command:

```python
pip install postnl-sdk==1.0.2
```

You can also view the package at:
https://pypi.python.org/pypi/postnl-sdk/1.0.2

## Test the SDK

You can test the generated SDK and the server with test cases. `unittest` is used as the testing framework and `pytest` is used as the test runner. You can run the tests as follows:

Navigate to the root directory of the SDK and run the following commands

```
pip install -r test-requirements.txt
pytest
```

## Initialize the API Client

**_Note:_** Documentation for the client can be found [here.](doc/client.md)

The following parameters are configurable for the API Client:

| Parameter | Type | Description |
|  --- | --- | --- |
| `environment` | `Environment` | The API environment. <br> **Default: `Environment.PRODUCTION_SERVER`** |
| `http_client_instance` | `HttpClient` | The Http Client passed from the sdk user for making requests |
| `override_http_client_configuration` | `bool` | The value which determines to override properties of the passed Http Client from the sdk user |
| `http_call_back` | `HttpCallBack` | The callback value that is invoked before and after an HTTP call is made to an endpoint |
| `timeout` | `float` | The value to use for connection timeout. <br> **Default: 60** |
| `max_retries` | `int` | The number of times to retry an endpoint call if it fails. <br> **Default: 3** |
| `backoff_factor` | `float` | A backoff factor to apply between attempts after the second try. <br> **Default: 2** |
| `retry_statuses` | `Array of int` | The http statuses on which retry is to be done. <br> **Default: [408, 413, 429, 500, 502, 503, 504, 521, 522, 524]** |
| `retry_methods` | `Array of string` | The http methods on which retry is to be done. <br> **Default: ['GET', 'PUT']** |
| `custom_header_authentication_credentials` | [`CustomHeaderAuthenticationCredentials`](__base_path/$a/custom-header-signature.md) | The credential object for Custom Header Signature |

The API client can be initialized as follows:

```python
client = PostnlClient(
    custom_header_authentication_credentials=CustomHeaderAuthenticationCredentials(
        apikey='apikey'
    )
)
```

API calls return an `ApiResponse` object that includes the following fields:

| Field | Description |
|  --- | --- |
| `status_code` | Status code of the HTTP response |
| `reason_phrase` | Reason phrase of the HTTP response |
| `headers` | Headers of the HTTP response as a dictionary |
| `text` | The body of the HTTP response as a string |
| `request` | HTTP request info |
| `errors` | Errors, if they exist |
| `body` | The deserialized body of the HTTP response |

## Environments

The SDK can be configured to use a different environment for making API calls. Available environments are:

### Fields

| Name | Description |
|  --- | --- |
| Production server | **Default** |
| Non-Production server | - |

## Authorization

This API uses the following authentication schemes.

* [`APIKeyHeader (Custom Header Signature)`](__base_path/$a/custom-header-signature.md)

## List of APIs

* [Postalcodecheck](doc/controllers/postalcodecheck.md)
* [Track Trace](doc/controllers/track-trace.md)
* [Barcode](doc/controllers/barcode.md)
* [Checkout](doc/controllers/checkout.md)
* [Confirming](doc/controllers/confirming.md)
* [Deliverydate](doc/controllers/deliverydate.md)
* [Labelling](doc/controllers/labelling.md)
* [Locations](doc/controllers/locations.md)
* [Shipment](doc/controllers/shipment.md)
* [Timeframes](doc/controllers/timeframes.md)

## Classes Documentation

* [Utility Classes](doc/utility-classes.md)
* [HttpResponse](doc/http-response.md)
* [HttpRequest](doc/http-request.md)

