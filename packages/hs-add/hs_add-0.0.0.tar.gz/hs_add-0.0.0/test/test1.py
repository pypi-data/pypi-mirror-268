

# 给定的点列表
points =[(306.4868910136758, 217.07903032699443, 0.9987069368362427, 0), (338.0571428832114, 251.4381737044395, 0.9985874891281128, 1), (319.09268062942675, 199.56479165732276, 0.9983822107315063, 2), (257.17928915383584, 342.2444812019729, 0.9982926249504089, 3), (340.5113674101718, 234.37015767603336, 0.9978857636451721, 4), (257.0677334935194, 316.14045668793995, 0.997750461101532, 5), (257.40240047446855, 329.4155802655892, 0.9974718689918518, 6), (257.17928915383584, 367.5676160937912, 0.9973939657211304, 7), (439.3496824504845, 143.67540583881635, 0.9970118999481201, 8), (325.22824194682767, 269.06396803442755, 0.996626615524292, 9), (408.33720888253083, 143.67540583881635, 0.9959869980812073, 10), (376.9900683336281, 143.56385017849993, 0.9959434866905212, 11), (345.9775947656744, 143.67540583881635, 0.9956566095352173, 12), (256.95617783320307, 354.85027081772387, 0.9934864044189453, 13), (314.18423157550603, 143.67540583881635, 0.9929654598236084, 14)]
# 按照分数降序排列坐标点集
sorted_by_score = sorted(points, key=lambda x: x[2], reverse=True)

chosen_points = []  # 存储选取的点

for current_idx, current_point in enumerate(sorted_by_score):
    if len(chosen_points) >= 5:  # 已选取足够数量的点则退出循环
        break

    valid_point = True
    for point in chosen_points:
        # 检查当前点与已选取点的距离是否符合要求
        if abs(current_point[0] - point[0]) <= 50 and abs(current_point[1] - point[1]) <= 50:
            valid_point = False
            break

    if valid_point:
        chosen_points.append(current_point)  # 将符合条件的点加入选取列表

print(chosen_points)


