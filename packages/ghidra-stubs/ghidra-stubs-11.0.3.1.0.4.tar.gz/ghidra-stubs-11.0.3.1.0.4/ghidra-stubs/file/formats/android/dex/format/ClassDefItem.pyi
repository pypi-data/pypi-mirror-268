import ghidra.app.util.bin
import ghidra.file.formats.android.dex.format
import ghidra.program.model.data
import ghidra.util.task
import java.lang


class ClassDefItem(object, ghidra.app.util.bin.StructConverter):
    ASCII: ghidra.program.model.data.DataType = char
    BYTE: ghidra.program.model.data.DataType = byte
    DWORD: ghidra.program.model.data.DataType = dword
    IBO32: ghidra.program.model.data.DataType = IBO32DataType: typedef ImageBaseOffset32 pointer32
    IBO64: ghidra.program.model.data.DataType = IBO64DataType: typedef ImageBaseOffset64 pointer64
    POINTER: ghidra.program.model.data.DataType = pointer
    QWORD: ghidra.program.model.data.DataType = qword
    SLEB128: ghidra.program.model.data.SignedLeb128DataType = sleb128
    STRING: ghidra.program.model.data.DataType = string
    ULEB128: ghidra.program.model.data.UnsignedLeb128DataType = uleb128
    UTF16: ghidra.program.model.data.DataType = unicode
    UTF8: ghidra.program.model.data.DataType = string-utf8
    VOID: ghidra.program.model.data.DataType = void
    WORD: ghidra.program.model.data.DataType = word



    def __init__(self, __a0: ghidra.app.util.bin.BinaryReader, __a1: ghidra.file.formats.android.dex.format.DexHeader): ...



    def equals(self, __a0: object) -> bool: ...

    def getAccessFlags(self) -> int: ...

    def getAnnotationsDirectoryItem(self) -> ghidra.file.formats.android.dex.format.AnnotationsDirectoryItem: ...

    def getAnnotationsOffset(self) -> int: ...

    def getClass(self) -> java.lang.Class: ...

    def getClassDataItem(self) -> ghidra.file.formats.android.dex.format.ClassDataItem: ...

    def getClassDataOffset(self) -> int: ...

    def getClassIndex(self) -> int: ...

    def getInterfaces(self) -> ghidra.file.formats.android.dex.format.TypeList: ...

    def getInterfacesOffset(self) -> int: ...

    def getSourceFileIndex(self) -> int: ...

    def getStaticValues(self) -> ghidra.file.formats.android.dex.format.EncodedArrayItem: ...

    def getStaticValuesOffset(self) -> int: ...

    def getSuperClassIndex(self) -> int: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toDataType(self) -> ghidra.program.model.data.DataType: ...

    @overload
    def toString(self) -> unicode: ...

    @overload
    def toString(self, __a0: ghidra.file.formats.android.dex.format.DexHeader, __a1: int, __a2: ghidra.util.task.TaskMonitor) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def accessFlags(self) -> int: ...

    @property
    def annotationsDirectoryItem(self) -> ghidra.file.formats.android.dex.format.AnnotationsDirectoryItem: ...

    @property
    def annotationsOffset(self) -> int: ...

    @property
    def classDataItem(self) -> ghidra.file.formats.android.dex.format.ClassDataItem: ...

    @property
    def classDataOffset(self) -> int: ...

    @property
    def classIndex(self) -> int: ...

    @property
    def interfaces(self) -> ghidra.file.formats.android.dex.format.TypeList: ...

    @property
    def interfacesOffset(self) -> int: ...

    @property
    def sourceFileIndex(self) -> int: ...

    @property
    def staticValues(self) -> ghidra.file.formats.android.dex.format.EncodedArrayItem: ...

    @property
    def staticValuesOffset(self) -> int: ...

    @property
    def superClassIndex(self) -> int: ...