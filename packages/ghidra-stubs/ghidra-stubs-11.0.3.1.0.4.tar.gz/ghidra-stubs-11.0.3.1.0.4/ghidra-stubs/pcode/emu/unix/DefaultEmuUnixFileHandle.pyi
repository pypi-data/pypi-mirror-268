import ghidra.pcode.emu.unix
import java.lang


class DefaultEmuUnixFileHandle(object, ghidra.pcode.emu.unix.EmuUnixFileDescriptor):
    FD_STDERR: int = 2
    FD_STDIN: int = 0
    FD_STDOUT: int = 1



    def __init__(self, __a0: ghidra.pcode.emu.PcodeMachine, __a1: ghidra.program.model.lang.CompilerSpec, __a2: ghidra.pcode.emu.unix.EmuUnixFile, __a3: java.util.Set, __a4: ghidra.pcode.emu.unix.EmuUnixUser): ...



    def checkReadable(self) -> None: ...

    def checkWritable(self) -> None: ...

    def close(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getFile(self) -> ghidra.pcode.emu.unix.EmuUnixFile: ...

    def getOffset(self) -> object: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def read(self, __a0: object) -> object: ...

    def seek(self, __a0: object) -> None: ...

    def stat(self) -> ghidra.pcode.emu.unix.EmuUnixFileStat: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def write(self, __a0: object) -> object: ...

    @property
    def file(self) -> ghidra.pcode.emu.unix.EmuUnixFile: ...

    @property
    def offset(self) -> object: ...