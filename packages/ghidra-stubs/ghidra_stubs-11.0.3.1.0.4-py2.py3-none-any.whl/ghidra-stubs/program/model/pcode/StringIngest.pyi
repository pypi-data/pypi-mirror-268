import ghidra.program.model.pcode
import java.io
import java.lang


class StringIngest(object, ghidra.program.model.pcode.ByteIngest):




    @overload
    def __init__(self): ...

    @overload
    def __init__(self, max: int, src: unicode): ...



    def clear(self) -> None: ...

    def endIngest(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def ingestStream(self, inStream: java.io.InputStream) -> None: ...

    def isEmpty(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def open(self, max: int, src: unicode) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def empty(self) -> bool: ...