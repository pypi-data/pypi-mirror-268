import ghidra.pcode.emu.unix
import ghidra.pcode.exec
import java.lang


class EmuUnixFile(object):








    def checkReadable(self, __a0: ghidra.pcode.emu.unix.EmuUnixUser) -> None: ...

    def checkWritable(self, __a0: ghidra.pcode.emu.unix.EmuUnixUser) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getPathname(self) -> unicode: ...

    def getStat(self) -> ghidra.pcode.emu.unix.EmuUnixFileStat: ...

    def hashCode(self) -> int: ...

    def isReadable(self, __a0: ghidra.pcode.emu.unix.EmuUnixUser) -> bool: ...

    def isWritable(self, __a0: ghidra.pcode.emu.unix.EmuUnixUser) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def read(self, __a0: ghidra.pcode.exec.PcodeArithmetic, __a1: object, __a2: object) -> object: ...

    def toString(self) -> unicode: ...

    def truncate(self) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def write(self, __a0: ghidra.pcode.exec.PcodeArithmetic, __a1: object, __a2: object) -> object: ...

    @property
    def pathname(self) -> unicode: ...

    @property
    def stat(self) -> ghidra.pcode.emu.unix.EmuUnixFileStat: ...