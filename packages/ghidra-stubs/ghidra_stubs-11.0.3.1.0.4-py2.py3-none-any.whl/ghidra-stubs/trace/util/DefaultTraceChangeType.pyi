import ghidra.framework.model
import ghidra.trace.util
import java.lang


class DefaultTraceChangeType(object, ghidra.trace.util.TraceChangeType):




    def __init__(self): ...



    def cast(self, __a0: ghidra.framework.model.DomainObjectChangeRecord) -> ghidra.trace.util.TraceChangeRecord: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    @staticmethod
    def getName(__a0: int) -> unicode: ...

    def getSubType(self) -> int: ...

    def getType(self) -> int: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def subType(self) -> int: ...

    @property
    def type(self) -> int: ...