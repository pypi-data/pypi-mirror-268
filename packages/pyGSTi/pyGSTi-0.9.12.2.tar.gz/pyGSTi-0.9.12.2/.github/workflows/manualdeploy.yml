# This workflow performs all the deployment steps to PyPi, and is intended to be run manually
# since the automatic deployment fails to trigger so often.

name: Manually deploy new version on pypi.org

on:
  # Allow running manually from Actions tab -- this is the *only* way this action is intended to be run
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # to fetch all branches and *tags* (needed to get version number correctly)
  
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.10'
          
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.2
        env:
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-*
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BEFORE_ALL_LINUX: ./.github/ci-scripts/before_install.sh

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # to fetch all branches and *tags* (needed to get version number correctly)

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.10'

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Publish package on PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
