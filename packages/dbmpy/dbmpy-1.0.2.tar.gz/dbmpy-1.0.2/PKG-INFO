Metadata-Version: 2.1
Name: dbmpy
Version: 1.0.2
Summary: Open source python3 library to manage SQLite3 databases
Author-email: xLitus <xLitus@protestant.com>
Project-URL: Homepage, https://github.com/xLitus/dbmpy
Project-URL: Issues, https://github.com/xLitus/dbmpy/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown

```py
'            ████████▄  ▀█████████▄    ▄▄▄▄███▄▄▄▄      ▄███████▄ ▄██   ▄  
            ███   ▀███   ███    ███ ▄██▀▀▀███▀▀▀██▄   ███    ███ ███   ██▄
            ███    ███   ███    ███ ███   ███   ███   ███    ███ ███▄▄▄███
            ███    ███  ▄███▄▄▄██▀  ███   ███   ███   ███    ███ ▀▀▀▀▀▀███
            ███    ███ ▀▀███▀▀▀██▄  ███   ███   ███ ▀█████████▀  ▄██   ███
            ███    ███   ███    ██▄ ███   ███   ███   ███        ███   ███
            ███   ▄███   ███    ███ ███   ███   ███   ███        ███   ███
            ████████▀  ▄█████████▀   ▀█   ███   █▀   ▄████▀       ▀█████▀             
           𝑂𝑝𝑒𝑛 𝑆𝑜𝑢𝑟𝑐𝑒 𝑙𝑖𝑏𝑟𝑎𝑟𝑦 𝑡𝑜 𝑖𝑛𝑡𝑒𝑟𝑎𝑐𝑡 𝑤𝑖𝑡𝘩 𝑎 𝑆𝑄𝐿𝑖𝑡𝑒 𝑑𝑎𝑡𝑎𝑏𝑎𝑠𝑒, 𝑝𝑟𝑜𝑣𝑖𝑑𝑖𝑛𝑔 𝑚𝑒𝑡𝘩𝑜𝑑𝑠 𝑓𝑜𝑟           
           𝑎𝑑𝑑𝑖𝑛𝑔, 𝑑𝑒𝑙𝑒𝑡𝑖𝑛𝑔, 𝑒𝑑𝑖𝑡𝑖𝑛𝑔, 𝑎𝑛𝑑 𝑠𝑒𝑎𝑟𝑐𝘩𝑖𝑛𝑔 𝑢𝑠𝑒𝑟 𝑑𝑎𝑡𝑎 𝑖𝑛 𝑡𝘩𝑒 𝑑𝑎𝑡𝑎𝑏𝑎𝑠𝑒.           '
```

<div align="center">

 ![PyPI - Main](https://img.shields.io/pypi/v/dbmpy)
 ![PyPI - License](https://img.shields.io/pypi/l/dbmpy)

</div>
 
 ---
 
 ### Overview
 
 dbmpy is a Python library designed for interacting with SQLite databases. It provides a convenient interface for performing common operations such as adding, deleting, editing, and searching for data within an SQLite database.
 
 ## Features
 
 - **Simple Interface:** Easy-to-use methods for database interaction.
 - **Context Management:** Automatically handles database connection opening and closing.
 - **Error Handling:** Built-in error handling for robustness.
 - **Supports Basic CRUD Operations:** Supports Create, Read, Update, and Delete operations on database records.
 
 ## Installation
 
 You can install dbtcpy using pip:
 
 ```bash
 pip install dbmpy
 ```
 
 ## Usage
 
 ### Initialization
 
 ```python
 from dbmpy import dbtcpy
 
 # Initialize the dbtcpy object with the name of your SQLite database
 db = dbtcpy("my_database.db")
 ```
 
 ### Adding a User
 
 ```python
 # Define user data
 user_data = {
     "username": "john_doe",
     "password": "password123"
 }
 
 # Add the user to the database
 db.add(user_data)
 ```
 
 ### Deleting a User
 
 ```python
 # Delete a user by their ID
 db.delete(1)
 ```
 
 ### Editing User Data
 
 ```python
 # Update user information
 new_data = {
     "username": "jane doe",
     "password": "newpassword"
 }
 db.edit(1, new_data)
 ```
 
 ### Retrieving User Data
 
 ```python
 # Retrieve user information by ID
 user = db.show(1)
 print(user)
 ```
 
 ### Searching for Users
 
 ```python
 # Search for users based on specific criteria
 users = db.search(username="john_doe")
 print(users)
 ```
 
 ## Additional Resources
 
 - [PyPI Package](https://pypi.org/project/dbmpy)
 - [GitHub Repository](https://github.com/xLitus/dbmpy)
 
 ---
 
 *Enjoy using dbtcpy for seamless SQLite database interaction in your Python projects! If you encounter any issues or have suggestions for improvements, feel free to contribute to the GitHub repository or reach out to the developer community.*
