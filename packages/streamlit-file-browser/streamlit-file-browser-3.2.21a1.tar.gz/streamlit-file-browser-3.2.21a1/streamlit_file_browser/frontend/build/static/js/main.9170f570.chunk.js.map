{"version":3,"sources":["actions.jsx","StFileBrowser.tsx","index.tsx"],"names":["Actions","props","selectedItems","isFolder","icons","nameFilter","canCreateFolder","onCreateFolder","canRenameFile","onRenameFile","canRenameFolder","onRenameFolder","canDeleteFile","onDeleteFile","canDeleteFolder","onDeleteFolder","canDownloadFile","onDownloadFile","canDownloadFolder","onDownloadFolder","canChooseFile","onChooseFile","canChooseFolder","onChooseFolder","actions","length","selectedItemsAction","filter","item","action","Set","actionText","React","createElement","className","Loading","push","key","onClick","href","role","Folder","itemsWithoutKeyDerived","find","keyDerived","Rename","Delete","Download","aria-hidden","defaultProps","StreamlitEventType","noticeStreamlit","event","Streamlit","setComponentValue","FileBrowserStaticServer","StreamlitComponentBase","constructor","super","args","onResized","size","this","ajustHeight","render","IframeResizer","Object","assign","checkOrigin","autoResize","frameBorder","style","width","src","static_file_server_path","revoke_step","setFrameHeight","componentDidMount","path","window","addEventListener","_event$data","_event$data2","_event$data3","_event$data4","_event$data5","data","_event$data6","_event$data7","_event$data8","_event$data9","_event$data10","file","get","name","create_time","update_time","access_time","type","SELECT_FILE","target","SELECT_FOLDER","show_choose_file","CHOOSE_FILE","componentDidUpdate","FileBrowserNative","folderOpenHandler","opts","folderCloseHandler","fileSelectedHandler","ignore_file_select_event","files","downlandHandler","keys","includes","forEach","_a$parentNode","url","URL","artifacts_download_site","toString","filename","substring","lastIndexOf","a","document","download","body","appendChild","click","parentNode","removeChild","DOWNLOAD","deleteFileHandler","fileKey","console","log","DELETE_FILE","remainingFiles","chooseHandler","convertFiles","map","modified","noop","Fragment","that","FileBrowser","showActionBar","canFilter","detailRenderer","Icons","FontAwesome","onFolderOpen","onFolderClose","onSelect","actionRenderer","_len","arguments","Array","_key","show_download_file","show_delete_file","i","root","getElementById","height","Math","min","clientHeight","scrollHeight","offsetHeight","setTimeout","StreamlitFileBrowserNative","withStreamlitConnection","StreamlitFileBrowserStaticServer","FileBrowserWrapper","ReactDOM","StrictMode","StFileBrowser"],"mappings":"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","file":"static/js/main.9170f570.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Actions = (props) => {\n  const {\n    selectedItems,\n    isFolder,\n    icons,\n    nameFilter,\n\n    canCreateFolder,\n    onCreateFolder,\n\n    canRenameFile,\n    onRenameFile,\n\n    canRenameFolder,\n    onRenameFolder,\n\n    canDeleteFile,\n    onDeleteFile,\n\n    canDeleteFolder,\n    onDeleteFolder,\n\n    canDownloadFile,\n    onDownloadFile,\n\n    canDownloadFolder,\n    onDownloadFolder,\n\n    canChooseFile,\n    onChooseFile,\n\n    canChooseFolder,\n    onChooseFolder,\n  } = props\n\n  /** @type any */\n  let actions = []\n\n  if (selectedItems.length) {\n    // Something is selected. Build custom actions depending on what it is.\n    const selectedItemsAction = selectedItems.filter(item => item.action)\n    if (selectedItemsAction.length === selectedItems.length && [...new Set(selectedItemsAction)].length === 1) {\n      // Selected item has an active action against it. Disable all other actions.\n      let actionText\n      switch (selectedItemsAction[0].action) {\n        case 'delete':\n          actionText = 'Deleting ...'\n          break\n\n        case 'rename':\n          actionText = 'Renaming ...'\n          break\n\n        default:\n          actionText = 'Moving ...'\n          break\n      }\n\n      actions = (\n        // TODO: Enable plugging in custom spinner.\n        <div className=\"item-actions\">\n          {icons.Loading} {actionText}\n        </div>\n      )\n    } else {\n      if (isFolder && canCreateFolder && !nameFilter) {\n        actions.push(\n          <li key=\"action-add-folder\">\n            <a\n              onClick={onCreateFolder}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Folder}\n              &nbsp;Add Subfolder\n            </a>\n          </li>\n        )\n      }\n\n      const itemsWithoutKeyDerived = selectedItems.find(item => !item.keyDerived)\n      if (!itemsWithoutKeyDerived && !isFolder && canRenameFile && selectedItems.length === 1) {\n        actions.push(\n          <li key=\"action-rename\">\n            <a\n              onClick={onRenameFile}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Rename}\n              &nbsp;Rename\n            </a>\n          </li>\n        )\n      } else if (!itemsWithoutKeyDerived && isFolder && canRenameFolder) {\n        actions.push(\n          <li key=\"action-rename\">\n            <a\n              onClick={onRenameFolder}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Rename}\n              &nbsp;Rename\n            </a>\n          </li>\n        )\n      }\n\n      if (!itemsWithoutKeyDerived && !isFolder && canDeleteFile) {\n        actions.push(\n          <li key=\"action-delete\">\n            <a\n              onClick={onDeleteFile}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Delete}\n              &nbsp;Delete\n            </a>\n          </li>\n        )\n      }\n      // else if (!itemsWithoutKeyDerived && isFolder && canDeleteFolder) {\n      //   actions.push(\n      //     <li key=\"action-delete\">\n      //       <a\n      //         onClick={onDeleteFolder}\n      //         href=\"#\"\n      //         role=\"button\"\n      //       >\n      //         {icons.Delete}\n      //         &nbsp;Delete\n      //       </a>\n      //     </li>\n      //   )\n      // }\n\n      if ((!isFolder && canDownloadFile) || (isFolder && canDownloadFolder)) {\n        actions.push(\n          <li key=\"action-download\">\n            <a\n              onClick={isFolder ? onDownloadFolder : onDownloadFile}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Download}\n              &nbsp;Download\n            </a>\n          </li>\n        )\n      }\n\n      if ((!isFolder && canChooseFile) || (isFolder && canChooseFolder)) {\n        actions.push(\n          <li key=\"action-choose\">\n            <a\n              onClick={isFolder ? onChooseFolder : onChooseFile}\n              href=\"#\"\n              role=\"button\"\n            >\n              <i className=\"fa fa-plus\" aria-hidden=\"true\" />\n              &nbsp;Choose\n            </a>\n          </li>\n        )\n      }\n\n      if (actions.length) {\n        actions = (<ul className=\"item-actions\">{actions}</ul>)\n      } else {\n        actions = (<div className=\"item-actions\">&nbsp;</div>)\n      }\n    }\n  } else {\n    // Nothing selected: We're in the 'root' folder. Only allowed action is adding a folder.\n    if (canCreateFolder && !nameFilter) {\n      actions.push(\n        <li key=\"action-add-folder\">\n          <a\n            onClick={onCreateFolder}\n            href=\"#\"\n            role=\"button\"\n          >\n            {icons.Folder}\n            &nbsp;Add Folder\n          </a>\n        </li>\n      )\n    }\n\n    if (actions.length) {\n      actions = (<ul className=\"item-actions\">{actions}</ul>)\n    } else {\n      actions = (<div className=\"item-actions\">&nbsp;</div>)\n    }\n  }\n\n  return actions\n}\n\nActions.propTypes = {\n  selectedItems: PropTypes.arrayOf(PropTypes.object),\n  isFolder: PropTypes.bool,\n  icons: PropTypes.object,\n  nameFilter: PropTypes.string,\n\n  canCreateFolder: PropTypes.bool,\n  onCreateFolder: PropTypes.func,\n\n  canRenameFile: PropTypes.bool,\n  onRenameFile: PropTypes.func,\n\n  canRenameFolder: PropTypes.bool,\n  onRenameFolder: PropTypes.func,\n\n  canDeleteFile: PropTypes.bool,\n  onDeleteFile: PropTypes.func,\n\n  canDeleteFolder: PropTypes.bool,\n  onDeleteFolder: PropTypes.func,\n\n  canDownloadFile: PropTypes.bool,\n  onDownloadFile: PropTypes.func,\n\n  canDownloadFolder: PropTypes.bool,\n  onDownloadFolder: PropTypes.func,\n\n  canChooseFile: PropTypes.bool,\n  onChooseFile: PropTypes.func,\n\n  canChooseFolder: PropTypes.bool,\n  onChooseFolder: PropTypes.func,\n}\n\nActions.defaultProps = {\n  selectedItems: [],\n  isFolder: false,\n  icons: {},\n  nameFilter: '',\n\n  canCreateFolder: false,\n  onCreateFolder: null,\n\n  canRenameFile: false,\n  onRenameFile: null,\n\n  canRenameFolder: false,\n  onRenameFolder: null,\n\n  canDeleteFile: false,\n  onDeleteFile: null,\n\n  canDeleteFolder: false,\n  onDeleteFolder: null,\n\n  canDownloadFile: false,\n  onDownloadFile: null,\n\n  canDownloadFolder: false,\n  onDownloadFolder: null,\n\n  canChooseFile: false,\n  onChooseFile: null,\n\n  canChooseFolder: false,\n  onChooseFolder: null,\n}\n\nexport default Actions\n","import React from \"react\"\nimport {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  ComponentProps,\n} from \"streamlit-component-lib\"\nimport FileBrowser, {\n  Icons,\n  FileBrowserFile,\n  FileBrowserFolder,\n} from \"react-keyed-file-browser\"\n\nimport get from 'lodash.get'\nimport IframeResizer from 'iframe-resizer-react'\nimport Actions from \"./actions\"\nimport \"react-keyed-file-browser/dist/react-keyed-file-browser.css\"\nimport \"font-awesome/css/font-awesome.min.css\"\n\ninterface File {\n  path: string\n  name?: string\n  size?: number\n  create_time?: number\n  update_time?: number\n  access_time?: number\n}\n\nenum StreamlitEventType {\n  SELECT_FILE = \"SELECT_FILE\",\n  SELECT_FOLDER = \"SELECT_FOLDER\",\n  DOWNLOAD = \"DOWNLOAD\",\n  DELETE_FILE = \"DELETE_FILE\",\n  DELETE_FOLDER = \"DELETE_FOLDER\",\n  RENAME_FOLDER = \"RENAME_FOLDER\",\n  RENAME_FILE = \"RENAME_FILE\",\n  CREATE_FILE = \"CREATE_FILE\",\n  CREATE_FOLDER = \"CREATE_FOLDER\",\n  MOVE_FILE = \"MOVE_FILE\",\n  MOVE_FOLDER = \"MOVE_FOLDER\",\n  CHOOSE_FILE = \"CHOOSE_FILE\",\n}\n\ninterface StreamlitEvent {\n  type: StreamlitEventType\n  target: File | File[]\n}\n\ninterface State {\n  numClicks: number\n  isFocused: boolean\n}\n\ninterface IArgs {\n  files: File[]\n  path: string\n  artifacts_download_site: string\n  show_download_file: boolean\n  show_delete_file: boolean\n  show_choose_file: boolean\n  show_new_folder: boolean\n  show_upload_file: boolean\n  ignore_file_select_event: boolean\n  static_file_server_path: string\n}\n\nconst noticeStreamlit = (event: StreamlitEvent) =>\n  Streamlit.setComponentValue(event)\n\nclass FileBrowserStaticServer extends StreamlitComponentBase<State> {\n  private args: IArgs\n  \n  constructor(props: ComponentProps) {\n    super(props)\n    this.args = props.args\n  }\n\n  ajustHeight(revoke_step?: number) {\n    Streamlit.setFrameHeight()\n  }\n  \n  componentDidMount(): void {\n    const root = this.args.path\n    const args = this.args;\n    window.addEventListener('message', function(event) {\n      // console.log('从 iframe 中传递过来的点击事件:', event.data);\n      if (\n        event.data?.event === \"filebrowser_file_selected\" ||\n        event.data?.event === \"filebrowser_dir_selected\" ||\n        event.data?.event === \"filebrowser_file_double_selected\" ||\n        event.data?.event === \"filebrowser_path_changed\" ||\n        event.data?.event === \"filebrowser_file_choose\"\n      ) {\n        const file: File = {\n          path: get(event, 'data.data.file.path', ''),\n        }\n        get(event, 'data.data.file.name', '') && (file.name = get(event, 'data.data.file.name', ''))\n        get(event, 'data.data.file.size', 0) && (file.size = get(event, 'data.data.file.size', 0))\n        get(event, 'data.data.file.create_time', 0) && (file.create_time = get(event, 'data.data.file.create_time', 0))\n        get(event, 'data.data.file.update_time', 0) && (file.update_time = get(event, 'data.data.file.update_time', 0))\n        get(event, 'data.data.file.access_time', 0) && (file.access_time = get(event, 'data.data.file.access_time', 0))\n\n        event.data?.event === \"filebrowser_file_selected\" && noticeStreamlit({ type: StreamlitEventType.SELECT_FILE, target: file })\n        event.data?.event === \"filebrowser_dir_selected\" && noticeStreamlit({ type: StreamlitEventType.SELECT_FOLDER, target: file })\n        const { show_choose_file } = args;\n        event.data?.event === \"filebrowser_file_double_selected\" && show_choose_file && noticeStreamlit({ type: StreamlitEventType.CHOOSE_FILE, target: [file] })\n        event.data?.event === \"filebrowser_file_choose\" && show_choose_file && noticeStreamlit({ type: StreamlitEventType.CHOOSE_FILE, target: [file] })\n        event.data?.event === \"filebrowser_path_changed\" && noticeStreamlit({ type: StreamlitEventType.SELECT_FOLDER, target: file })\n      }\n    });\n    this.ajustHeight()\n  }\n\n  componentDidUpdate() {\n    this.ajustHeight()\n  }\n\n  onResized = (size: any) => {\n    this.ajustHeight()\n  }\n\n  public render = () => {\n    return (\n      <IframeResizer\n        {...this.args}\n        checkOrigin={false}\n        autoResize\n        onResized={this.onResized}\n        frameBorder={0}\n        style={{ width: '100%' }}\n        src={this.args.static_file_server_path}\n      />\n    )\n\n  }\n}\n  \nclass FileBrowserNative extends StreamlitComponentBase<State> {\n  private args: IArgs\n\n  constructor(props: ComponentProps) {\n    super(props)\n    this.args = props.args\n  }\n\n  ajustHeight(revoke_step?: number) {\n    const root = document.getElementById(\"root\")\n    if (root) {\n      const height = Math.min(\n        root.clientHeight,\n        root.scrollHeight,\n        root.offsetHeight\n      )\n      Streamlit.setFrameHeight(height - (revoke_step ? revoke_step : 0))\n      setTimeout(Streamlit.setFrameHeight, 1)\n    }\n  }\n\n  componentDidMount() {\n    this.ajustHeight()\n  }\n\n  componentDidUpdate() {\n    this.ajustHeight()\n  }\n\n  folderOpenHandler = (opts: FileBrowserFolder) => this.ajustHeight()\n  folderCloseHandler = (opts: FileBrowserFolder) => this.ajustHeight()\n\n  fileSelectedHandler = (opts: FileBrowserFile) => {\n    if (!this.args.ignore_file_select_event) {\n      const file = this.args.files.find((file) => file.path === opts.key)\n      file &&\n        noticeStreamlit({ type: StreamlitEventType.SELECT_FILE, target: file })\n    }\n  }\n\n  downlandHandler = (keys: string[]) => {\n    const files = this.args.files.filter((file) => keys.includes(file.path))\n    files.forEach((file) => {\n      let url = new URL(file.path, this.args.artifacts_download_site).toString()\n      let filename = url.substring(url.lastIndexOf(\"/\") + 1)\n      let a = document.createElement(\"a\")\n      a.target = \"_blank\"\n      a.href = url\n      a.download = filename\n      document.body.appendChild(a)\n      a.click()\n      a.parentNode?.removeChild(a)\n    })\n    files.length &&\n      noticeStreamlit({ type: StreamlitEventType.DOWNLOAD, target: files })\n  }\n\n  deleteFileHandler = (fileKey: string | string[]) => {\n    const files = this.args.files.filter((file) => typeof fileKey === 'string' ? fileKey === file.path : fileKey.includes(file.path))\n    console.log(\"deleteFileHandler\", \"key\", fileKey, \"files \", files)\n\n    files.length &&\n      noticeStreamlit({ type: StreamlitEventType.DELETE_FILE, target: files })\n\n    const remainingFiles = this.args.files.filter((file) => typeof fileKey === 'string' ? fileKey !== file.path : !fileKey.includes(file.path))\n    this.args.files = remainingFiles\n  }\n\n  chooseHandler = (keys: string[]) => {\n    const files = this.args.files.filter((file) => keys.includes(file.path))\n    files.length &&\n      noticeStreamlit({ type: StreamlitEventType.CHOOSE_FILE, target: files })\n  }\n\n  convertFiles = (files: File[]): FileBrowserFile[] =>\n    files.map((file) => ({\n      key: file.path,\n      modified: file.update_time || 0,\n      size: file.size || 0,\n    }))\n\n  noop = () => <></>\n  public render = () => {\n    let that = this\n    return (\n      <div>\n        <FileBrowser\n          {...this.args}\n          showActionBar\n          canFilter={true}\n          detailRenderer={this.noop}\n          icons={Icons.FontAwesome(4)}\n          files={this.convertFiles(this.args.files)}\n          onFolderOpen={this.folderOpenHandler}\n          onFolderClose={this.folderCloseHandler}\n          onSelect={this.fileSelectedHandler}\n          onDownloadFile={this.downlandHandler}\n          onDeleteFile={this.deleteFileHandler}\n          actionRenderer={(...args: any) => {\n            return Actions({\n              ...args[0],\n              ...{\n                canChooseFile: that.args.show_choose_file,\n                canDownloadFile:\n                  that.args.show_download_file &&\n                  that.args.artifacts_download_site,\n                canDeleteFile: that.args.show_delete_file,\n                onChooseFile: (keys: string[]) =>\n                  that.chooseHandler(\n                    args[0].selectedItems.map((i: any) => i.key)\n                  ),\n                onDeleteFile: (fileKey: string[]) =>\n                  that.deleteFileHandler(\n                      args[0].selectedItems.map((i: any) => i.key)\n                  ),\n              },\n            })\n          }}\n        />\n      </div>\n    )\n  }\n}\nconst StreamlitFileBrowserNative = withStreamlitConnection(FileBrowserNative)\nconst StreamlitFileBrowserStaticServer = withStreamlitConnection(FileBrowserStaticServer)\n\nclass FileBrowserWrapper extends StreamlitComponentBase<State> {\n  private args: IArgs\n  \n  constructor(props: ComponentProps) {\n    super(props)\n    this.args = props.args\n  }\n\n  public render(): React.ReactNode {\n    if (this.args.static_file_server_path) {\n      return (\n        <div>\n          <StreamlitFileBrowserStaticServer {...this.props} />\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <StreamlitFileBrowserNative {...this.props} />\n        </div>\n      )\n    }\n  }\n}\n\nexport default withStreamlitConnection(FileBrowserWrapper)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport StFileBrowser from \"./StFileBrowser\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StFileBrowser />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}