[tool.poetry]
name = "cookieplone"
version = "0"
description = "Create Plone projects, addons, documentation with ease!"
authors = ["Plone Community <dev@plone.org>"]
repository = "https://github.com/plone/cookieplone"
documentation = "https://plone.github.io/cookieplone/"
readme = "README.md"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python",
  "Topic :: Software Development",
  "Topic :: Software Development :: Code Generators"
]
packages = [
  {include = "cookieplone"}
]

[tool.poetry.dependencies]
python = "^3.10"
cookiecutter = "^2.6.0"
semver = "^3.0.2"
typer = {extras = ["all"], version = "^0.12.3"}
packaging = "^24.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-cov = "^5.0.0"
pre-commit = "^3.7.0"
tox = "^4.14.2"

[tool.poetry.scripts]
cookieplone = 'cookieplone.__main__:main'

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py310"
line-length = 88
fix = true
lint.select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
]
lint.ignore = [
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["cookieplone"]


[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.poetry-version-plugin]
source = "init"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
